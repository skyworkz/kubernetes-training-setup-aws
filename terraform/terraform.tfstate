{
  "version": 4,
  "terraform_version": "1.0.9",
  "serial": 290,
  "lineage": "99b08569-86a1-b1e7-917e-ca0118e8032b",
  "outputs": {
    "cluster_endpoint": {
      "value": "https://54487F59FC6D9EF387BEA17A97E0F2CE.gr7.eu-west-1.eks.amazonaws.com",
      "type": "string"
    },
    "cluster_security_group_id": {
      "value": "sg-06824fbfd65bec2ab",
      "type": "string"
    },
    "config_map_aws_auth": {
      "value": [
        {
          "binary_data": {},
          "data": {
            "mapAccounts": "[]\n",
            "mapRoles": "- \"groups\":\n  - \"system:bootstrappers\"\n  - \"system:nodes\"\n  \"rolearn\": \"arn:aws:iam::740877495907:role/skyworkz-k8s-training-RktmQKS920211027131715026400000009\"\n  \"username\": \"system:node:{{EC2PrivateDNSName}}\"\n- \"groups\":\n  - \"system:masters\"\n  \"rolearn\": \"arn:aws:iam::740877495907:role/AWSReservedSSO_AdministratorAccess_f8a30ed3ca508212\"\n  \"username\": \"sso-admin\"\n",
            "mapUsers": "- \"groups\":\n  - \"system:masters\"\n  \"userarn\": \"arn:aws:iam::740877495907:user/benny\"\n  \"username\": \"benny\"\n"
          },
          "id": "kube-system/aws-auth",
          "metadata": [
            {
              "annotations": {},
              "generate_name": "",
              "generation": 0,
              "labels": {
                "app.kubernetes.io/managed-by": "Terraform",
                "terraform.io/module": "terraform-aws-modules.eks.aws"
              },
              "name": "aws-auth",
              "namespace": "kube-system",
              "resource_version": "302754",
              "uid": "032ad21d-a4f7-40c2-8065-5470e90882b7"
            }
          ]
        }
      ],
      "type": [
        "tuple",
        [
          [
            "object",
            {
              "binary_data": [
                "map",
                "string"
              ],
              "data": [
                "map",
                "string"
              ],
              "id": "string",
              "metadata": [
                "list",
                [
                  "object",
                  {
                    "annotations": [
                      "map",
                      "string"
                    ],
                    "generate_name": "string",
                    "generation": "number",
                    "labels": [
                      "map",
                      "string"
                    ],
                    "name": "string",
                    "namespace": "string",
                    "resource_version": "string",
                    "uid": "string"
                  }
                ]
              ]
            }
          ]
        ]
      ]
    },
    "kubectl_config": {
      "value": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: https://54487F59FC6D9EF387BEA17A97E0F2CE.gr7.eu-west-1.eks.amazonaws.com\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1UQXlOekV6TVRBME5Gb1hEVE14TVRBeU5URXpNVEEwTkZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT09HCk9vRXlXVHJDSUQwb2t6eWZXYStTM3pnZkI4QW1RZkJGS3lGbDUwU0RSOXVrSlZJZUFsVUtjaTUzQUJ6djM0NXcKRHZRNHFDeUQ4UE93Z2FhRkVtOUcvWlgvY1psRHFPRERWd3VqQ2t6cGoxN3hRSisrclNiUUREdER1bTIrcDhtLwpiamtIMU1MK2dRT0ZJeWhuOUNxZjd0YUlJakdBajdWQkxwcEdzVlRnNDZLZVVmZHBhRTY5VUZTMVYzcmVaZnVxCmRFWHFCM05JT0xBRjdSRkdkSWRPS21zaGtRVTNERUVHNng1QklTNWlwb2hScHd1ZGdzKzRVbjIyc21oRWlUcmsKNDRNTVJFcVV0b21NL0RsaGNHSk41OUdjUGwyditjeklTMkV1SHRVVmZtdDRudUhtcXhha1ptSFVFRjhWVU12NwpoWHkrR3JYZy82UDhrRURXekZFQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZNRzUwcERrQ0VIdSt6YlNWVlM4em4wTkVFQTZNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCMWZxNXZBNXo5TVlkenZrNnRDOXBYVWU5eStqSU51a2dwc2txSDkvb0Erb2tTTlFXdwpOWXQySGVmWVJJQXZ2RE1JY3AxUlhEakFYRnJ6YVpmZVpGa3dyQ2pEVGd6WjlGeE42dkFCSWZzazloR3NMVHF4CkIzaDhGMWcwQ1luQWNDand2WlhTN2VTbVp1ZmZnbnZKNVp1NGR0MlU5WTg3em51WGQ0c2txbHRoT043bGNTdE0KdE4zeW95bi9wamVPWkptdm9SaFpUR1U2WjZCRWhORWltOEc2UmJrN0Y4WjBURkdidlFabWRIQ21mc0NPZGdpNwpDWVBsZEQyR2pYcldLdTdPZmVXRm5qaWxQYlFmUkVybGo3UTRHRFJicXlkdGpZd2hQaGtheFFydnZVdElFNXlTCkJJZXB1UjgvT2Uwek1xcmQzTmZONjluc1BwQ0Y2VU1WNVRzcQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n  name: eks_skyworkz-k8s-training-RktmQKS9\n\ncontexts:\n- context:\n    cluster: eks_skyworkz-k8s-training-RktmQKS9\n    user: eks_skyworkz-k8s-training-RktmQKS9\n  name: eks_skyworkz-k8s-training-RktmQKS9\n\ncurrent-context: eks_skyworkz-k8s-training-RktmQKS9\n\nusers:\n- name: eks_skyworkz-k8s-training-RktmQKS9\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: aws-iam-authenticator\n      args:\n        - \"token\"\n        - \"-i\"\n        - \"skyworkz-k8s-training-RktmQKS9\"\n",
      "type": "string"
    },
    "node_groups": {
      "value": {
        "od1": {
          "ami_type": "AL2_x86_64",
          "arn": "arn:aws:eks:eu-west-1:740877495907:nodegroup/skyworkz-k8s-training-RktmQKS9/skyworkz-k8s-training-RktmQKS9-od120211130134746818500000003/e4beb88c-fc20-309c-4b1d-bba12e6e1b42",
          "capacity_type": "ON_DEMAND",
          "cluster_name": "skyworkz-k8s-training-RktmQKS9",
          "disk_size": 50,
          "force_update_version": null,
          "id": "skyworkz-k8s-training-RktmQKS9:skyworkz-k8s-training-RktmQKS9-od120211130134746818500000003",
          "instance_types": [
            "m5.large"
          ],
          "labels": {
            "GithubOrg": "skyworkz",
            "GithubRepo": "kubernetes-training-setup-aws",
            "NodeGroup": "od1"
          },
          "launch_template": [],
          "node_group_name": "skyworkz-k8s-training-RktmQKS9-od120211130134746818500000003",
          "node_group_name_prefix": "skyworkz-k8s-training-RktmQKS9-od1",
          "node_role_arn": "arn:aws:iam::740877495907:role/skyworkz-k8s-training-RktmQKS920211027131715026400000009",
          "release_version": "1.20.11-20211117",
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {
                  "name": "eks-e4beb88c-fc20-309c-4b1d-bba12e6e1b42"
                }
              ],
              "remote_access_security_group_id": ""
            }
          ],
          "scaling_config": [
            {
              "desired_size": 1,
              "max_size": 10,
              "min_size": 0
            }
          ],
          "status": "ACTIVE",
          "subnet_ids": [
            "subnet-025fb71362182eb78",
            "subnet-07b1cd357b572312a",
            "subnet-0d94daf896771ec40"
          ],
          "tags": {
            "GithubOrg": "skyworkz",
            "GithubRepo": "kubernetes-training-setup-aws",
            "NodeType": "ondemand"
          },
          "tags_all": {
            "GithubOrg": "skyworkz",
            "GithubRepo": "kubernetes-training-setup-aws",
            "NodeType": "ondemand"
          },
          "taint": [],
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "update_config": [
            {
              "max_unavailable": 0,
              "max_unavailable_percentage": 50
            }
          ],
          "version": "1.20"
        },
        "pe": {
          "ami_type": "AL2_x86_64",
          "arn": "arn:aws:eks:eu-west-1:740877495907:nodegroup/skyworkz-k8s-training-RktmQKS9/skyworkz-k8s-training-RktmQKS9-pe20211130164730315800000001/22beb8df-41b2-5a05-4e15-dac50d05cdb6",
          "capacity_type": "ON_DEMAND",
          "cluster_name": "skyworkz-k8s-training-RktmQKS9",
          "disk_size": 50,
          "force_update_version": null,
          "id": "skyworkz-k8s-training-RktmQKS9:skyworkz-k8s-training-RktmQKS9-pe20211130164730315800000001",
          "instance_types": [
            "m5.large"
          ],
          "labels": {
            "GithubOrg": "skyworkz",
            "GithubRepo": "kubernetes-training-setup-aws",
            "NodeGroup": "pe",
            "tenant": "kubetrain"
          },
          "launch_template": [],
          "node_group_name": "skyworkz-k8s-training-RktmQKS9-pe20211130164730315800000001",
          "node_group_name_prefix": "skyworkz-k8s-training-RktmQKS9-pe",
          "node_role_arn": "arn:aws:iam::740877495907:role/skyworkz-k8s-training-RktmQKS920211027131715026400000009",
          "release_version": "1.20.11-20211117",
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {
                  "name": "eks-22beb8df-41b2-5a05-4e15-dac50d05cdb6"
                }
              ],
              "remote_access_security_group_id": ""
            }
          ],
          "scaling_config": [
            {
              "desired_size": 2,
              "max_size": 4,
              "min_size": 1
            }
          ],
          "status": "ACTIVE",
          "subnet_ids": [
            "subnet-025fb71362182eb78",
            "subnet-07b1cd357b572312a",
            "subnet-0d94daf896771ec40"
          ],
          "tags": {
            "GithubOrg": "skyworkz",
            "GithubRepo": "kubernetes-training-setup-aws",
            "NodeType": "ondemand"
          },
          "tags_all": {
            "GithubOrg": "skyworkz",
            "GithubRepo": "kubernetes-training-setup-aws",
            "NodeType": "ondemand"
          },
          "taint": [
            {
              "effect": "NO_SCHEDULE",
              "key": "tenant",
              "value": "kubetrain"
            }
          ],
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "update_config": [
            {
              "max_unavailable": 0,
              "max_unavailable_percentage": 50
            }
          ],
          "version": "1.20"
        },
        "spot1": {
          "ami_type": "AL2_x86_64",
          "arn": "arn:aws:eks:eu-west-1:740877495907:nodegroup/skyworkz-k8s-training-RktmQKS9/skyworkz-k8s-training-RktmQKS9-spot120211201152049715300000001/a0bebb4a-c61d-d231-48e1-4f290c49d989",
          "capacity_type": "SPOT",
          "cluster_name": "skyworkz-k8s-training-RktmQKS9",
          "disk_size": 50,
          "force_update_version": null,
          "id": "skyworkz-k8s-training-RktmQKS9:skyworkz-k8s-training-RktmQKS9-spot120211201152049715300000001",
          "instance_types": [
            "m5.large"
          ],
          "labels": {
            "GithubOrg": "skyworkz",
            "GithubRepo": "kubernetes-training-setup-aws",
            "NodeGroup": "spot1"
          },
          "launch_template": [],
          "node_group_name": "skyworkz-k8s-training-RktmQKS9-spot120211201152049715300000001",
          "node_group_name_prefix": "skyworkz-k8s-training-RktmQKS9-spot1",
          "node_role_arn": "arn:aws:iam::740877495907:role/skyworkz-k8s-training-RktmQKS920211027131715026400000009",
          "release_version": "1.20.11-20211117",
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {
                  "name": "eks-a0bebb4a-c61d-d231-48e1-4f290c49d989"
                }
              ],
              "remote_access_security_group_id": ""
            }
          ],
          "scaling_config": [
            {
              "desired_size": 1,
              "max_size": 10,
              "min_size": 0
            }
          ],
          "status": "ACTIVE",
          "subnet_ids": [
            "subnet-025fb71362182eb78",
            "subnet-07b1cd357b572312a",
            "subnet-0d94daf896771ec40"
          ],
          "tags": {
            "GithubOrg": "skyworkz",
            "GithubRepo": "kubernetes-training-setup-aws",
            "NodeType": "spot"
          },
          "tags_all": {
            "GithubOrg": "skyworkz",
            "GithubRepo": "kubernetes-training-setup-aws",
            "NodeType": "spot"
          },
          "taint": [],
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "update_config": [
            {
              "max_unavailable": 0,
              "max_unavailable_percentage": 50
            }
          ],
          "version": "1.20"
        }
      },
      "type": [
        "object",
        {
          "od1": [
            "object",
            {
              "ami_type": "string",
              "arn": "string",
              "capacity_type": "string",
              "cluster_name": "string",
              "disk_size": "number",
              "force_update_version": "bool",
              "id": "string",
              "instance_types": [
                "set",
                "string"
              ],
              "labels": [
                "map",
                "string"
              ],
              "launch_template": [
                "list",
                [
                  "object",
                  {
                    "id": "string",
                    "name": "string",
                    "version": "string"
                  }
                ]
              ],
              "node_group_name": "string",
              "node_group_name_prefix": "string",
              "node_role_arn": "string",
              "release_version": "string",
              "remote_access": [
                "list",
                [
                  "object",
                  {
                    "ec2_ssh_key": "string",
                    "source_security_group_ids": [
                      "set",
                      "string"
                    ]
                  }
                ]
              ],
              "resources": [
                "list",
                [
                  "object",
                  {
                    "autoscaling_groups": [
                      "list",
                      [
                        "object",
                        {
                          "name": "string"
                        }
                      ]
                    ],
                    "remote_access_security_group_id": "string"
                  }
                ]
              ],
              "scaling_config": [
                "list",
                [
                  "object",
                  {
                    "desired_size": "number",
                    "max_size": "number",
                    "min_size": "number"
                  }
                ]
              ],
              "status": "string",
              "subnet_ids": [
                "set",
                "string"
              ],
              "tags": [
                "map",
                "string"
              ],
              "tags_all": [
                "map",
                "string"
              ],
              "taint": [
                "set",
                [
                  "object",
                  {
                    "effect": "string",
                    "key": "string",
                    "value": "string"
                  }
                ]
              ],
              "timeouts": [
                "object",
                {
                  "create": "string",
                  "delete": "string",
                  "update": "string"
                }
              ],
              "update_config": [
                "list",
                [
                  "object",
                  {
                    "max_unavailable": "number",
                    "max_unavailable_percentage": "number"
                  }
                ]
              ],
              "version": "string"
            }
          ],
          "pe": [
            "object",
            {
              "ami_type": "string",
              "arn": "string",
              "capacity_type": "string",
              "cluster_name": "string",
              "disk_size": "number",
              "force_update_version": "bool",
              "id": "string",
              "instance_types": [
                "set",
                "string"
              ],
              "labels": [
                "map",
                "string"
              ],
              "launch_template": [
                "list",
                [
                  "object",
                  {
                    "id": "string",
                    "name": "string",
                    "version": "string"
                  }
                ]
              ],
              "node_group_name": "string",
              "node_group_name_prefix": "string",
              "node_role_arn": "string",
              "release_version": "string",
              "remote_access": [
                "list",
                [
                  "object",
                  {
                    "ec2_ssh_key": "string",
                    "source_security_group_ids": [
                      "set",
                      "string"
                    ]
                  }
                ]
              ],
              "resources": [
                "list",
                [
                  "object",
                  {
                    "autoscaling_groups": [
                      "list",
                      [
                        "object",
                        {
                          "name": "string"
                        }
                      ]
                    ],
                    "remote_access_security_group_id": "string"
                  }
                ]
              ],
              "scaling_config": [
                "list",
                [
                  "object",
                  {
                    "desired_size": "number",
                    "max_size": "number",
                    "min_size": "number"
                  }
                ]
              ],
              "status": "string",
              "subnet_ids": [
                "set",
                "string"
              ],
              "tags": [
                "map",
                "string"
              ],
              "tags_all": [
                "map",
                "string"
              ],
              "taint": [
                "set",
                [
                  "object",
                  {
                    "effect": "string",
                    "key": "string",
                    "value": "string"
                  }
                ]
              ],
              "timeouts": [
                "object",
                {
                  "create": "string",
                  "delete": "string",
                  "update": "string"
                }
              ],
              "update_config": [
                "list",
                [
                  "object",
                  {
                    "max_unavailable": "number",
                    "max_unavailable_percentage": "number"
                  }
                ]
              ],
              "version": "string"
            }
          ],
          "spot1": [
            "object",
            {
              "ami_type": "string",
              "arn": "string",
              "capacity_type": "string",
              "cluster_name": "string",
              "disk_size": "number",
              "force_update_version": "bool",
              "id": "string",
              "instance_types": [
                "set",
                "string"
              ],
              "labels": [
                "map",
                "string"
              ],
              "launch_template": [
                "list",
                [
                  "object",
                  {
                    "id": "string",
                    "name": "string",
                    "version": "string"
                  }
                ]
              ],
              "node_group_name": "string",
              "node_group_name_prefix": "string",
              "node_role_arn": "string",
              "release_version": "string",
              "remote_access": [
                "list",
                [
                  "object",
                  {
                    "ec2_ssh_key": "string",
                    "source_security_group_ids": [
                      "set",
                      "string"
                    ]
                  }
                ]
              ],
              "resources": [
                "list",
                [
                  "object",
                  {
                    "autoscaling_groups": [
                      "list",
                      [
                        "object",
                        {
                          "name": "string"
                        }
                      ]
                    ],
                    "remote_access_security_group_id": "string"
                  }
                ]
              ],
              "scaling_config": [
                "list",
                [
                  "object",
                  {
                    "desired_size": "number",
                    "max_size": "number",
                    "min_size": "number"
                  }
                ]
              ],
              "status": "string",
              "subnet_ids": [
                "set",
                "string"
              ],
              "tags": [
                "map",
                "string"
              ],
              "tags_all": [
                "map",
                "string"
              ],
              "taint": [
                "set",
                [
                  "object",
                  {
                    "effect": "string",
                    "key": "string",
                    "value": "string"
                  }
                ]
              ],
              "timeouts": [
                "object",
                {
                  "create": "string",
                  "delete": "string",
                  "update": "string"
                }
              ],
              "update_config": [
                "list",
                [
                  "object",
                  {
                    "max_unavailable": "number",
                    "max_unavailable_percentage": "number"
                  }
                ]
              ],
              "version": "string"
            }
          ]
        }
      ]
    },
    "oidc_issuer_url": {
      "value": "https://oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE",
      "type": "string"
    },
    "oidc_provider_arn": {
      "value": "arn:aws:iam::740877495907:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "eu-west-1"
            ],
            "id": "eu-west-1",
            "names": [
              "eu-west-1a",
              "eu-west-1b",
              "eu-west-1c"
            ],
            "state": null,
            "zone_ids": [
              "euw1-az2",
              "euw1-az3",
              "euw1-az1"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:eu-west-1:740877495907:cluster/skyworkz-k8s-training-RktmQKS9",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1UQXlOekV6TVRBME5Gb1hEVE14TVRBeU5URXpNVEEwTkZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT09HCk9vRXlXVHJDSUQwb2t6eWZXYStTM3pnZkI4QW1RZkJGS3lGbDUwU0RSOXVrSlZJZUFsVUtjaTUzQUJ6djM0NXcKRHZRNHFDeUQ4UE93Z2FhRkVtOUcvWlgvY1psRHFPRERWd3VqQ2t6cGoxN3hRSisrclNiUUREdER1bTIrcDhtLwpiamtIMU1MK2dRT0ZJeWhuOUNxZjd0YUlJakdBajdWQkxwcEdzVlRnNDZLZVVmZHBhRTY5VUZTMVYzcmVaZnVxCmRFWHFCM05JT0xBRjdSRkdkSWRPS21zaGtRVTNERUVHNng1QklTNWlwb2hScHd1ZGdzKzRVbjIyc21oRWlUcmsKNDRNTVJFcVV0b21NL0RsaGNHSk41OUdjUGwyditjeklTMkV1SHRVVmZtdDRudUhtcXhha1ptSFVFRjhWVU12NwpoWHkrR3JYZy82UDhrRURXekZFQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZNRzUwcERrQ0VIdSt6YlNWVlM4em4wTkVFQTZNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCMWZxNXZBNXo5TVlkenZrNnRDOXBYVWU5eStqSU51a2dwc2txSDkvb0Erb2tTTlFXdwpOWXQySGVmWVJJQXZ2RE1JY3AxUlhEakFYRnJ6YVpmZVpGa3dyQ2pEVGd6WjlGeE42dkFCSWZzazloR3NMVHF4CkIzaDhGMWcwQ1luQWNDand2WlhTN2VTbVp1ZmZnbnZKNVp1NGR0MlU5WTg3em51WGQ0c2txbHRoT043bGNTdE0KdE4zeW95bi9wamVPWkptdm9SaFpUR1U2WjZCRWhORWltOEc2UmJrN0Y4WjBURkdidlFabWRIQ21mc0NPZGdpNwpDWVBsZEQyR2pYcldLdTdPZmVXRm5qaWxQYlFmUkVybGo3UTRHRFJicXlkdGpZd2hQaGtheFFydnZVdElFNXlTCkJJZXB1UjgvT2Uwek1xcmQzTmZONjluc1BwQ0Y2VU1WNVRzcQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
              }
            ],
            "created_at": "2021-10-27 13:04:37.233 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator",
              "controllerManager",
              "scheduler"
            ],
            "endpoint": "https://54487F59FC6D9EF387BEA17A97E0F2CE.gr7.eu-west-1.eks.amazonaws.com",
            "id": "skyworkz-k8s-training-RktmQKS9",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "service_ipv4_cidr": "172.20.0.0/16"
              }
            ],
            "name": "skyworkz-k8s-training-RktmQKS9",
            "platform_version": "eks.2",
            "role_arn": "arn:aws:iam::740877495907:role/skyworkz-k8s-training-RktmQKS920211027130405760900000002",
            "status": "ACTIVE",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws"
            },
            "version": "1.20",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0545c96a506189bb1",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-06824fbfd65bec2ab"
                ],
                "subnet_ids": [
                  "subnet-025fb71362182eb78",
                  "subnet-07b1cd357b572312a",
                  "subnet-0d94daf896771ec40"
                ],
                "vpc_id": "vpc-02711e20b9190fb9e"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "skyworkz-k8s-training-RktmQKS9",
            "name": "skyworkz-k8s-training-RktmQKS9",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUEyWTc1NU5aUlFYWkczSklMJTJGMjAyMTEyMDElMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDIxMTIwMVQxNTE4NTlaJlgtQW16LUV4cGlyZXM9MCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QlM0J4LWs4cy1hd3MtaWQmWC1BbXotU2lnbmF0dXJlPTRlYTU3N2E3MmIzZDI2MTU4ZGRiNDE0YmNjYmYyMDA2MzdiMjNhMzViYzI5OGE0NDcxOGNmYzY1MjIzOWY0YTQ"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_autoscaler_assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1215268922",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::740877495907:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE:sub\": [\n            \"system:serviceaccount:kube-system:cluster-autoscaler\"\n          ]\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:kube-system:cluster-autoscaler"
                    ],
                    "variable": "oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::740877495907:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_autoscaler_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1342303187",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeLaunchTemplateVersions\",\n        \"autoscaling:TerminateInstanceInAutoScalingGroup\",\n        \"autoscaling:SetDesiredCapacity\",\n        \"autoscaling:DescribeTags\",\n        \"autoscaling:DescribeLaunchConfigurations\",\n        \"autoscaling:DescribeAutoScalingInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "autoscaling:DescribeAutoScalingGroups",
                  "autoscaling:DescribeAutoScalingInstances",
                  "autoscaling:DescribeLaunchConfigurations",
                  "autoscaling:DescribeTags",
                  "autoscaling:SetDesiredCapacity",
                  "autoscaling:TerminateInstanceInAutoScalingGroup",
                  "ec2:DescribeLaunchTemplateVersions"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "external_dns_assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2627261959",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::740877495907:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE:sub\": [\n            \"system:serviceaccount:external-dns:external-dns-sa\"\n          ]\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:external-dns:external-dns-sa"
                    ],
                    "variable": "oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::740877495907:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "external_dns_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1621011895",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"route53:ChangeResourceRecordSets\",\n      \"Resource\": \"arn:aws:route53:::hostedzone/*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"route53:ListResourceRecordSets\",\n        \"route53:ListHostedZones\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "route53:ChangeResourceRecordSets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:route53:::hostedzone/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "route53:ListHostedZones",
                  "route53:ListResourceRecordSets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "load_balancer_controller_assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3359974852",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::740877495907:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE:sub\": [\n            \"system:serviceaccount:kube-system:aws-load-balancer-controller\"\n          ]\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:kube-system:aws-load-balancer-controller"
                    ],
                    "variable": "oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::740877495907:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "cluster_autoscaler_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::740877495907:role/cluster-autoscaler-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::740877495907:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE:sub\":\"system:serviceaccount:kube-system:cluster-autoscaler\"}}}]}",
            "create_date": "2021-11-02T12:25:45Z",
            "description": "",
            "force_detach_policies": false,
            "id": "cluster-autoscaler-role",
            "inline_policy": [
              {
                "name": "cluster-autoscaler-policy",
                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeLaunchTemplateVersions\",\n        \"autoscaling:TerminateInstanceInAutoScalingGroup\",\n        \"autoscaling:SetDesiredCapacity\",\n        \"autoscaling:DescribeTags\",\n        \"autoscaling:DescribeLaunchConfigurations\",\n        \"autoscaling:DescribeAutoScalingInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}"
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "cluster-autoscaler-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA2Y755NZR35S7YEQ2U"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_iam_policy_document.cluster_autoscaler_policy",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_subnet.private",
            "random_string.suffix",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "data.aws_availability_zones.available",
            "data.aws_iam_policy_document.cluster_autoscaler_assume_role_policy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "external_dns_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::740877495907:role/external-dns-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::740877495907:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE:sub\":\"system:serviceaccount:external-dns:external-dns-sa\"}}}]}",
            "create_date": "2021-10-29T12:55:40Z",
            "description": "",
            "force_detach_policies": false,
            "id": "external-dns-role",
            "inline_policy": [
              {
                "name": "external-dns-policy",
                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"route53:ChangeResourceRecordSets\",\n      \"Resource\": \"arn:aws:route53:::hostedzone/*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"route53:ListResourceRecordSets\",\n        \"route53:ListHostedZones\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}"
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "external-dns-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA2Y755NZRX5VW2G7HN"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.cluster",
            "module.vpc.aws_vpc.this",
            "data.aws_availability_zones.available",
            "data.aws_iam_policy_document.external_dns_assume_role_policy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "data.aws_iam_policy_document.external_dns_policy",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "load_balancer_controller_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::740877495907:role/load-balancer-controller-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::740877495907:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE:sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}}}]}",
            "create_date": "2021-11-26T09:42:56Z",
            "description": "",
            "force_detach_policies": false,
            "id": "load-balancer-controller-role",
            "inline_policy": [
              {
                "name": "load-balancer-controller-policy",
                "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"iam:CreateServiceLinkedRole\",\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeAccountAttributes\",\n                \"ec2:DescribeAddresses\",\n                \"ec2:DescribeAvailabilityZones\",\n                \"ec2:DescribeInternetGateways\",\n                \"ec2:DescribeVpcs\",\n                \"ec2:DescribeVpcPeeringConnections\",\n                \"ec2:DescribeSubnets\",\n                \"ec2:DescribeSecurityGroups\",\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeNetworkInterfaces\",\n                \"ec2:DescribeTags\",\n                \"ec2:GetCoipPoolUsage\",\n                \"ec2:DescribeCoipPools\",\n                \"elasticloadbalancing:DescribeLoadBalancers\",\n                \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n                \"elasticloadbalancing:DescribeListeners\",\n                \"elasticloadbalancing:DescribeListenerCertificates\",\n                \"elasticloadbalancing:DescribeSSLPolicies\",\n                \"elasticloadbalancing:DescribeRules\",\n                \"elasticloadbalancing:DescribeTargetGroups\",\n                \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n                \"elasticloadbalancing:DescribeTargetHealth\",\n                \"elasticloadbalancing:DescribeTags\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"cognito-idp:DescribeUserPoolClient\",\n                \"acm:ListCertificates\",\n                \"acm:DescribeCertificate\",\n                \"iam:ListServerCertificates\",\n                \"iam:GetServerCertificate\",\n                \"waf-regional:GetWebACL\",\n                \"waf-regional:GetWebACLForResource\",\n                \"waf-regional:AssociateWebACL\",\n                \"waf-regional:DisassociateWebACL\",\n                \"wafv2:GetWebACL\",\n                \"wafv2:GetWebACLForResource\",\n                \"wafv2:AssociateWebACL\",\n                \"wafv2:DisassociateWebACL\",\n                \"shield:GetSubscriptionState\",\n                \"shield:DescribeProtection\",\n                \"shield:CreateProtection\",\n                \"shield:DeleteProtection\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:RevokeSecurityGroupIngress\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateSecurityGroup\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"ec2:CreateAction\": \"CreateSecurityGroup\"\n                },\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\",\n                \"ec2:DeleteTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:RevokeSecurityGroupIngress\",\n                \"ec2:DeleteSecurityGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:CreateLoadBalancer\",\n                \"elasticloadbalancing:CreateTargetGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:CreateListener\",\n                \"elasticloadbalancing:DeleteListener\",\n                \"elasticloadbalancing:CreateRule\",\n                \"elasticloadbalancing:DeleteRule\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\",\n                \"elasticloadbalancing:RemoveTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n            ],\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\",\n                \"elasticloadbalancing:RemoveTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n                \"elasticloadbalancing:SetIpAddressType\",\n                \"elasticloadbalancing:SetSecurityGroups\",\n                \"elasticloadbalancing:SetSubnets\",\n                \"elasticloadbalancing:DeleteLoadBalancer\",\n                \"elasticloadbalancing:ModifyTargetGroup\",\n                \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n                \"elasticloadbalancing:DeleteTargetGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:RegisterTargets\",\n                \"elasticloadbalancing:DeregisterTargets\"\n            ],\n            \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:SetWebAcl\",\n                \"elasticloadbalancing:ModifyListener\",\n                \"elasticloadbalancing:AddListenerCertificates\",\n                \"elasticloadbalancing:RemoveListenerCertificates\",\n                \"elasticloadbalancing:ModifyRule\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n"
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "load-balancer-controller-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA2Y755NZRW6PKILDUJ"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_iam_policy_document.load_balancer_controller_assume_role_policy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "apiservice_v1beta1_metrics_k8s_io",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "apiregistration.k8s.io/v1",
                "kind": "APIService",
                "metadata": {
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "name": "v1beta1.metrics.k8s.io"
                },
                "spec": {
                  "group": "metrics.k8s.io",
                  "groupPriorityMinimum": 100,
                  "insecureSkipTLSVerify": true,
                  "service": {
                    "name": "metrics-server",
                    "namespace": "kube-system"
                  },
                  "version": "v1beta1",
                  "versionPriority": 100
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "k8s-app": "string"
                        }
                      ],
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "group": "string",
                      "groupPriorityMinimum": "number",
                      "insecureSkipTLSVerify": "bool",
                      "service": [
                        "object",
                        {
                          "name": "string",
                          "namespace": "string"
                        }
                      ],
                      "version": "string",
                      "versionPriority": "number"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "apiregistration.k8s.io/v1",
                "kind": "APIService",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "managedFields": null,
                  "name": "v1beta1.metrics.k8s.io",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "caBundle": null,
                  "group": "metrics.k8s.io",
                  "groupPriorityMinimum": 100,
                  "insecureSkipTLSVerify": true,
                  "service": {
                    "name": "metrics-server",
                    "namespace": "kube-system",
                    "port": 443
                  },
                  "version": "v1beta1",
                  "versionPriority": 100
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "caBundle": "string",
                      "group": "string",
                      "groupPriorityMinimum": "number",
                      "insecureSkipTLSVerify": "bool",
                      "service": [
                        "object",
                        {
                          "name": "string",
                          "namespace": "string",
                          "port": "number"
                        }
                      ],
                      "version": "string",
                      "versionPriority": "number"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.data.aws_partition.current",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_eks_cluster.this",
            "module.eks.data.http.wait_for_cluster",
            "module.vpc.aws_subnet.private",
            "random_string.suffix",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "certificate_kube_system_aws_load_balancer_serving_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "Certificate",
                "metadata": {
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "name": "aws-load-balancer-serving-cert",
                  "namespace": "kube-system"
                },
                "spec": {
                  "dnsNames": [
                    "aws-load-balancer-webhook-service.kube-system.svc",
                    "aws-load-balancer-webhook-service.kube-system.svc.cluster.local"
                  ],
                  "issuerRef": {
                    "kind": "Issuer",
                    "name": "aws-load-balancer-selfsigned-issuer"
                  },
                  "secretName": "aws-load-balancer-webhook-tls"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "app.kubernetes.io/name": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "dnsNames": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "issuerRef": [
                        "object",
                        {
                          "kind": "string",
                          "name": "string"
                        }
                      ],
                      "secretName": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "Certificate",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "managedFields": null,
                  "name": "aws-load-balancer-serving-cert",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "commonName": null,
                  "dnsNames": [
                    "aws-load-balancer-webhook-service.kube-system.svc",
                    "aws-load-balancer-webhook-service.kube-system.svc.cluster.local"
                  ],
                  "duration": null,
                  "emailAddresses": null,
                  "encodeUsagesInRequest": null,
                  "ipAddresses": null,
                  "isCA": null,
                  "issuerRef": {
                    "group": null,
                    "kind": "Issuer",
                    "name": "aws-load-balancer-selfsigned-issuer"
                  },
                  "keystores": {
                    "jks": {
                      "create": null,
                      "passwordSecretRef": {
                        "key": null,
                        "name": null
                      }
                    },
                    "pkcs12": {
                      "create": null,
                      "passwordSecretRef": {
                        "key": null,
                        "name": null
                      }
                    }
                  },
                  "privateKey": {
                    "algorithm": null,
                    "encoding": null,
                    "rotationPolicy": null,
                    "size": null
                  },
                  "renewBefore": null,
                  "revisionHistoryLimit": null,
                  "secretName": "aws-load-balancer-webhook-tls",
                  "secretTemplate": {
                    "annotations": null,
                    "labels": null
                  },
                  "subject": {
                    "countries": null,
                    "localities": null,
                    "organizationalUnits": null,
                    "organizations": null,
                    "postalCodes": null,
                    "provinces": null,
                    "serialNumber": null,
                    "streetAddresses": null
                  },
                  "uris": null,
                  "usages": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "commonName": "string",
                      "dnsNames": [
                        "list",
                        "string"
                      ],
                      "duration": "string",
                      "emailAddresses": [
                        "list",
                        "string"
                      ],
                      "encodeUsagesInRequest": "bool",
                      "ipAddresses": [
                        "list",
                        "string"
                      ],
                      "isCA": "bool",
                      "issuerRef": [
                        "object",
                        {
                          "group": "string",
                          "kind": "string",
                          "name": "string"
                        }
                      ],
                      "keystores": [
                        "object",
                        {
                          "jks": [
                            "object",
                            {
                              "create": "bool",
                              "passwordSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ],
                          "pkcs12": [
                            "object",
                            {
                              "create": "bool",
                              "passwordSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "privateKey": [
                        "object",
                        {
                          "algorithm": "string",
                          "encoding": "string",
                          "rotationPolicy": "string",
                          "size": "number"
                        }
                      ],
                      "renewBefore": "string",
                      "revisionHistoryLimit": "number",
                      "secretName": "string",
                      "secretTemplate": [
                        "object",
                        {
                          "annotations": [
                            "map",
                            "string"
                          ],
                          "labels": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "subject": [
                        "object",
                        {
                          "countries": [
                            "list",
                            "string"
                          ],
                          "localities": [
                            "list",
                            "string"
                          ],
                          "organizationalUnits": [
                            "list",
                            "string"
                          ],
                          "organizations": [
                            "list",
                            "string"
                          ],
                          "postalCodes": [
                            "list",
                            "string"
                          ],
                          "provinces": [
                            "list",
                            "string"
                          ],
                          "serialNumber": "string",
                          "streetAddresses": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "uris": [
                        "list",
                        "string"
                      ],
                      "usages": [
                        "list",
                        "string"
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.http.wait_for_cluster",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.vpc.aws_subnet.private",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrole_aws_load_balancer_controller_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "creationTimestamp": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "name": "aws-load-balancer-controller-role"
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "endpoints"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "events"
                    ],
                    "verbs": [
                      "create",
                      "patch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "namespaces"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "nodes"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "pods"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "pods/status"
                    ],
                    "verbs": [
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "secrets"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "services"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "patch",
                      "update",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "services/status"
                    ],
                    "verbs": [
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "discovery.k8s.io"
                    ],
                    "resources": [
                      "endpointslices"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "elbv2.k8s.aws"
                    ],
                    "resources": [
                      "ingressclassparams"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "elbv2.k8s.aws"
                    ],
                    "resources": [
                      "targetgroupbindings"
                    ],
                    "verbs": [
                      "create",
                      "delete",
                      "get",
                      "list",
                      "patch",
                      "update",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "elbv2.k8s.aws"
                    ],
                    "resources": [
                      "targetgroupbindings/status"
                    ],
                    "verbs": [
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "extensions"
                    ],
                    "resources": [
                      "ingresses"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "patch",
                      "update",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "extensions"
                    ],
                    "resources": [
                      "ingresses/status"
                    ],
                    "verbs": [
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "networking.k8s.io"
                    ],
                    "resources": [
                      "ingressclasses"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "networking.k8s.io"
                    ],
                    "resources": [
                      "ingresses"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "patch",
                      "update",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "networking.k8s.io"
                    ],
                    "resources": [
                      "ingresses/status"
                    ],
                    "verbs": [
                      "patch",
                      "update"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "creationTimestamp": "dynamic",
                      "labels": [
                        "object",
                        {
                          "app.kubernetes.io/name": "string"
                        }
                      ],
                      "name": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "aggregationRule": {
                  "clusterRoleSelectors": null
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "managedFields": null,
                  "name": "aws-load-balancer-controller-role",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "endpoints"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "events"
                    ],
                    "verbs": [
                      "create",
                      "patch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "namespaces"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "nodes"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "pods"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "pods/status"
                    ],
                    "verbs": [
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "secrets"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "services"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "patch",
                      "update",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "services/status"
                    ],
                    "verbs": [
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "discovery.k8s.io"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "endpointslices"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "elbv2.k8s.aws"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "ingressclassparams"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "elbv2.k8s.aws"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "targetgroupbindings"
                    ],
                    "verbs": [
                      "create",
                      "delete",
                      "get",
                      "list",
                      "patch",
                      "update",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "elbv2.k8s.aws"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "targetgroupbindings/status"
                    ],
                    "verbs": [
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "extensions"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "ingresses"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "patch",
                      "update",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "extensions"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "ingresses/status"
                    ],
                    "verbs": [
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "networking.k8s.io"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "ingressclasses"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "networking.k8s.io"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "ingresses"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "patch",
                      "update",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "networking.k8s.io"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "ingresses/status"
                    ],
                    "verbs": [
                      "patch",
                      "update"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "aggregationRule": [
                    "object",
                    {
                      "clusterRoleSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrole_cluster_autoscaler",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "labels": {
                    "k8s-addon": "cluster-autoscaler.addons.k8s.io",
                    "k8s-app": "cluster-autoscaler"
                  },
                  "name": "cluster-autoscaler"
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "events",
                      "endpoints"
                    ],
                    "verbs": [
                      "create",
                      "patch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "pods/eviction"
                    ],
                    "verbs": [
                      "create"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "pods/status"
                    ],
                    "verbs": [
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resourceNames": [
                      "cluster-autoscaler"
                    ],
                    "resources": [
                      "endpoints"
                    ],
                    "verbs": [
                      "get",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "nodes"
                    ],
                    "verbs": [
                      "watch",
                      "list",
                      "get",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "namespaces",
                      "pods",
                      "services",
                      "replicationcontrollers",
                      "persistentvolumeclaims",
                      "persistentvolumes"
                    ],
                    "verbs": [
                      "watch",
                      "list",
                      "get"
                    ]
                  },
                  {
                    "apiGroups": [
                      "extensions"
                    ],
                    "resources": [
                      "replicasets",
                      "daemonsets"
                    ],
                    "verbs": [
                      "watch",
                      "list",
                      "get"
                    ]
                  },
                  {
                    "apiGroups": [
                      "policy"
                    ],
                    "resources": [
                      "poddisruptionbudgets"
                    ],
                    "verbs": [
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      "apps"
                    ],
                    "resources": [
                      "statefulsets",
                      "replicasets",
                      "daemonsets"
                    ],
                    "verbs": [
                      "watch",
                      "list",
                      "get"
                    ]
                  },
                  {
                    "apiGroups": [
                      "storage.k8s.io"
                    ],
                    "resources": [
                      "storageclasses",
                      "csinodes",
                      "csidrivers",
                      "csistoragecapacities"
                    ],
                    "verbs": [
                      "watch",
                      "list",
                      "get"
                    ]
                  },
                  {
                    "apiGroups": [
                      "batch",
                      "extensions"
                    ],
                    "resources": [
                      "jobs"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "patch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "coordination.k8s.io"
                    ],
                    "resources": [
                      "leases"
                    ],
                    "verbs": [
                      "create"
                    ]
                  },
                  {
                    "apiGroups": [
                      "coordination.k8s.io"
                    ],
                    "resourceNames": [
                      "cluster-autoscaler"
                    ],
                    "resources": [
                      "leases"
                    ],
                    "verbs": [
                      "get",
                      "update"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "k8s-addon": "string",
                          "k8s-app": "string"
                        }
                      ],
                      "name": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resourceNames": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resourceNames": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "aggregationRule": {
                  "clusterRoleSelectors": null
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-addon": "cluster-autoscaler.addons.k8s.io",
                    "k8s-app": "cluster-autoscaler"
                  },
                  "managedFields": null,
                  "name": "cluster-autoscaler",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "events",
                      "endpoints"
                    ],
                    "verbs": [
                      "create",
                      "patch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "pods/eviction"
                    ],
                    "verbs": [
                      "create"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "pods/status"
                    ],
                    "verbs": [
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": [
                      "cluster-autoscaler"
                    ],
                    "resources": [
                      "endpoints"
                    ],
                    "verbs": [
                      "get",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "nodes"
                    ],
                    "verbs": [
                      "watch",
                      "list",
                      "get",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "namespaces",
                      "pods",
                      "services",
                      "replicationcontrollers",
                      "persistentvolumeclaims",
                      "persistentvolumes"
                    ],
                    "verbs": [
                      "watch",
                      "list",
                      "get"
                    ]
                  },
                  {
                    "apiGroups": [
                      "extensions"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "replicasets",
                      "daemonsets"
                    ],
                    "verbs": [
                      "watch",
                      "list",
                      "get"
                    ]
                  },
                  {
                    "apiGroups": [
                      "policy"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "poddisruptionbudgets"
                    ],
                    "verbs": [
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      "apps"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "statefulsets",
                      "replicasets",
                      "daemonsets"
                    ],
                    "verbs": [
                      "watch",
                      "list",
                      "get"
                    ]
                  },
                  {
                    "apiGroups": [
                      "storage.k8s.io"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "storageclasses",
                      "csinodes",
                      "csidrivers",
                      "csistoragecapacities"
                    ],
                    "verbs": [
                      "watch",
                      "list",
                      "get"
                    ]
                  },
                  {
                    "apiGroups": [
                      "batch",
                      "extensions"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "jobs"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "patch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "coordination.k8s.io"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "leases"
                    ],
                    "verbs": [
                      "create"
                    ]
                  },
                  {
                    "apiGroups": [
                      "coordination.k8s.io"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": [
                      "cluster-autoscaler"
                    ],
                    "resources": [
                      "leases"
                    ],
                    "verbs": [
                      "get",
                      "update"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "aggregationRule": [
                    "object",
                    {
                      "clusterRoleSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.http.wait_for_cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrole_external_dns",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "name": "external-dns"
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "services",
                      "endpoints",
                      "pods"
                    ],
                    "verbs": [
                      "get",
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      "extensions",
                      "networking.k8s.io"
                    ],
                    "resources": [
                      "ingresses"
                    ],
                    "verbs": [
                      "get",
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "nodes"
                    ],
                    "verbs": [
                      "list",
                      "watch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "aggregationRule": {
                  "clusterRoleSelectors": null
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "external-dns",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "services",
                      "endpoints",
                      "pods"
                    ],
                    "verbs": [
                      "get",
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      "extensions",
                      "networking.k8s.io"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "ingresses"
                    ],
                    "verbs": [
                      "get",
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "nodes"
                    ],
                    "verbs": [
                      "list",
                      "watch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "aggregationRule": [
                    "object",
                    {
                      "clusterRoleSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.data.aws_partition.current",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.vpc.aws_subnet.private",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrole_system_aggregated_metrics_reader",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "labels": {
                    "k8s-app": "metrics-server",
                    "rbac.authorization.k8s.io/aggregate-to-admin": "true",
                    "rbac.authorization.k8s.io/aggregate-to-edit": "true",
                    "rbac.authorization.k8s.io/aggregate-to-view": "true"
                  },
                  "name": "system:aggregated-metrics-reader"
                },
                "rules": [
                  {
                    "apiGroups": [
                      "metrics.k8s.io"
                    ],
                    "resources": [
                      "pods",
                      "nodes"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "k8s-app": "string",
                          "rbac.authorization.k8s.io/aggregate-to-admin": "string",
                          "rbac.authorization.k8s.io/aggregate-to-edit": "string",
                          "rbac.authorization.k8s.io/aggregate-to-view": "string"
                        }
                      ],
                      "name": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "aggregationRule": {
                  "clusterRoleSelectors": null
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-app": "metrics-server",
                    "rbac.authorization.k8s.io/aggregate-to-admin": "true",
                    "rbac.authorization.k8s.io/aggregate-to-edit": "true",
                    "rbac.authorization.k8s.io/aggregate-to-view": "true"
                  },
                  "managedFields": null,
                  "name": "system:aggregated-metrics-reader",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      "metrics.k8s.io"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "pods",
                      "nodes"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "aggregationRule": [
                    "object",
                    {
                      "clusterRoleSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.vpc.aws_vpc.this",
            "random_string.suffix",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.vpc.aws_subnet.private",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_cloudwatch_log_group.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrole_system_metrics_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "name": "system:metrics-server"
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "pods",
                      "nodes",
                      "nodes/stats",
                      "namespaces",
                      "configmaps"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "k8s-app": "string"
                        }
                      ],
                      "name": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "aggregationRule": {
                  "clusterRoleSelectors": null
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "managedFields": null,
                  "name": "system:metrics-server",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "pods",
                      "nodes",
                      "nodes/stats",
                      "namespaces",
                      "configmaps"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "aggregationRule": [
                    "object",
                    {
                      "clusterRoleSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.http.wait_for_cluster",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_subnet.private"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrolebinding_aws_load_balancer_controller_rolebinding",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "name": "aws-load-balancer-controller-rolebinding"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "aws-load-balancer-controller-role"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "aws-load-balancer-controller",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "app.kubernetes.io/name": "string"
                        }
                      ],
                      "name": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "managedFields": null,
                  "name": "aws-load-balancer-controller-rolebinding",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "aws-load-balancer-controller-role"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "aws-load-balancer-controller",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_subnet.private",
            "data.aws_availability_zones.available",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.vpc.aws_vpc.this",
            "random_string.suffix",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.http.wait_for_cluster",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrolebinding_cluster_autoscaler",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "labels": {
                    "k8s-addon": "cluster-autoscaler.addons.k8s.io",
                    "k8s-app": "cluster-autoscaler"
                  },
                  "name": "cluster-autoscaler"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "cluster-autoscaler"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "cluster-autoscaler",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "k8s-addon": "string",
                          "k8s-app": "string"
                        }
                      ],
                      "name": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-addon": "cluster-autoscaler.addons.k8s.io",
                    "k8s-app": "cluster-autoscaler"
                  },
                  "managedFields": null,
                  "name": "cluster-autoscaler",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "cluster-autoscaler"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "cluster-autoscaler",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "data.aws_availability_zones.available",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "random_string.suffix",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrolebinding_external_dns_viewer",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "name": "external-dns-viewer"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "external-dns"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "external-dns-sa",
                    "namespace": "external-dns"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "external-dns-viewer",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "external-dns"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "external-dns-sa",
                    "namespace": "external-dns"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.cluster",
            "kubernetes_namespace.external-dns",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrolebinding_metrics_server_system_auth_delegator",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "name": "metrics-server:system:auth-delegator"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "system:auth-delegator"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "metrics-server",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "k8s-app": "string"
                        }
                      ],
                      "name": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "managedFields": null,
                  "name": "metrics-server:system:auth-delegator",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "system:auth-delegator"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "metrics-server",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.http.wait_for_cluster",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.data.aws_partition.current",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.vpc.aws_vpc.this",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrolebinding_system_metrics_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "name": "system:metrics-server"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "system:metrics-server"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "metrics-server",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "k8s-app": "string"
                        }
                      ],
                      "name": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "managedFields": null,
                  "name": "system:metrics-server",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "system:metrics-server"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "metrics-server",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group.cluster",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current",
            "data.aws_availability_zones.available",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.http.wait_for_cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "customresourcedefinition_ingressclassparams_elbv2_k8s_aws",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "apiextensions.k8s.io/v1",
                "kind": "CustomResourceDefinition",
                "metadata": {
                  "annotations": {
                    "controller-gen.kubebuilder.io/version": "v0.5.0"
                  },
                  "creationTimestamp": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "name": "ingressclassparams.elbv2.k8s.aws"
                },
                "spec": {
                  "group": "elbv2.k8s.aws",
                  "names": {
                    "kind": "IngressClassParams",
                    "listKind": "IngressClassParamsList",
                    "plural": "ingressclassparams",
                    "singular": "ingressclassparams"
                  },
                  "scope": "Cluster",
                  "versions": [
                    {
                      "additionalPrinterColumns": [
                        {
                          "description": "The Ingress Group name",
                          "jsonPath": ".spec.group.name",
                          "name": "GROUP-NAME",
                          "type": "string"
                        },
                        {
                          "description": "The AWS Load Balancer scheme",
                          "jsonPath": ".spec.scheme",
                          "name": "SCHEME",
                          "type": "string"
                        },
                        {
                          "description": "The AWS Load Balancer ipAddressType",
                          "jsonPath": ".spec.ipAddressType",
                          "name": "IP-ADDRESS-TYPE",
                          "type": "string"
                        },
                        {
                          "jsonPath": ".metadata.creationTimestamp",
                          "name": "AGE",
                          "type": "date"
                        }
                      ],
                      "name": "v1beta1",
                      "schema": {
                        "openAPIV3Schema": {
                          "description": "IngressClassParams is the Schema for the IngressClassParams API",
                          "properties": {
                            "apiVersion": {
                              "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "metadata": {
                              "type": "object"
                            },
                            "spec": {
                              "description": "IngressClassParamsSpec defines the desired state of IngressClassParams",
                              "properties": {
                                "group": {
                                  "description": "Group defines the IngressGroup for all Ingresses that belong to IngressClass with this IngressClassParams.",
                                  "properties": {
                                    "name": {
                                      "description": "Name is the name of IngressGroup.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "ipAddressType": {
                                  "description": "IPAddressType defines the ip address type for all Ingresses that belong to IngressClass with this IngressClassParams.",
                                  "enum": [
                                    "ipv4",
                                    "dualstack"
                                  ],
                                  "type": "string"
                                },
                                "loadBalancerAttributes": {
                                  "description": "LoadBalancerAttributes define the custom attributes to LoadBalancers for all Ingress that that belong to IngressClass with this IngressClassParams.",
                                  "items": {
                                    "description": "Attributes defines custom attributes on resources.",
                                    "properties": {
                                      "key": {
                                        "description": "The key of the attribute.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The value of the attribute.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "value"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "namespaceSelector": {
                                  "description": "NamespaceSelector restrict the namespaces of Ingresses that are allowed to specify the IngressClass with this IngressClassParams. * if absent or present but empty, it selects all namespaces.",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "items": {
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "matchLabels": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "scheme": {
                                  "description": "Scheme defines the scheme for all Ingresses that belong to IngressClass with this IngressClassParams.",
                                  "enum": [
                                    "internal",
                                    "internet-facing"
                                  ],
                                  "type": "string"
                                },
                                "tags": {
                                  "description": "Tags defines list of Tags on AWS resources provisioned for Ingresses that belong to IngressClass with this IngressClassParams.",
                                  "items": {
                                    "description": "Tag defines a AWS Tag on resources.",
                                    "properties": {
                                      "key": {
                                        "description": "The key of the tag.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The value of the tag.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "value"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "served": true,
                      "storage": true,
                      "subresources": {}
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "controller-gen.kubebuilder.io/version": "string"
                        }
                      ],
                      "creationTimestamp": "dynamic",
                      "labels": [
                        "object",
                        {
                          "app.kubernetes.io/name": "string"
                        }
                      ],
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "group": "string",
                      "names": [
                        "object",
                        {
                          "kind": "string",
                          "listKind": "string",
                          "plural": "string",
                          "singular": "string"
                        }
                      ],
                      "scope": "string",
                      "versions": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "additionalPrinterColumns": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "description": "string",
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "description": "string",
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "description": "string",
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ]
                                ]
                              ],
                              "name": "string",
                              "schema": [
                                "object",
                                {
                                  "openAPIV3Schema": [
                                    "object",
                                    {
                                      "description": "string",
                                      "properties": [
                                        "object",
                                        {
                                          "apiVersion": [
                                            "object",
                                            {
                                              "description": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "kind": [
                                            "object",
                                            {
                                              "description": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "metadata": [
                                            "object",
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "spec": [
                                            "object",
                                            {
                                              "description": "string",
                                              "properties": [
                                                "object",
                                                {
                                                  "group": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "name": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "type": "string"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "required": [
                                                        "tuple",
                                                        [
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "ipAddressType": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "enum": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "loadBalancerAttributes": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "items": [
                                                        "object",
                                                        {
                                                          "description": "string",
                                                          "properties": [
                                                            "object",
                                                            {
                                                              "key": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "value": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "type": "string"
                                                                }
                                                              ]
                                                            }
                                                          ],
                                                          "required": [
                                                            "tuple",
                                                            [
                                                              "string",
                                                              "string"
                                                            ]
                                                          ],
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "items": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "properties": [
                                                                    "object",
                                                                    {
                                                                      "key": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "operator": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "values": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "items": [
                                                                            "object",
                                                                            {
                                                                              "type": "string"
                                                                            }
                                                                          ],
                                                                          "type": "string"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "required": [
                                                                    "tuple",
                                                                    [
                                                                      "string",
                                                                      "string"
                                                                    ]
                                                                  ],
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "matchLabels": [
                                                            "object",
                                                            {
                                                              "additionalProperties": [
                                                                "object",
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "description": "string",
                                                              "type": "string"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "scheme": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "enum": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "tags": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "items": [
                                                        "object",
                                                        {
                                                          "description": "string",
                                                          "properties": [
                                                            "object",
                                                            {
                                                              "key": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "value": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "type": "string"
                                                                }
                                                              ]
                                                            }
                                                          ],
                                                          "required": [
                                                            "tuple",
                                                            [
                                                              "string",
                                                              "string"
                                                            ]
                                                          ],
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "type": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                }
                              ],
                              "served": "bool",
                              "storage": "bool",
                              "subresources": [
                                "object",
                                {}
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "apiextensions.k8s.io/v1",
                "kind": "CustomResourceDefinition",
                "metadata": {
                  "annotations": {
                    "controller-gen.kubebuilder.io/version": "v0.5.0"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "managedFields": null,
                  "name": "ingressclassparams.elbv2.k8s.aws",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "conversion": {
                    "strategy": "None",
                    "webhook": {
                      "clientConfig": {
                        "caBundle": null,
                        "service": {
                          "name": null,
                          "namespace": null,
                          "path": null,
                          "port": null
                        },
                        "url": null
                      },
                      "conversionReviewVersions": null
                    }
                  },
                  "group": "elbv2.k8s.aws",
                  "names": {
                    "categories": null,
                    "kind": "IngressClassParams",
                    "listKind": "IngressClassParamsList",
                    "plural": "ingressclassparams",
                    "shortNames": null,
                    "singular": "ingressclassparams"
                  },
                  "preserveUnknownFields": null,
                  "scope": "Cluster",
                  "versions": [
                    {
                      "additionalPrinterColumns": [
                        {
                          "description": "The Ingress Group name",
                          "format": null,
                          "jsonPath": ".spec.group.name",
                          "name": "GROUP-NAME",
                          "priority": null,
                          "type": "string"
                        },
                        {
                          "description": "The AWS Load Balancer scheme",
                          "format": null,
                          "jsonPath": ".spec.scheme",
                          "name": "SCHEME",
                          "priority": null,
                          "type": "string"
                        },
                        {
                          "description": "The AWS Load Balancer ipAddressType",
                          "format": null,
                          "jsonPath": ".spec.ipAddressType",
                          "name": "IP-ADDRESS-TYPE",
                          "priority": null,
                          "type": "string"
                        },
                        {
                          "description": null,
                          "format": null,
                          "jsonPath": ".metadata.creationTimestamp",
                          "name": "AGE",
                          "priority": null,
                          "type": "date"
                        }
                      ],
                      "deprecated": null,
                      "deprecationWarning": null,
                      "name": "v1beta1",
                      "schema": {
                        "openAPIV3Schema": {
                          "description": "IngressClassParams is the Schema for the IngressClassParams API",
                          "properties": {
                            "apiVersion": {
                              "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "metadata": {
                              "type": "object"
                            },
                            "spec": {
                              "description": "IngressClassParamsSpec defines the desired state of IngressClassParams",
                              "properties": {
                                "group": {
                                  "description": "Group defines the IngressGroup for all Ingresses that belong to IngressClass with this IngressClassParams.",
                                  "properties": {
                                    "name": {
                                      "description": "Name is the name of IngressGroup.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "ipAddressType": {
                                  "description": "IPAddressType defines the ip address type for all Ingresses that belong to IngressClass with this IngressClassParams.",
                                  "enum": [
                                    "ipv4",
                                    "dualstack"
                                  ],
                                  "type": "string"
                                },
                                "loadBalancerAttributes": {
                                  "description": "LoadBalancerAttributes define the custom attributes to LoadBalancers for all Ingress that that belong to IngressClass with this IngressClassParams.",
                                  "items": {
                                    "description": "Attributes defines custom attributes on resources.",
                                    "properties": {
                                      "key": {
                                        "description": "The key of the attribute.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The value of the attribute.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "value"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "namespaceSelector": {
                                  "description": "NamespaceSelector restrict the namespaces of Ingresses that are allowed to specify the IngressClass with this IngressClassParams. * if absent or present but empty, it selects all namespaces.",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "items": {
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "matchLabels": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "scheme": {
                                  "description": "Scheme defines the scheme for all Ingresses that belong to IngressClass with this IngressClassParams.",
                                  "enum": [
                                    "internal",
                                    "internet-facing"
                                  ],
                                  "type": "string"
                                },
                                "tags": {
                                  "description": "Tags defines list of Tags on AWS resources provisioned for Ingresses that belong to IngressClass with this IngressClassParams.",
                                  "items": {
                                    "description": "Tag defines a AWS Tag on resources.",
                                    "properties": {
                                      "key": {
                                        "description": "The key of the tag.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The value of the tag.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "value"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "served": true,
                      "storage": true,
                      "subresources": {
                        "scale": {
                          "labelSelectorPath": null,
                          "specReplicasPath": null,
                          "statusReplicasPath": null
                        },
                        "status": null
                      }
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "conversion": [
                        "object",
                        {
                          "strategy": "string",
                          "webhook": [
                            "object",
                            {
                              "clientConfig": [
                                "object",
                                {
                                  "caBundle": "string",
                                  "service": [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string",
                                      "path": "string",
                                      "port": "number"
                                    }
                                  ],
                                  "url": "string"
                                }
                              ],
                              "conversionReviewVersions": [
                                "list",
                                "string"
                              ]
                            }
                          ]
                        }
                      ],
                      "group": "string",
                      "names": [
                        "object",
                        {
                          "categories": [
                            "list",
                            "string"
                          ],
                          "kind": "string",
                          "listKind": "string",
                          "plural": "string",
                          "shortNames": [
                            "list",
                            "string"
                          ],
                          "singular": "string"
                        }
                      ],
                      "preserveUnknownFields": "bool",
                      "scope": "string",
                      "versions": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "additionalPrinterColumns": [
                                "list",
                                [
                                  "object",
                                  {
                                    "description": "string",
                                    "format": "string",
                                    "jsonPath": "string",
                                    "name": "string",
                                    "priority": "number",
                                    "type": "string"
                                  }
                                ]
                              ],
                              "deprecated": "bool",
                              "deprecationWarning": "string",
                              "name": "string",
                              "schema": [
                                "object",
                                {
                                  "openAPIV3Schema": [
                                    "object",
                                    {
                                      "description": "string",
                                      "properties": [
                                        "object",
                                        {
                                          "apiVersion": [
                                            "object",
                                            {
                                              "description": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "kind": [
                                            "object",
                                            {
                                              "description": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "metadata": [
                                            "object",
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "spec": [
                                            "object",
                                            {
                                              "description": "string",
                                              "properties": [
                                                "object",
                                                {
                                                  "group": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "name": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "type": "string"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "required": [
                                                        "tuple",
                                                        [
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "ipAddressType": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "enum": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "loadBalancerAttributes": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "items": [
                                                        "object",
                                                        {
                                                          "description": "string",
                                                          "properties": [
                                                            "object",
                                                            {
                                                              "key": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "value": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "type": "string"
                                                                }
                                                              ]
                                                            }
                                                          ],
                                                          "required": [
                                                            "tuple",
                                                            [
                                                              "string",
                                                              "string"
                                                            ]
                                                          ],
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "items": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "properties": [
                                                                    "object",
                                                                    {
                                                                      "key": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "operator": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "values": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "items": [
                                                                            "object",
                                                                            {
                                                                              "type": "string"
                                                                            }
                                                                          ],
                                                                          "type": "string"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "required": [
                                                                    "tuple",
                                                                    [
                                                                      "string",
                                                                      "string"
                                                                    ]
                                                                  ],
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "matchLabels": [
                                                            "object",
                                                            {
                                                              "additionalProperties": [
                                                                "object",
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "description": "string",
                                                              "type": "string"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "scheme": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "enum": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "tags": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "items": [
                                                        "object",
                                                        {
                                                          "description": "string",
                                                          "properties": [
                                                            "object",
                                                            {
                                                              "key": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "value": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "type": "string"
                                                                }
                                                              ]
                                                            }
                                                          ],
                                                          "required": [
                                                            "tuple",
                                                            [
                                                              "string",
                                                              "string"
                                                            ]
                                                          ],
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "type": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                }
                              ],
                              "served": "bool",
                              "storage": "bool",
                              "subresources": [
                                "object",
                                {
                                  "scale": [
                                    "object",
                                    {
                                      "labelSelectorPath": "string",
                                      "specReplicasPath": "string",
                                      "statusReplicasPath": "string"
                                    }
                                  ],
                                  "status": "dynamic"
                                }
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "customresourcedefinition_targetgroupbindings_elbv2_k8s_aws",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "apiextensions.k8s.io/v1",
                "kind": "CustomResourceDefinition",
                "metadata": {
                  "annotations": {
                    "controller-gen.kubebuilder.io/version": "v0.5.0"
                  },
                  "creationTimestamp": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "name": "targetgroupbindings.elbv2.k8s.aws"
                },
                "spec": {
                  "group": "elbv2.k8s.aws",
                  "names": {
                    "kind": "TargetGroupBinding",
                    "listKind": "TargetGroupBindingList",
                    "plural": "targetgroupbindings",
                    "singular": "targetgroupbinding"
                  },
                  "scope": "Namespaced",
                  "versions": [
                    {
                      "additionalPrinterColumns": [
                        {
                          "description": "The Kubernetes Service's name",
                          "jsonPath": ".spec.serviceRef.name",
                          "name": "SERVICE-NAME",
                          "type": "string"
                        },
                        {
                          "description": "The Kubernetes Service's port",
                          "jsonPath": ".spec.serviceRef.port",
                          "name": "SERVICE-PORT",
                          "type": "string"
                        },
                        {
                          "description": "The AWS TargetGroup's TargetType",
                          "jsonPath": ".spec.targetType",
                          "name": "TARGET-TYPE",
                          "type": "string"
                        },
                        {
                          "description": "The AWS TargetGroup's Amazon Resource Name",
                          "jsonPath": ".spec.targetGroupARN",
                          "name": "ARN",
                          "priority": 1,
                          "type": "string"
                        },
                        {
                          "jsonPath": ".metadata.creationTimestamp",
                          "name": "AGE",
                          "type": "date"
                        }
                      ],
                      "name": "v1alpha1",
                      "schema": {
                        "openAPIV3Schema": {
                          "description": "TargetGroupBinding is the Schema for the TargetGroupBinding API",
                          "properties": {
                            "apiVersion": {
                              "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "metadata": {
                              "type": "object"
                            },
                            "spec": {
                              "description": "TargetGroupBindingSpec defines the desired state of TargetGroupBinding",
                              "properties": {
                                "networking": {
                                  "description": "networking provides the networking setup for ELBV2 LoadBalancer to access targets in TargetGroup.",
                                  "properties": {
                                    "ingress": {
                                      "description": "List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.",
                                      "items": {
                                        "properties": {
                                          "from": {
                                            "description": "List of peers which should be able to access the targets in TargetGroup. At least one NetworkingPeer should be specified.",
                                            "items": {
                                              "description": "NetworkingPeer defines the source/destination peer for networking rules.",
                                              "properties": {
                                                "ipBlock": {
                                                  "description": "IPBlock defines an IPBlock peer. If specified, none of the other fields can be set.",
                                                  "properties": {
                                                    "cidr": {
                                                      "description": "CIDR is the network CIDR. Both IPV4 or IPV6 CIDR are accepted.",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "cidr"
                                                  ],
                                                  "type": "object"
                                                },
                                                "securityGroup": {
                                                  "description": "SecurityGroup defines a SecurityGroup peer. If specified, none of the other fields can be set.",
                                                  "properties": {
                                                    "groupID": {
                                                      "description": "GroupID is the EC2 SecurityGroupID.",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "groupID"
                                                  ],
                                                  "type": "object"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "ports": {
                                            "description": "List of ports which should be made accessible on the targets in TargetGroup. If ports is empty or unspecified, it defaults to all ports with TCP.",
                                            "items": {
                                              "properties": {
                                                "port": {
                                                  "anyOf": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "description": "The port which traffic must match. When NodePort endpoints(instance TargetType) is used, this must be a numerical port. When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods. if port is unspecified, it defaults to all ports.",
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "protocol": {
                                                  "description": "The protocol which traffic must match. If protocol is unspecified, it defaults to TCP.",
                                                  "enum": [
                                                    "TCP",
                                                    "UDP"
                                                  ],
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "from",
                                          "ports"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "serviceRef": {
                                  "description": "serviceRef is a reference to a Kubernetes Service and ServicePort.",
                                  "properties": {
                                    "name": {
                                      "description": "Name is the name of the Service.",
                                      "type": "string"
                                    },
                                    "port": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "description": "Port is the port of the ServicePort.",
                                      "x-kubernetes-int-or-string": true
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "port"
                                  ],
                                  "type": "object"
                                },
                                "targetGroupARN": {
                                  "description": "targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.",
                                  "type": "string"
                                },
                                "targetType": {
                                  "description": "targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.",
                                  "enum": [
                                    "instance",
                                    "ip"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "serviceRef",
                                "targetGroupARN"
                              ],
                              "type": "object"
                            },
                            "status": {
                              "description": "TargetGroupBindingStatus defines the observed state of TargetGroupBinding",
                              "properties": {
                                "observedGeneration": {
                                  "description": "The generation observed by the TargetGroupBinding controller.",
                                  "format": "int64",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "served": true,
                      "storage": false,
                      "subresources": {
                        "status": {}
                      }
                    },
                    {
                      "additionalPrinterColumns": [
                        {
                          "description": "The Kubernetes Service's name",
                          "jsonPath": ".spec.serviceRef.name",
                          "name": "SERVICE-NAME",
                          "type": "string"
                        },
                        {
                          "description": "The Kubernetes Service's port",
                          "jsonPath": ".spec.serviceRef.port",
                          "name": "SERVICE-PORT",
                          "type": "string"
                        },
                        {
                          "description": "The AWS TargetGroup's TargetType",
                          "jsonPath": ".spec.targetType",
                          "name": "TARGET-TYPE",
                          "type": "string"
                        },
                        {
                          "description": "The AWS TargetGroup's Amazon Resource Name",
                          "jsonPath": ".spec.targetGroupARN",
                          "name": "ARN",
                          "priority": 1,
                          "type": "string"
                        },
                        {
                          "jsonPath": ".metadata.creationTimestamp",
                          "name": "AGE",
                          "type": "date"
                        }
                      ],
                      "name": "v1beta1",
                      "schema": {
                        "openAPIV3Schema": {
                          "description": "TargetGroupBinding is the Schema for the TargetGroupBinding API",
                          "properties": {
                            "apiVersion": {
                              "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "metadata": {
                              "type": "object"
                            },
                            "spec": {
                              "description": "TargetGroupBindingSpec defines the desired state of TargetGroupBinding",
                              "properties": {
                                "ipAddressType": {
                                  "description": "ipAddressType specifies whether the target group is of type IPv4 or IPv6. If unspecified, it will be automatically inferred.",
                                  "enum": [
                                    "ipv4",
                                    "ipv6"
                                  ],
                                  "type": "string"
                                },
                                "networking": {
                                  "description": "networking defines the networking rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.",
                                  "properties": {
                                    "ingress": {
                                      "description": "List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.",
                                      "items": {
                                        "description": "NetworkingIngressRule defines a particular set of traffic that is allowed to access TargetGroup's targets.",
                                        "properties": {
                                          "from": {
                                            "description": "List of peers which should be able to access the targets in TargetGroup. At least one NetworkingPeer should be specified.",
                                            "items": {
                                              "description": "NetworkingPeer defines the source/destination peer for networking rules.",
                                              "properties": {
                                                "ipBlock": {
                                                  "description": "IPBlock defines an IPBlock peer. If specified, none of the other fields can be set.",
                                                  "properties": {
                                                    "cidr": {
                                                      "description": "CIDR is the network CIDR. Both IPV4 or IPV6 CIDR are accepted.",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "cidr"
                                                  ],
                                                  "type": "object"
                                                },
                                                "securityGroup": {
                                                  "description": "SecurityGroup defines a SecurityGroup peer. If specified, none of the other fields can be set.",
                                                  "properties": {
                                                    "groupID": {
                                                      "description": "GroupID is the EC2 SecurityGroupID.",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "groupID"
                                                  ],
                                                  "type": "object"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "ports": {
                                            "description": "List of ports which should be made accessible on the targets in TargetGroup. If ports is empty or unspecified, it defaults to all ports with TCP.",
                                            "items": {
                                              "description": "NetworkingPort defines the port and protocol for networking rules.",
                                              "properties": {
                                                "port": {
                                                  "anyOf": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "description": "The port which traffic must match. When NodePort endpoints(instance TargetType) is used, this must be a numerical port. When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods. if port is unspecified, it defaults to all ports.",
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "protocol": {
                                                  "description": "The protocol which traffic must match. If protocol is unspecified, it defaults to TCP.",
                                                  "enum": [
                                                    "TCP",
                                                    "UDP"
                                                  ],
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "from",
                                          "ports"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nodeSelector": {
                                  "description": "node selector for instance type target groups to only register certain nodes",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "items": {
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "matchLabels": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "serviceRef": {
                                  "description": "serviceRef is a reference to a Kubernetes Service and ServicePort.",
                                  "properties": {
                                    "name": {
                                      "description": "Name is the name of the Service.",
                                      "type": "string"
                                    },
                                    "port": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "description": "Port is the port of the ServicePort.",
                                      "x-kubernetes-int-or-string": true
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "port"
                                  ],
                                  "type": "object"
                                },
                                "targetGroupARN": {
                                  "description": "targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "targetType": {
                                  "description": "targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.",
                                  "enum": [
                                    "instance",
                                    "ip"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "serviceRef",
                                "targetGroupARN"
                              ],
                              "type": "object"
                            },
                            "status": {
                              "description": "TargetGroupBindingStatus defines the observed state of TargetGroupBinding",
                              "properties": {
                                "observedGeneration": {
                                  "description": "The generation observed by the TargetGroupBinding controller.",
                                  "format": "int64",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "served": true,
                      "storage": true,
                      "subresources": {
                        "status": {}
                      }
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "controller-gen.kubebuilder.io/version": "string"
                        }
                      ],
                      "creationTimestamp": "dynamic",
                      "labels": [
                        "object",
                        {
                          "app.kubernetes.io/name": "string"
                        }
                      ],
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "group": "string",
                      "names": [
                        "object",
                        {
                          "kind": "string",
                          "listKind": "string",
                          "plural": "string",
                          "singular": "string"
                        }
                      ],
                      "scope": "string",
                      "versions": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "additionalPrinterColumns": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "description": "string",
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "description": "string",
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "description": "string",
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "description": "string",
                                      "jsonPath": "string",
                                      "name": "string",
                                      "priority": "number",
                                      "type": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ]
                                ]
                              ],
                              "name": "string",
                              "schema": [
                                "object",
                                {
                                  "openAPIV3Schema": [
                                    "object",
                                    {
                                      "description": "string",
                                      "properties": [
                                        "object",
                                        {
                                          "apiVersion": [
                                            "object",
                                            {
                                              "description": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "kind": [
                                            "object",
                                            {
                                              "description": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "metadata": [
                                            "object",
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "spec": [
                                            "object",
                                            {
                                              "description": "string",
                                              "properties": [
                                                "object",
                                                {
                                                  "networking": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "ingress": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "items": [
                                                                "object",
                                                                {
                                                                  "properties": [
                                                                    "object",
                                                                    {
                                                                      "from": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "items": [
                                                                            "object",
                                                                            {
                                                                              "description": "string",
                                                                              "properties": [
                                                                                "object",
                                                                                {
                                                                                  "ipBlock": [
                                                                                    "object",
                                                                                    {
                                                                                      "description": "string",
                                                                                      "properties": [
                                                                                        "object",
                                                                                        {
                                                                                          "cidr": [
                                                                                            "object",
                                                                                            {
                                                                                              "description": "string",
                                                                                              "type": "string"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ],
                                                                                      "required": [
                                                                                        "tuple",
                                                                                        [
                                                                                          "string"
                                                                                        ]
                                                                                      ],
                                                                                      "type": "string"
                                                                                    }
                                                                                  ],
                                                                                  "securityGroup": [
                                                                                    "object",
                                                                                    {
                                                                                      "description": "string",
                                                                                      "properties": [
                                                                                        "object",
                                                                                        {
                                                                                          "groupID": [
                                                                                            "object",
                                                                                            {
                                                                                              "description": "string",
                                                                                              "type": "string"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ],
                                                                                      "required": [
                                                                                        "tuple",
                                                                                        [
                                                                                          "string"
                                                                                        ]
                                                                                      ],
                                                                                      "type": "string"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "type": "string"
                                                                            }
                                                                          ],
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "ports": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "items": [
                                                                            "object",
                                                                            {
                                                                              "properties": [
                                                                                "object",
                                                                                {
                                                                                  "port": [
                                                                                    "object",
                                                                                    {
                                                                                      "anyOf": [
                                                                                        "tuple",
                                                                                        [
                                                                                          [
                                                                                            "object",
                                                                                            {
                                                                                              "type": "string"
                                                                                            }
                                                                                          ],
                                                                                          [
                                                                                            "object",
                                                                                            {
                                                                                              "type": "string"
                                                                                            }
                                                                                          ]
                                                                                        ]
                                                                                      ],
                                                                                      "description": "string",
                                                                                      "x-kubernetes-int-or-string": "bool"
                                                                                    }
                                                                                  ],
                                                                                  "protocol": [
                                                                                    "object",
                                                                                    {
                                                                                      "description": "string",
                                                                                      "enum": [
                                                                                        "tuple",
                                                                                        [
                                                                                          "string",
                                                                                          "string"
                                                                                        ]
                                                                                      ],
                                                                                      "type": "string"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "type": "string"
                                                                            }
                                                                          ],
                                                                          "type": "string"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "required": [
                                                                    "tuple",
                                                                    [
                                                                      "string",
                                                                      "string"
                                                                    ]
                                                                  ],
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "type": "string"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "serviceRef": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "name": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "port": [
                                                            "object",
                                                            {
                                                              "anyOf": [
                                                                "tuple",
                                                                [
                                                                  [
                                                                    "object",
                                                                    {
                                                                      "type": "string"
                                                                    }
                                                                  ],
                                                                  [
                                                                    "object",
                                                                    {
                                                                      "type": "string"
                                                                    }
                                                                  ]
                                                                ]
                                                              ],
                                                              "description": "string",
                                                              "x-kubernetes-int-or-string": "bool"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "required": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "targetGroupARN": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "targetType": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "enum": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "required": [
                                                "tuple",
                                                [
                                                  "string",
                                                  "string"
                                                ]
                                              ],
                                              "type": "string"
                                            }
                                          ],
                                          "status": [
                                            "object",
                                            {
                                              "description": "string",
                                              "properties": [
                                                "object",
                                                {
                                                  "observedGeneration": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "format": "string",
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "type": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                }
                              ],
                              "served": "bool",
                              "storage": "bool",
                              "subresources": [
                                "object",
                                {
                                  "status": [
                                    "object",
                                    {}
                                  ]
                                }
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "additionalPrinterColumns": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "description": "string",
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "description": "string",
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "description": "string",
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "description": "string",
                                      "jsonPath": "string",
                                      "name": "string",
                                      "priority": "number",
                                      "type": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ]
                                ]
                              ],
                              "name": "string",
                              "schema": [
                                "object",
                                {
                                  "openAPIV3Schema": [
                                    "object",
                                    {
                                      "description": "string",
                                      "properties": [
                                        "object",
                                        {
                                          "apiVersion": [
                                            "object",
                                            {
                                              "description": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "kind": [
                                            "object",
                                            {
                                              "description": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "metadata": [
                                            "object",
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "spec": [
                                            "object",
                                            {
                                              "description": "string",
                                              "properties": [
                                                "object",
                                                {
                                                  "ipAddressType": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "enum": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "networking": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "ingress": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "items": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "properties": [
                                                                    "object",
                                                                    {
                                                                      "from": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "items": [
                                                                            "object",
                                                                            {
                                                                              "description": "string",
                                                                              "properties": [
                                                                                "object",
                                                                                {
                                                                                  "ipBlock": [
                                                                                    "object",
                                                                                    {
                                                                                      "description": "string",
                                                                                      "properties": [
                                                                                        "object",
                                                                                        {
                                                                                          "cidr": [
                                                                                            "object",
                                                                                            {
                                                                                              "description": "string",
                                                                                              "type": "string"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ],
                                                                                      "required": [
                                                                                        "tuple",
                                                                                        [
                                                                                          "string"
                                                                                        ]
                                                                                      ],
                                                                                      "type": "string"
                                                                                    }
                                                                                  ],
                                                                                  "securityGroup": [
                                                                                    "object",
                                                                                    {
                                                                                      "description": "string",
                                                                                      "properties": [
                                                                                        "object",
                                                                                        {
                                                                                          "groupID": [
                                                                                            "object",
                                                                                            {
                                                                                              "description": "string",
                                                                                              "type": "string"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ],
                                                                                      "required": [
                                                                                        "tuple",
                                                                                        [
                                                                                          "string"
                                                                                        ]
                                                                                      ],
                                                                                      "type": "string"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "type": "string"
                                                                            }
                                                                          ],
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "ports": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "items": [
                                                                            "object",
                                                                            {
                                                                              "description": "string",
                                                                              "properties": [
                                                                                "object",
                                                                                {
                                                                                  "port": [
                                                                                    "object",
                                                                                    {
                                                                                      "anyOf": [
                                                                                        "tuple",
                                                                                        [
                                                                                          [
                                                                                            "object",
                                                                                            {
                                                                                              "type": "string"
                                                                                            }
                                                                                          ],
                                                                                          [
                                                                                            "object",
                                                                                            {
                                                                                              "type": "string"
                                                                                            }
                                                                                          ]
                                                                                        ]
                                                                                      ],
                                                                                      "description": "string",
                                                                                      "x-kubernetes-int-or-string": "bool"
                                                                                    }
                                                                                  ],
                                                                                  "protocol": [
                                                                                    "object",
                                                                                    {
                                                                                      "description": "string",
                                                                                      "enum": [
                                                                                        "tuple",
                                                                                        [
                                                                                          "string",
                                                                                          "string"
                                                                                        ]
                                                                                      ],
                                                                                      "type": "string"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "type": "string"
                                                                            }
                                                                          ],
                                                                          "type": "string"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "required": [
                                                                    "tuple",
                                                                    [
                                                                      "string",
                                                                      "string"
                                                                    ]
                                                                  ],
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "type": "string"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "nodeSelector": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "items": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "properties": [
                                                                    "object",
                                                                    {
                                                                      "key": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "operator": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "values": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "items": [
                                                                            "object",
                                                                            {
                                                                              "type": "string"
                                                                            }
                                                                          ],
                                                                          "type": "string"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "required": [
                                                                    "tuple",
                                                                    [
                                                                      "string",
                                                                      "string"
                                                                    ]
                                                                  ],
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "matchLabels": [
                                                            "object",
                                                            {
                                                              "additionalProperties": [
                                                                "object",
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "description": "string",
                                                              "type": "string"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "serviceRef": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "name": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "port": [
                                                            "object",
                                                            {
                                                              "anyOf": [
                                                                "tuple",
                                                                [
                                                                  [
                                                                    "object",
                                                                    {
                                                                      "type": "string"
                                                                    }
                                                                  ],
                                                                  [
                                                                    "object",
                                                                    {
                                                                      "type": "string"
                                                                    }
                                                                  ]
                                                                ]
                                                              ],
                                                              "description": "string",
                                                              "x-kubernetes-int-or-string": "bool"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "required": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "targetGroupARN": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "minLength": "number",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "targetType": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "enum": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "required": [
                                                "tuple",
                                                [
                                                  "string",
                                                  "string"
                                                ]
                                              ],
                                              "type": "string"
                                            }
                                          ],
                                          "status": [
                                            "object",
                                            {
                                              "description": "string",
                                              "properties": [
                                                "object",
                                                {
                                                  "observedGeneration": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "format": "string",
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "type": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                }
                              ],
                              "served": "bool",
                              "storage": "bool",
                              "subresources": [
                                "object",
                                {
                                  "status": [
                                    "object",
                                    {}
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "apiextensions.k8s.io/v1",
                "kind": "CustomResourceDefinition",
                "metadata": {
                  "annotations": {
                    "controller-gen.kubebuilder.io/version": "v0.5.0"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "managedFields": null,
                  "name": "targetgroupbindings.elbv2.k8s.aws",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "conversion": {
                    "strategy": "None",
                    "webhook": {
                      "clientConfig": {
                        "caBundle": null,
                        "service": {
                          "name": null,
                          "namespace": null,
                          "path": null,
                          "port": null
                        },
                        "url": null
                      },
                      "conversionReviewVersions": null
                    }
                  },
                  "group": "elbv2.k8s.aws",
                  "names": {
                    "categories": null,
                    "kind": "TargetGroupBinding",
                    "listKind": "TargetGroupBindingList",
                    "plural": "targetgroupbindings",
                    "shortNames": null,
                    "singular": "targetgroupbinding"
                  },
                  "preserveUnknownFields": null,
                  "scope": "Namespaced",
                  "versions": [
                    {
                      "additionalPrinterColumns": [
                        {
                          "description": "The Kubernetes Service's name",
                          "format": null,
                          "jsonPath": ".spec.serviceRef.name",
                          "name": "SERVICE-NAME",
                          "priority": null,
                          "type": "string"
                        },
                        {
                          "description": "The Kubernetes Service's port",
                          "format": null,
                          "jsonPath": ".spec.serviceRef.port",
                          "name": "SERVICE-PORT",
                          "priority": null,
                          "type": "string"
                        },
                        {
                          "description": "The AWS TargetGroup's TargetType",
                          "format": null,
                          "jsonPath": ".spec.targetType",
                          "name": "TARGET-TYPE",
                          "priority": null,
                          "type": "string"
                        },
                        {
                          "description": "The AWS TargetGroup's Amazon Resource Name",
                          "format": null,
                          "jsonPath": ".spec.targetGroupARN",
                          "name": "ARN",
                          "priority": 1,
                          "type": "string"
                        },
                        {
                          "description": null,
                          "format": null,
                          "jsonPath": ".metadata.creationTimestamp",
                          "name": "AGE",
                          "priority": null,
                          "type": "date"
                        }
                      ],
                      "deprecated": null,
                      "deprecationWarning": null,
                      "name": "v1alpha1",
                      "schema": {
                        "openAPIV3Schema": {
                          "description": "TargetGroupBinding is the Schema for the TargetGroupBinding API",
                          "properties": {
                            "apiVersion": {
                              "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "metadata": {
                              "type": "object"
                            },
                            "spec": {
                              "description": "TargetGroupBindingSpec defines the desired state of TargetGroupBinding",
                              "properties": {
                                "networking": {
                                  "description": "networking provides the networking setup for ELBV2 LoadBalancer to access targets in TargetGroup.",
                                  "properties": {
                                    "ingress": {
                                      "description": "List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.",
                                      "items": {
                                        "properties": {
                                          "from": {
                                            "description": "List of peers which should be able to access the targets in TargetGroup. At least one NetworkingPeer should be specified.",
                                            "items": {
                                              "description": "NetworkingPeer defines the source/destination peer for networking rules.",
                                              "properties": {
                                                "ipBlock": {
                                                  "description": "IPBlock defines an IPBlock peer. If specified, none of the other fields can be set.",
                                                  "properties": {
                                                    "cidr": {
                                                      "description": "CIDR is the network CIDR. Both IPV4 or IPV6 CIDR are accepted.",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "cidr"
                                                  ],
                                                  "type": "object"
                                                },
                                                "securityGroup": {
                                                  "description": "SecurityGroup defines a SecurityGroup peer. If specified, none of the other fields can be set.",
                                                  "properties": {
                                                    "groupID": {
                                                      "description": "GroupID is the EC2 SecurityGroupID.",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "groupID"
                                                  ],
                                                  "type": "object"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "ports": {
                                            "description": "List of ports which should be made accessible on the targets in TargetGroup. If ports is empty or unspecified, it defaults to all ports with TCP.",
                                            "items": {
                                              "properties": {
                                                "port": {
                                                  "anyOf": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "description": "The port which traffic must match. When NodePort endpoints(instance TargetType) is used, this must be a numerical port. When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods. if port is unspecified, it defaults to all ports.",
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "protocol": {
                                                  "description": "The protocol which traffic must match. If protocol is unspecified, it defaults to TCP.",
                                                  "enum": [
                                                    "TCP",
                                                    "UDP"
                                                  ],
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "from",
                                          "ports"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "serviceRef": {
                                  "description": "serviceRef is a reference to a Kubernetes Service and ServicePort.",
                                  "properties": {
                                    "name": {
                                      "description": "Name is the name of the Service.",
                                      "type": "string"
                                    },
                                    "port": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "description": "Port is the port of the ServicePort.",
                                      "x-kubernetes-int-or-string": true
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "port"
                                  ],
                                  "type": "object"
                                },
                                "targetGroupARN": {
                                  "description": "targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.",
                                  "type": "string"
                                },
                                "targetType": {
                                  "description": "targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.",
                                  "enum": [
                                    "instance",
                                    "ip"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "serviceRef",
                                "targetGroupARN"
                              ],
                              "type": "object"
                            },
                            "status": {
                              "description": "TargetGroupBindingStatus defines the observed state of TargetGroupBinding",
                              "properties": {
                                "observedGeneration": {
                                  "description": "The generation observed by the TargetGroupBinding controller.",
                                  "format": "int64",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "served": true,
                      "storage": false,
                      "subresources": {
                        "scale": {
                          "labelSelectorPath": null,
                          "specReplicasPath": null,
                          "statusReplicasPath": null
                        },
                        "status": {}
                      }
                    },
                    {
                      "additionalPrinterColumns": [
                        {
                          "description": "The Kubernetes Service's name",
                          "format": null,
                          "jsonPath": ".spec.serviceRef.name",
                          "name": "SERVICE-NAME",
                          "priority": null,
                          "type": "string"
                        },
                        {
                          "description": "The Kubernetes Service's port",
                          "format": null,
                          "jsonPath": ".spec.serviceRef.port",
                          "name": "SERVICE-PORT",
                          "priority": null,
                          "type": "string"
                        },
                        {
                          "description": "The AWS TargetGroup's TargetType",
                          "format": null,
                          "jsonPath": ".spec.targetType",
                          "name": "TARGET-TYPE",
                          "priority": null,
                          "type": "string"
                        },
                        {
                          "description": "The AWS TargetGroup's Amazon Resource Name",
                          "format": null,
                          "jsonPath": ".spec.targetGroupARN",
                          "name": "ARN",
                          "priority": 1,
                          "type": "string"
                        },
                        {
                          "description": null,
                          "format": null,
                          "jsonPath": ".metadata.creationTimestamp",
                          "name": "AGE",
                          "priority": null,
                          "type": "date"
                        }
                      ],
                      "deprecated": null,
                      "deprecationWarning": null,
                      "name": "v1beta1",
                      "schema": {
                        "openAPIV3Schema": {
                          "description": "TargetGroupBinding is the Schema for the TargetGroupBinding API",
                          "properties": {
                            "apiVersion": {
                              "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "metadata": {
                              "type": "object"
                            },
                            "spec": {
                              "description": "TargetGroupBindingSpec defines the desired state of TargetGroupBinding",
                              "properties": {
                                "ipAddressType": {
                                  "description": "ipAddressType specifies whether the target group is of type IPv4 or IPv6. If unspecified, it will be automatically inferred.",
                                  "enum": [
                                    "ipv4",
                                    "ipv6"
                                  ],
                                  "type": "string"
                                },
                                "networking": {
                                  "description": "networking defines the networking rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.",
                                  "properties": {
                                    "ingress": {
                                      "description": "List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.",
                                      "items": {
                                        "description": "NetworkingIngressRule defines a particular set of traffic that is allowed to access TargetGroup's targets.",
                                        "properties": {
                                          "from": {
                                            "description": "List of peers which should be able to access the targets in TargetGroup. At least one NetworkingPeer should be specified.",
                                            "items": {
                                              "description": "NetworkingPeer defines the source/destination peer for networking rules.",
                                              "properties": {
                                                "ipBlock": {
                                                  "description": "IPBlock defines an IPBlock peer. If specified, none of the other fields can be set.",
                                                  "properties": {
                                                    "cidr": {
                                                      "description": "CIDR is the network CIDR. Both IPV4 or IPV6 CIDR are accepted.",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "cidr"
                                                  ],
                                                  "type": "object"
                                                },
                                                "securityGroup": {
                                                  "description": "SecurityGroup defines a SecurityGroup peer. If specified, none of the other fields can be set.",
                                                  "properties": {
                                                    "groupID": {
                                                      "description": "GroupID is the EC2 SecurityGroupID.",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "groupID"
                                                  ],
                                                  "type": "object"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "ports": {
                                            "description": "List of ports which should be made accessible on the targets in TargetGroup. If ports is empty or unspecified, it defaults to all ports with TCP.",
                                            "items": {
                                              "description": "NetworkingPort defines the port and protocol for networking rules.",
                                              "properties": {
                                                "port": {
                                                  "anyOf": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "description": "The port which traffic must match. When NodePort endpoints(instance TargetType) is used, this must be a numerical port. When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods. if port is unspecified, it defaults to all ports.",
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "protocol": {
                                                  "description": "The protocol which traffic must match. If protocol is unspecified, it defaults to TCP.",
                                                  "enum": [
                                                    "TCP",
                                                    "UDP"
                                                  ],
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "from",
                                          "ports"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nodeSelector": {
                                  "description": "node selector for instance type target groups to only register certain nodes",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "items": {
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "matchLabels": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "serviceRef": {
                                  "description": "serviceRef is a reference to a Kubernetes Service and ServicePort.",
                                  "properties": {
                                    "name": {
                                      "description": "Name is the name of the Service.",
                                      "type": "string"
                                    },
                                    "port": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "description": "Port is the port of the ServicePort.",
                                      "x-kubernetes-int-or-string": true
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "port"
                                  ],
                                  "type": "object"
                                },
                                "targetGroupARN": {
                                  "description": "targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "targetType": {
                                  "description": "targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.",
                                  "enum": [
                                    "instance",
                                    "ip"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "serviceRef",
                                "targetGroupARN"
                              ],
                              "type": "object"
                            },
                            "status": {
                              "description": "TargetGroupBindingStatus defines the observed state of TargetGroupBinding",
                              "properties": {
                                "observedGeneration": {
                                  "description": "The generation observed by the TargetGroupBinding controller.",
                                  "format": "int64",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "served": true,
                      "storage": true,
                      "subresources": {
                        "scale": {
                          "labelSelectorPath": null,
                          "specReplicasPath": null,
                          "statusReplicasPath": null
                        },
                        "status": {}
                      }
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "conversion": [
                        "object",
                        {
                          "strategy": "string",
                          "webhook": [
                            "object",
                            {
                              "clientConfig": [
                                "object",
                                {
                                  "caBundle": "string",
                                  "service": [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string",
                                      "path": "string",
                                      "port": "number"
                                    }
                                  ],
                                  "url": "string"
                                }
                              ],
                              "conversionReviewVersions": [
                                "list",
                                "string"
                              ]
                            }
                          ]
                        }
                      ],
                      "group": "string",
                      "names": [
                        "object",
                        {
                          "categories": [
                            "list",
                            "string"
                          ],
                          "kind": "string",
                          "listKind": "string",
                          "plural": "string",
                          "shortNames": [
                            "list",
                            "string"
                          ],
                          "singular": "string"
                        }
                      ],
                      "preserveUnknownFields": "bool",
                      "scope": "string",
                      "versions": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "additionalPrinterColumns": [
                                "list",
                                [
                                  "object",
                                  {
                                    "description": "string",
                                    "format": "string",
                                    "jsonPath": "string",
                                    "name": "string",
                                    "priority": "number",
                                    "type": "string"
                                  }
                                ]
                              ],
                              "deprecated": "bool",
                              "deprecationWarning": "string",
                              "name": "string",
                              "schema": [
                                "object",
                                {
                                  "openAPIV3Schema": [
                                    "object",
                                    {
                                      "description": "string",
                                      "properties": [
                                        "object",
                                        {
                                          "apiVersion": [
                                            "object",
                                            {
                                              "description": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "kind": [
                                            "object",
                                            {
                                              "description": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "metadata": [
                                            "object",
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "spec": [
                                            "object",
                                            {
                                              "description": "string",
                                              "properties": [
                                                "object",
                                                {
                                                  "networking": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "ingress": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "items": [
                                                                "object",
                                                                {
                                                                  "properties": [
                                                                    "object",
                                                                    {
                                                                      "from": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "items": [
                                                                            "object",
                                                                            {
                                                                              "description": "string",
                                                                              "properties": [
                                                                                "object",
                                                                                {
                                                                                  "ipBlock": [
                                                                                    "object",
                                                                                    {
                                                                                      "description": "string",
                                                                                      "properties": [
                                                                                        "object",
                                                                                        {
                                                                                          "cidr": [
                                                                                            "object",
                                                                                            {
                                                                                              "description": "string",
                                                                                              "type": "string"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ],
                                                                                      "required": [
                                                                                        "tuple",
                                                                                        [
                                                                                          "string"
                                                                                        ]
                                                                                      ],
                                                                                      "type": "string"
                                                                                    }
                                                                                  ],
                                                                                  "securityGroup": [
                                                                                    "object",
                                                                                    {
                                                                                      "description": "string",
                                                                                      "properties": [
                                                                                        "object",
                                                                                        {
                                                                                          "groupID": [
                                                                                            "object",
                                                                                            {
                                                                                              "description": "string",
                                                                                              "type": "string"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ],
                                                                                      "required": [
                                                                                        "tuple",
                                                                                        [
                                                                                          "string"
                                                                                        ]
                                                                                      ],
                                                                                      "type": "string"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "type": "string"
                                                                            }
                                                                          ],
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "ports": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "items": [
                                                                            "object",
                                                                            {
                                                                              "properties": [
                                                                                "object",
                                                                                {
                                                                                  "port": [
                                                                                    "object",
                                                                                    {
                                                                                      "anyOf": [
                                                                                        "tuple",
                                                                                        [
                                                                                          [
                                                                                            "object",
                                                                                            {
                                                                                              "type": "string"
                                                                                            }
                                                                                          ],
                                                                                          [
                                                                                            "object",
                                                                                            {
                                                                                              "type": "string"
                                                                                            }
                                                                                          ]
                                                                                        ]
                                                                                      ],
                                                                                      "description": "string",
                                                                                      "x-kubernetes-int-or-string": "bool"
                                                                                    }
                                                                                  ],
                                                                                  "protocol": [
                                                                                    "object",
                                                                                    {
                                                                                      "description": "string",
                                                                                      "enum": [
                                                                                        "tuple",
                                                                                        [
                                                                                          "string",
                                                                                          "string"
                                                                                        ]
                                                                                      ],
                                                                                      "type": "string"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "type": "string"
                                                                            }
                                                                          ],
                                                                          "type": "string"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "required": [
                                                                    "tuple",
                                                                    [
                                                                      "string",
                                                                      "string"
                                                                    ]
                                                                  ],
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "type": "string"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "serviceRef": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "name": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "port": [
                                                            "object",
                                                            {
                                                              "anyOf": [
                                                                "tuple",
                                                                [
                                                                  [
                                                                    "object",
                                                                    {
                                                                      "type": "string"
                                                                    }
                                                                  ],
                                                                  [
                                                                    "object",
                                                                    {
                                                                      "type": "string"
                                                                    }
                                                                  ]
                                                                ]
                                                              ],
                                                              "description": "string",
                                                              "x-kubernetes-int-or-string": "bool"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "required": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "targetGroupARN": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "targetType": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "enum": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "required": [
                                                "tuple",
                                                [
                                                  "string",
                                                  "string"
                                                ]
                                              ],
                                              "type": "string"
                                            }
                                          ],
                                          "status": [
                                            "object",
                                            {
                                              "description": "string",
                                              "properties": [
                                                "object",
                                                {
                                                  "observedGeneration": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "format": "string",
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "type": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                }
                              ],
                              "served": "bool",
                              "storage": "bool",
                              "subresources": [
                                "object",
                                {
                                  "scale": [
                                    "object",
                                    {
                                      "labelSelectorPath": "string",
                                      "specReplicasPath": "string",
                                      "statusReplicasPath": "string"
                                    }
                                  ],
                                  "status": [
                                    "object",
                                    {}
                                  ]
                                }
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "additionalPrinterColumns": [
                                "list",
                                [
                                  "object",
                                  {
                                    "description": "string",
                                    "format": "string",
                                    "jsonPath": "string",
                                    "name": "string",
                                    "priority": "number",
                                    "type": "string"
                                  }
                                ]
                              ],
                              "deprecated": "bool",
                              "deprecationWarning": "string",
                              "name": "string",
                              "schema": [
                                "object",
                                {
                                  "openAPIV3Schema": [
                                    "object",
                                    {
                                      "description": "string",
                                      "properties": [
                                        "object",
                                        {
                                          "apiVersion": [
                                            "object",
                                            {
                                              "description": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "kind": [
                                            "object",
                                            {
                                              "description": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "metadata": [
                                            "object",
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "spec": [
                                            "object",
                                            {
                                              "description": "string",
                                              "properties": [
                                                "object",
                                                {
                                                  "ipAddressType": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "enum": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "networking": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "ingress": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "items": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "properties": [
                                                                    "object",
                                                                    {
                                                                      "from": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "items": [
                                                                            "object",
                                                                            {
                                                                              "description": "string",
                                                                              "properties": [
                                                                                "object",
                                                                                {
                                                                                  "ipBlock": [
                                                                                    "object",
                                                                                    {
                                                                                      "description": "string",
                                                                                      "properties": [
                                                                                        "object",
                                                                                        {
                                                                                          "cidr": [
                                                                                            "object",
                                                                                            {
                                                                                              "description": "string",
                                                                                              "type": "string"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ],
                                                                                      "required": [
                                                                                        "tuple",
                                                                                        [
                                                                                          "string"
                                                                                        ]
                                                                                      ],
                                                                                      "type": "string"
                                                                                    }
                                                                                  ],
                                                                                  "securityGroup": [
                                                                                    "object",
                                                                                    {
                                                                                      "description": "string",
                                                                                      "properties": [
                                                                                        "object",
                                                                                        {
                                                                                          "groupID": [
                                                                                            "object",
                                                                                            {
                                                                                              "description": "string",
                                                                                              "type": "string"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ],
                                                                                      "required": [
                                                                                        "tuple",
                                                                                        [
                                                                                          "string"
                                                                                        ]
                                                                                      ],
                                                                                      "type": "string"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "type": "string"
                                                                            }
                                                                          ],
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "ports": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "items": [
                                                                            "object",
                                                                            {
                                                                              "description": "string",
                                                                              "properties": [
                                                                                "object",
                                                                                {
                                                                                  "port": [
                                                                                    "object",
                                                                                    {
                                                                                      "anyOf": [
                                                                                        "tuple",
                                                                                        [
                                                                                          [
                                                                                            "object",
                                                                                            {
                                                                                              "type": "string"
                                                                                            }
                                                                                          ],
                                                                                          [
                                                                                            "object",
                                                                                            {
                                                                                              "type": "string"
                                                                                            }
                                                                                          ]
                                                                                        ]
                                                                                      ],
                                                                                      "description": "string",
                                                                                      "x-kubernetes-int-or-string": "bool"
                                                                                    }
                                                                                  ],
                                                                                  "protocol": [
                                                                                    "object",
                                                                                    {
                                                                                      "description": "string",
                                                                                      "enum": [
                                                                                        "tuple",
                                                                                        [
                                                                                          "string",
                                                                                          "string"
                                                                                        ]
                                                                                      ],
                                                                                      "type": "string"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "type": "string"
                                                                            }
                                                                          ],
                                                                          "type": "string"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "required": [
                                                                    "tuple",
                                                                    [
                                                                      "string",
                                                                      "string"
                                                                    ]
                                                                  ],
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "type": "string"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "nodeSelector": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "items": [
                                                                "object",
                                                                {
                                                                  "description": "string",
                                                                  "properties": [
                                                                    "object",
                                                                    {
                                                                      "key": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "operator": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "values": [
                                                                        "object",
                                                                        {
                                                                          "description": "string",
                                                                          "items": [
                                                                            "object",
                                                                            {
                                                                              "type": "string"
                                                                            }
                                                                          ],
                                                                          "type": "string"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "required": [
                                                                    "tuple",
                                                                    [
                                                                      "string",
                                                                      "string"
                                                                    ]
                                                                  ],
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "matchLabels": [
                                                            "object",
                                                            {
                                                              "additionalProperties": [
                                                                "object",
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "description": "string",
                                                              "type": "string"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "serviceRef": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "name": [
                                                            "object",
                                                            {
                                                              "description": "string",
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "port": [
                                                            "object",
                                                            {
                                                              "anyOf": [
                                                                "tuple",
                                                                [
                                                                  [
                                                                    "object",
                                                                    {
                                                                      "type": "string"
                                                                    }
                                                                  ],
                                                                  [
                                                                    "object",
                                                                    {
                                                                      "type": "string"
                                                                    }
                                                                  ]
                                                                ]
                                                              ],
                                                              "description": "string",
                                                              "x-kubernetes-int-or-string": "bool"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "required": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "targetGroupARN": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "minLength": "number",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "targetType": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "enum": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "required": [
                                                "tuple",
                                                [
                                                  "string",
                                                  "string"
                                                ]
                                              ],
                                              "type": "string"
                                            }
                                          ],
                                          "status": [
                                            "object",
                                            {
                                              "description": "string",
                                              "properties": [
                                                "object",
                                                {
                                                  "observedGeneration": [
                                                    "object",
                                                    {
                                                      "description": "string",
                                                      "format": "string",
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "type": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                }
                              ],
                              "served": "bool",
                              "storage": "bool",
                              "subresources": [
                                "object",
                                {
                                  "scale": [
                                    "object",
                                    {
                                      "labelSelectorPath": "string",
                                      "specReplicasPath": "string",
                                      "statusReplicasPath": "string"
                                    }
                                  ],
                                  "status": [
                                    "object",
                                    {}
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "deployment_external_dns",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                  "name": "external-dns",
                  "namespace": "external-dns"
                },
                "spec": {
                  "selector": {
                    "matchLabels": {
                      "app": "external-dns"
                    }
                  },
                  "strategy": {
                    "type": "Recreate"
                  },
                  "template": {
                    "metadata": {
                      "annotations": {
                        "iam.amazonaws.com/role": "arn:aws:iam::740877495907:role/external-dns-role"
                      },
                      "labels": {
                        "app": "external-dns"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "args": [
                            "--source=service",
                            "--source=ingress",
                            "--domain-filter=k8s-training.aws-tests.skyworkz.nl",
                            "--provider=aws",
                            "--policy=upsert-only",
                            "--aws-zone-type=public",
                            "--registry=txt",
                            "--txt-owner-id=my-hostedzone-identifier"
                          ],
                          "image": "k8s.gcr.io/external-dns/external-dns:v0.7.6",
                          "name": "external-dns"
                        }
                      ],
                      "nodeSelector": {
                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                        "kubernetes.io/os": "linux",
                        "tenant": "kubetrain"
                      },
                      "securityContext": {
                        "fsGroup": 65534
                      },
                      "serviceAccountName": "external-dns-sa",
                      "tolerations": [
                        {
                          "effect": "NoSchedule",
                          "key": "tenant",
                          "operator": "Equal",
                          "value": "kubetrain"
                        }
                      ]
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "selector": [
                        "object",
                        {
                          "matchLabels": [
                            "object",
                            {
                              "app": "string"
                            }
                          ]
                        }
                      ],
                      "strategy": [
                        "object",
                        {
                          "type": "string"
                        }
                      ],
                      "template": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "object",
                                {
                                  "iam.amazonaws.com/role": "string"
                                }
                              ],
                              "labels": [
                                "object",
                                {
                                  "app": "string"
                                }
                              ]
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "containers": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "args": [
                                        "tuple",
                                        [
                                          "string",
                                          "string",
                                          "string",
                                          "string",
                                          "string",
                                          "string",
                                          "string",
                                          "string"
                                        ]
                                      ],
                                      "image": "string",
                                      "name": "string"
                                    }
                                  ]
                                ]
                              ],
                              "nodeSelector": [
                                "object",
                                {
                                  "eks.amazonaws.com/capacityType": "string",
                                  "kubernetes.io/os": "string",
                                  "tenant": "string"
                                }
                              ],
                              "securityContext": [
                                "object",
                                {
                                  "fsGroup": "number"
                                }
                              ],
                              "serviceAccountName": "string",
                              "tolerations": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "effect": "string",
                                      "key": "string",
                                      "operator": "string",
                                      "value": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                  "annotations": {
                    "deployment.kubernetes.io/revision": "2"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "external-dns",
                  "namespace": "external-dns",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "minReadySeconds": null,
                  "paused": null,
                  "progressDeadlineSeconds": 600,
                  "replicas": 1,
                  "revisionHistoryLimit": 10,
                  "selector": {
                    "matchExpressions": null,
                    "matchLabels": {
                      "app": "external-dns"
                    }
                  },
                  "strategy": {
                    "rollingUpdate": {
                      "maxSurge": null,
                      "maxUnavailable": null
                    },
                    "type": "Recreate"
                  },
                  "template": {
                    "metadata": {
                      "annotations": {
                        "iam.amazonaws.com/role": "arn:aws:iam::740877495907:role/external-dns-role"
                      },
                      "clusterName": null,
                      "creationTimestamp": null,
                      "deletionGracePeriodSeconds": null,
                      "deletionTimestamp": null,
                      "finalizers": null,
                      "generateName": null,
                      "generation": null,
                      "labels": {
                        "app": "external-dns"
                      },
                      "managedFields": null,
                      "name": null,
                      "namespace": null,
                      "ownerReferences": null,
                      "resourceVersion": null,
                      "selfLink": null,
                      "uid": null
                    },
                    "spec": {
                      "activeDeadlineSeconds": null,
                      "affinity": {
                        "nodeAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": null
                          }
                        },
                        "podAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": null
                        },
                        "podAntiAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": null
                        }
                      },
                      "automountServiceAccountToken": null,
                      "containers": [
                        {
                          "args": [
                            "--source=service",
                            "--source=ingress",
                            "--domain-filter=k8s-training.aws-tests.skyworkz.nl",
                            "--provider=aws",
                            "--policy=upsert-only",
                            "--aws-zone-type=public",
                            "--registry=txt",
                            "--txt-owner-id=my-hostedzone-identifier"
                          ],
                          "command": null,
                          "env": null,
                          "envFrom": null,
                          "image": "k8s.gcr.io/external-dns/external-dns:v0.7.6",
                          "imagePullPolicy": "IfNotPresent",
                          "lifecycle": {
                            "postStart": {
                              "exec": {
                                "command": null
                              },
                              "httpGet": {
                                "host": null,
                                "httpHeaders": null,
                                "path": null,
                                "port": null,
                                "scheme": null
                              },
                              "tcpSocket": {
                                "host": null,
                                "port": null
                              }
                            },
                            "preStop": {
                              "exec": {
                                "command": null
                              },
                              "httpGet": {
                                "host": null,
                                "httpHeaders": null,
                                "path": null,
                                "port": null,
                                "scheme": null
                              },
                              "tcpSocket": {
                                "host": null,
                                "port": null
                              }
                            }
                          },
                          "livenessProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": null,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": null,
                              "port": null,
                              "scheme": null
                            },
                            "initialDelaySeconds": null,
                            "periodSeconds": null,
                            "successThreshold": null,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "timeoutSeconds": null
                          },
                          "name": "external-dns",
                          "ports": null,
                          "readinessProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": null,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": null,
                              "port": null,
                              "scheme": null
                            },
                            "initialDelaySeconds": null,
                            "periodSeconds": null,
                            "successThreshold": null,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "timeoutSeconds": null
                          },
                          "resources": {
                            "limits": null,
                            "requests": null
                          },
                          "securityContext": {
                            "allowPrivilegeEscalation": null,
                            "capabilities": {
                              "add": null,
                              "drop": null
                            },
                            "privileged": null,
                            "procMount": null,
                            "readOnlyRootFilesystem": null,
                            "runAsGroup": null,
                            "runAsNonRoot": null,
                            "runAsUser": null,
                            "seLinuxOptions": {
                              "level": null,
                              "role": null,
                              "type": null,
                              "user": null
                            },
                            "seccompProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "windowsOptions": {
                              "gmsaCredentialSpec": null,
                              "gmsaCredentialSpecName": null,
                              "runAsUserName": null
                            }
                          },
                          "startupProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": null,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": null,
                              "port": null,
                              "scheme": null
                            },
                            "initialDelaySeconds": null,
                            "periodSeconds": null,
                            "successThreshold": null,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "timeoutSeconds": null
                          },
                          "stdin": null,
                          "stdinOnce": null,
                          "terminationMessagePath": "/dev/termination-log",
                          "terminationMessagePolicy": "File",
                          "tty": null,
                          "volumeDevices": null,
                          "volumeMounts": null,
                          "workingDir": null
                        }
                      ],
                      "dnsConfig": {
                        "nameservers": null,
                        "options": null,
                        "searches": null
                      },
                      "dnsPolicy": "ClusterFirst",
                      "enableServiceLinks": null,
                      "ephemeralContainers": null,
                      "hostAliases": null,
                      "hostIPC": null,
                      "hostNetwork": null,
                      "hostPID": null,
                      "hostname": null,
                      "imagePullSecrets": null,
                      "initContainers": null,
                      "nodeName": null,
                      "nodeSelector": {
                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                        "kubernetes.io/os": "linux",
                        "tenant": "kubetrain"
                      },
                      "overhead": null,
                      "preemptionPolicy": null,
                      "priority": null,
                      "priorityClassName": null,
                      "readinessGates": null,
                      "restartPolicy": "Always",
                      "runtimeClassName": null,
                      "schedulerName": "default-scheduler",
                      "securityContext": {
                        "fsGroup": 65534,
                        "fsGroupChangePolicy": null,
                        "runAsGroup": null,
                        "runAsNonRoot": null,
                        "runAsUser": null,
                        "seLinuxOptions": {
                          "level": null,
                          "role": null,
                          "type": null,
                          "user": null
                        },
                        "seccompProfile": {
                          "localhostProfile": null,
                          "type": null
                        },
                        "supplementalGroups": null,
                        "sysctls": null,
                        "windowsOptions": {
                          "gmsaCredentialSpec": null,
                          "gmsaCredentialSpecName": null,
                          "runAsUserName": null
                        }
                      },
                      "serviceAccount": "external-dns-sa",
                      "serviceAccountName": "external-dns-sa",
                      "setHostnameAsFQDN": null,
                      "shareProcessNamespace": null,
                      "subdomain": null,
                      "terminationGracePeriodSeconds": 30,
                      "tolerations": [
                        {
                          "effect": "NoSchedule",
                          "key": "tenant",
                          "operator": "Equal",
                          "tolerationSeconds": null,
                          "value": "kubetrain"
                        }
                      ],
                      "topologySpreadConstraints": null,
                      "volumes": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "minReadySeconds": "number",
                      "paused": "bool",
                      "progressDeadlineSeconds": "number",
                      "replicas": "number",
                      "revisionHistoryLimit": "number",
                      "selector": [
                        "object",
                        {
                          "matchExpressions": [
                            "list",
                            [
                              "object",
                              {
                                "key": "string",
                                "operator": "string",
                                "values": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "matchLabels": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "strategy": [
                        "object",
                        {
                          "rollingUpdate": [
                            "object",
                            {
                              "maxSurge": "dynamic",
                              "maxUnavailable": "dynamic"
                            }
                          ],
                          "type": "string"
                        }
                      ],
                      "template": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "clusterName": "string",
                              "creationTimestamp": "string",
                              "deletionGracePeriodSeconds": "number",
                              "deletionTimestamp": "string",
                              "finalizers": [
                                "list",
                                "string"
                              ],
                              "generateName": "string",
                              "generation": "number",
                              "labels": [
                                "map",
                                "string"
                              ],
                              "managedFields": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "fieldsType": "string",
                                    "fieldsV1": "dynamic",
                                    "manager": "string",
                                    "operation": "string",
                                    "time": "string"
                                  }
                                ]
                              ],
                              "name": "string",
                              "namespace": "string",
                              "ownerReferences": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "blockOwnerDeletion": "bool",
                                    "controller": "bool",
                                    "kind": "string",
                                    "name": "string",
                                    "uid": "string"
                                  }
                                ]
                              ],
                              "resourceVersion": "string",
                              "selfLink": "string",
                              "uid": "string"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "activeDeadlineSeconds": "number",
                              "affinity": [
                                "object",
                                {
                                  "nodeAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "preference": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ]
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "object",
                                        {
                                          "nodeSelectorTerms": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ]
                                              }
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "podAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "podAffinityTerm": [
                                              "object",
                                              {
                                                "labelSelector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "namespaces": [
                                                  "list",
                                                  "string"
                                                ],
                                                "topologyKey": "string"
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  ],
                                  "podAntiAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "podAffinityTerm": [
                                              "object",
                                              {
                                                "labelSelector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "namespaces": [
                                                  "list",
                                                  "string"
                                                ],
                                                "topologyKey": "string"
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "automountServiceAccountToken": "bool",
                              "containers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "dnsConfig": [
                                "object",
                                {
                                  "nameservers": [
                                    "list",
                                    "string"
                                  ],
                                  "options": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "searches": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "dnsPolicy": "string",
                              "enableServiceLinks": "bool",
                              "ephemeralContainers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "targetContainerName": "string",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "hostAliases": [
                                "list",
                                [
                                  "object",
                                  {
                                    "hostnames": [
                                      "list",
                                      "string"
                                    ],
                                    "ip": "string"
                                  }
                                ]
                              ],
                              "hostIPC": "bool",
                              "hostNetwork": "bool",
                              "hostPID": "bool",
                              "hostname": "string",
                              "imagePullSecrets": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string"
                                  }
                                ]
                              ],
                              "initContainers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "nodeName": "string",
                              "nodeSelector": [
                                "map",
                                "string"
                              ],
                              "overhead": [
                                "map",
                                "string"
                              ],
                              "preemptionPolicy": "string",
                              "priority": "number",
                              "priorityClassName": "string",
                              "readinessGates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "conditionType": "string"
                                  }
                                ]
                              ],
                              "restartPolicy": "string",
                              "runtimeClassName": "string",
                              "schedulerName": "string",
                              "securityContext": [
                                "object",
                                {
                                  "fsGroup": "number",
                                  "fsGroupChangePolicy": "string",
                                  "runAsGroup": "number",
                                  "runAsNonRoot": "bool",
                                  "runAsUser": "number",
                                  "seLinuxOptions": [
                                    "object",
                                    {
                                      "level": "string",
                                      "role": "string",
                                      "type": "string",
                                      "user": "string"
                                    }
                                  ],
                                  "seccompProfile": [
                                    "object",
                                    {
                                      "localhostProfile": "string",
                                      "type": "string"
                                    }
                                  ],
                                  "supplementalGroups": [
                                    "list",
                                    "number"
                                  ],
                                  "sysctls": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "windowsOptions": [
                                    "object",
                                    {
                                      "gmsaCredentialSpec": "string",
                                      "gmsaCredentialSpecName": "string",
                                      "runAsUserName": "string"
                                    }
                                  ]
                                }
                              ],
                              "serviceAccount": "string",
                              "serviceAccountName": "string",
                              "setHostnameAsFQDN": "bool",
                              "shareProcessNamespace": "bool",
                              "subdomain": "string",
                              "terminationGracePeriodSeconds": "number",
                              "tolerations": [
                                "list",
                                [
                                  "object",
                                  {
                                    "effect": "string",
                                    "key": "string",
                                    "operator": "string",
                                    "tolerationSeconds": "number",
                                    "value": "string"
                                  }
                                ]
                              ],
                              "topologySpreadConstraints": [
                                "list",
                                [
                                  "object",
                                  {
                                    "labelSelector": [
                                      "object",
                                      {
                                        "matchExpressions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "operator": "string",
                                              "values": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ]
                                        ],
                                        "matchLabels": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "maxSkew": "number",
                                    "topologyKey": "string",
                                    "whenUnsatisfiable": "string"
                                  }
                                ]
                              ],
                              "volumes": [
                                "list",
                                [
                                  "object",
                                  {
                                    "awsElasticBlockStore": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "partition": "number",
                                        "readOnly": "bool",
                                        "volumeID": "string"
                                      }
                                    ],
                                    "azureDisk": [
                                      "object",
                                      {
                                        "cachingMode": "string",
                                        "diskName": "string",
                                        "diskURI": "string",
                                        "fsType": "string",
                                        "kind": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "azureFile": [
                                      "object",
                                      {
                                        "readOnly": "bool",
                                        "secretName": "string",
                                        "shareName": "string"
                                      }
                                    ],
                                    "cephfs": [
                                      "object",
                                      {
                                        "monitors": [
                                          "list",
                                          "string"
                                        ],
                                        "path": "string",
                                        "readOnly": "bool",
                                        "secretFile": "string",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "user": "string"
                                      }
                                    ],
                                    "cinder": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "volumeID": "string"
                                      }
                                    ],
                                    "configMap": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "items": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "mode": "number",
                                              "path": "string"
                                            }
                                          ]
                                        ],
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "csi": [
                                      "object",
                                      {
                                        "driver": "string",
                                        "fsType": "string",
                                        "nodePublishSecretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "readOnly": "bool",
                                        "volumeAttributes": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "downwardAPI": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "items": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "mode": "number",
                                              "path": "string",
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    "emptyDir": [
                                      "object",
                                      {
                                        "medium": "string",
                                        "sizeLimit": "string"
                                      }
                                    ],
                                    "ephemeral": [
                                      "object",
                                      {
                                        "readOnly": "bool",
                                        "volumeClaimTemplate": [
                                          "object",
                                          {
                                            "metadata": [
                                              "object",
                                              {
                                                "annotations": [
                                                  "map",
                                                  "string"
                                                ],
                                                "clusterName": "string",
                                                "creationTimestamp": "string",
                                                "deletionGracePeriodSeconds": "number",
                                                "deletionTimestamp": "string",
                                                "finalizers": [
                                                  "list",
                                                  "string"
                                                ],
                                                "generateName": "string",
                                                "generation": "number",
                                                "labels": [
                                                  "map",
                                                  "string"
                                                ],
                                                "managedFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "apiVersion": "string",
                                                      "fieldsType": "string",
                                                      "fieldsV1": "dynamic",
                                                      "manager": "string",
                                                      "operation": "string",
                                                      "time": "string"
                                                    }
                                                  ]
                                                ],
                                                "name": "string",
                                                "namespace": "string",
                                                "ownerReferences": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "apiVersion": "string",
                                                      "blockOwnerDeletion": "bool",
                                                      "controller": "bool",
                                                      "kind": "string",
                                                      "name": "string",
                                                      "uid": "string"
                                                    }
                                                  ]
                                                ],
                                                "resourceVersion": "string",
                                                "selfLink": "string",
                                                "uid": "string"
                                              }
                                            ],
                                            "spec": [
                                              "object",
                                              {
                                                "accessModes": [
                                                  "list",
                                                  "string"
                                                ],
                                                "dataSource": [
                                                  "object",
                                                  {
                                                    "apiGroup": "string",
                                                    "kind": "string",
                                                    "name": "string"
                                                  }
                                                ],
                                                "resources": [
                                                  "object",
                                                  {
                                                    "limits": [
                                                      "map",
                                                      "string"
                                                    ],
                                                    "requests": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "selector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "storageClassName": "string",
                                                "volumeMode": "string",
                                                "volumeName": "string"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "fc": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "lun": "number",
                                        "readOnly": "bool",
                                        "targetWWNs": [
                                          "list",
                                          "string"
                                        ],
                                        "wwids": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "flexVolume": [
                                      "object",
                                      {
                                        "driver": "string",
                                        "fsType": "string",
                                        "options": [
                                          "map",
                                          "string"
                                        ],
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "flocker": [
                                      "object",
                                      {
                                        "datasetName": "string",
                                        "datasetUUID": "string"
                                      }
                                    ],
                                    "gcePersistentDisk": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "partition": "number",
                                        "pdName": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "gitRepo": [
                                      "object",
                                      {
                                        "directory": "string",
                                        "repository": "string",
                                        "revision": "string"
                                      }
                                    ],
                                    "glusterfs": [
                                      "object",
                                      {
                                        "endpoints": "string",
                                        "path": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "hostPath": [
                                      "object",
                                      {
                                        "path": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "iscsi": [
                                      "object",
                                      {
                                        "chapAuthDiscovery": "bool",
                                        "chapAuthSession": "bool",
                                        "fsType": "string",
                                        "initiatorName": "string",
                                        "iqn": "string",
                                        "iscsiInterface": "string",
                                        "lun": "number",
                                        "portals": [
                                          "list",
                                          "string"
                                        ],
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "targetPortal": "string"
                                      }
                                    ],
                                    "name": "string",
                                    "nfs": [
                                      "object",
                                      {
                                        "path": "string",
                                        "readOnly": "bool",
                                        "server": "string"
                                      }
                                    ],
                                    "persistentVolumeClaim": [
                                      "object",
                                      {
                                        "claimName": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "photonPersistentDisk": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "pdID": "string"
                                      }
                                    ],
                                    "portworxVolume": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "readOnly": "bool",
                                        "volumeID": "string"
                                      }
                                    ],
                                    "projected": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "sources": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "configMap": [
                                                "object",
                                                {
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "downwardAPI": [
                                                "object",
                                                {
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "fieldRef": [
                                                          "object",
                                                          {
                                                            "apiVersion": "string",
                                                            "fieldPath": "string"
                                                          }
                                                        ],
                                                        "mode": "number",
                                                        "path": "string",
                                                        "resourceFieldRef": [
                                                          "object",
                                                          {
                                                            "containerName": "string",
                                                            "divisor": "string",
                                                            "resource": "string"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ],
                                              "secret": [
                                                "object",
                                                {
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "serviceAccountToken": [
                                                "object",
                                                {
                                                  "audience": "string",
                                                  "expirationSeconds": "number",
                                                  "path": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    "quobyte": [
                                      "object",
                                      {
                                        "group": "string",
                                        "readOnly": "bool",
                                        "registry": "string",
                                        "tenant": "string",
                                        "user": "string",
                                        "volume": "string"
                                      }
                                    ],
                                    "rbd": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "image": "string",
                                        "keyring": "string",
                                        "monitors": [
                                          "list",
                                          "string"
                                        ],
                                        "pool": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "user": "string"
                                      }
                                    ],
                                    "scaleIO": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "gateway": "string",
                                        "protectionDomain": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "sslEnabled": "bool",
                                        "storageMode": "string",
                                        "storagePool": "string",
                                        "system": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "secret": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "items": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "mode": "number",
                                              "path": "string"
                                            }
                                          ]
                                        ],
                                        "optional": "bool",
                                        "secretName": "string"
                                      }
                                    ],
                                    "storageos": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "volumeName": "string",
                                        "volumeNamespace": "string"
                                      }
                                    ],
                                    "vsphereVolume": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "storagePolicyID": "string",
                                        "storagePolicyName": "string",
                                        "volumePath": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.cluster",
            "data.aws_iam_policy_document.external_dns_policy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "kubernetes_namespace.external-dns",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "data.aws_iam_policy_document.external_dns_assume_role_policy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.vpc.aws_vpc.this",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.data.aws_partition.current",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.vpc.aws_subnet.private",
            "module.eks.data.http.wait_for_cluster",
            "aws_iam_role.external_dns_role",
            "module.eks.aws_eks_cluster.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "deployment_kube_system_aws_load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                  "labels": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "name": "aws-load-balancer-controller",
                  "namespace": "kube-system"
                },
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app.kubernetes.io/component": "controller",
                      "app.kubernetes.io/name": "aws-load-balancer-controller"
                    }
                  },
                  "template": {
                    "metadata": {
                      "labels": {
                        "app.kubernetes.io/component": "controller",
                        "app.kubernetes.io/name": "aws-load-balancer-controller"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "args": [
                            "--cluster-name=skyworkz-k8s-training-RktmQKS9",
                            "--ingress-class=alb",
                            "--disable-restricted-sg-rules=true"
                          ],
                          "image": "amazon/aws-alb-ingress-controller:v2.3.0",
                          "livenessProbe": {
                            "failureThreshold": 2,
                            "httpGet": {
                              "path": "/healthz",
                              "port": 61779,
                              "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 10
                          },
                          "name": "controller",
                          "ports": [
                            {
                              "containerPort": 9443,
                              "name": "webhook-server",
                              "protocol": "TCP"
                            }
                          ],
                          "resources": {
                            "limits": {
                              "cpu": "200m",
                              "memory": "500Mi"
                            },
                            "requests": {
                              "cpu": "100m",
                              "memory": "200Mi"
                            }
                          },
                          "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "readOnlyRootFilesystem": true,
                            "runAsNonRoot": true
                          },
                          "volumeMounts": [
                            {
                              "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                              "name": "cert",
                              "readOnly": true
                            }
                          ]
                        }
                      ],
                      "nodeSelector": {
                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                        "tenant": "kubetrain"
                      },
                      "priorityClassName": "system-cluster-critical",
                      "securityContext": {
                        "fsGroup": 1337
                      },
                      "serviceAccountName": "aws-load-balancer-controller",
                      "terminationGracePeriodSeconds": 10,
                      "tolerations": [
                        {
                          "effect": "NoSchedule",
                          "key": "tenant",
                          "operator": "Equal",
                          "value": "kubetrain"
                        }
                      ],
                      "volumes": [
                        {
                          "name": "cert",
                          "secret": {
                            "defaultMode": 420,
                            "secretName": "aws-load-balancer-webhook-tls"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "app.kubernetes.io/component": "string",
                          "app.kubernetes.io/name": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "replicas": "number",
                      "selector": [
                        "object",
                        {
                          "matchLabels": [
                            "object",
                            {
                              "app.kubernetes.io/component": "string",
                              "app.kubernetes.io/name": "string"
                            }
                          ]
                        }
                      ],
                      "template": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "labels": [
                                "object",
                                {
                                  "app.kubernetes.io/component": "string",
                                  "app.kubernetes.io/name": "string"
                                }
                              ]
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "containers": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "args": [
                                        "tuple",
                                        [
                                          "string",
                                          "string",
                                          "string"
                                        ]
                                      ],
                                      "image": "string",
                                      "livenessProbe": [
                                        "object",
                                        {
                                          "failureThreshold": "number",
                                          "httpGet": [
                                            "object",
                                            {
                                              "path": "string",
                                              "port": "number",
                                              "scheme": "string"
                                            }
                                          ],
                                          "initialDelaySeconds": "number",
                                          "timeoutSeconds": "number"
                                        }
                                      ],
                                      "name": "string",
                                      "ports": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "containerPort": "number",
                                              "name": "string",
                                              "protocol": "string"
                                            }
                                          ]
                                        ]
                                      ],
                                      "resources": [
                                        "object",
                                        {
                                          "limits": [
                                            "object",
                                            {
                                              "cpu": "string",
                                              "memory": "string"
                                            }
                                          ],
                                          "requests": [
                                            "object",
                                            {
                                              "cpu": "string",
                                              "memory": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "securityContext": [
                                        "object",
                                        {
                                          "allowPrivilegeEscalation": "bool",
                                          "readOnlyRootFilesystem": "bool",
                                          "runAsNonRoot": "bool"
                                        }
                                      ],
                                      "volumeMounts": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "mountPath": "string",
                                              "name": "string",
                                              "readOnly": "bool"
                                            }
                                          ]
                                        ]
                                      ]
                                    }
                                  ]
                                ]
                              ],
                              "nodeSelector": [
                                "object",
                                {
                                  "eks.amazonaws.com/capacityType": "string",
                                  "tenant": "string"
                                }
                              ],
                              "priorityClassName": "string",
                              "securityContext": [
                                "object",
                                {
                                  "fsGroup": "number"
                                }
                              ],
                              "serviceAccountName": "string",
                              "terminationGracePeriodSeconds": "number",
                              "tolerations": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "effect": "string",
                                      "key": "string",
                                      "operator": "string",
                                      "value": "string"
                                    }
                                  ]
                                ]
                              ],
                              "volumes": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "secret": [
                                        "object",
                                        {
                                          "defaultMode": "number",
                                          "secretName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                  "annotations": {
                    "deployment.kubernetes.io/revision": "3"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "managedFields": null,
                  "name": "aws-load-balancer-controller",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "minReadySeconds": null,
                  "paused": null,
                  "progressDeadlineSeconds": 600,
                  "replicas": 1,
                  "revisionHistoryLimit": 10,
                  "selector": {
                    "matchExpressions": null,
                    "matchLabels": {
                      "app.kubernetes.io/component": "controller",
                      "app.kubernetes.io/name": "aws-load-balancer-controller"
                    }
                  },
                  "strategy": {
                    "rollingUpdate": {
                      "maxSurge": "25%",
                      "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                  },
                  "template": {
                    "metadata": {
                      "annotations": null,
                      "clusterName": null,
                      "creationTimestamp": null,
                      "deletionGracePeriodSeconds": null,
                      "deletionTimestamp": null,
                      "finalizers": null,
                      "generateName": null,
                      "generation": null,
                      "labels": {
                        "app.kubernetes.io/component": "controller",
                        "app.kubernetes.io/name": "aws-load-balancer-controller"
                      },
                      "managedFields": null,
                      "name": null,
                      "namespace": null,
                      "ownerReferences": null,
                      "resourceVersion": null,
                      "selfLink": null,
                      "uid": null
                    },
                    "spec": {
                      "activeDeadlineSeconds": null,
                      "affinity": {
                        "nodeAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": null
                          }
                        },
                        "podAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": null
                        },
                        "podAntiAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": null
                        }
                      },
                      "automountServiceAccountToken": null,
                      "containers": [
                        {
                          "args": [
                            "--cluster-name=skyworkz-k8s-training-RktmQKS9",
                            "--ingress-class=alb",
                            "--disable-restricted-sg-rules=true"
                          ],
                          "command": null,
                          "env": null,
                          "envFrom": null,
                          "image": "amazon/aws-alb-ingress-controller:v2.3.0",
                          "imagePullPolicy": "IfNotPresent",
                          "lifecycle": {
                            "postStart": {
                              "exec": {
                                "command": null
                              },
                              "httpGet": {
                                "host": null,
                                "httpHeaders": null,
                                "path": null,
                                "port": null,
                                "scheme": null
                              },
                              "tcpSocket": {
                                "host": null,
                                "port": null
                              }
                            },
                            "preStop": {
                              "exec": {
                                "command": null
                              },
                              "httpGet": {
                                "host": null,
                                "httpHeaders": null,
                                "path": null,
                                "port": null,
                                "scheme": null
                              },
                              "tcpSocket": {
                                "host": null,
                                "port": null
                              }
                            }
                          },
                          "livenessProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": 2,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": "/healthz",
                              "port": 61779,
                              "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "timeoutSeconds": 10
                          },
                          "name": "controller",
                          "ports": [
                            {
                              "containerPort": 9443,
                              "hostIP": null,
                              "hostPort": null,
                              "name": "webhook-server",
                              "protocol": "TCP"
                            }
                          ],
                          "readinessProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": null,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": null,
                              "port": null,
                              "scheme": null
                            },
                            "initialDelaySeconds": null,
                            "periodSeconds": null,
                            "successThreshold": null,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "timeoutSeconds": null
                          },
                          "resources": {
                            "limits": {
                              "cpu": "200m",
                              "memory": "500Mi"
                            },
                            "requests": {
                              "cpu": "100m",
                              "memory": "200Mi"
                            }
                          },
                          "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                              "add": null,
                              "drop": null
                            },
                            "privileged": null,
                            "procMount": null,
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": null,
                            "runAsNonRoot": true,
                            "runAsUser": null,
                            "seLinuxOptions": {
                              "level": null,
                              "role": null,
                              "type": null,
                              "user": null
                            },
                            "seccompProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "windowsOptions": {
                              "gmsaCredentialSpec": null,
                              "gmsaCredentialSpecName": null,
                              "runAsUserName": null
                            }
                          },
                          "startupProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": null,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": null,
                              "port": null,
                              "scheme": null
                            },
                            "initialDelaySeconds": null,
                            "periodSeconds": null,
                            "successThreshold": null,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "timeoutSeconds": null
                          },
                          "stdin": null,
                          "stdinOnce": null,
                          "terminationMessagePath": "/dev/termination-log",
                          "terminationMessagePolicy": "File",
                          "tty": null,
                          "volumeDevices": null,
                          "volumeMounts": [
                            {
                              "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                              "mountPropagation": null,
                              "name": "cert",
                              "readOnly": true,
                              "subPath": null,
                              "subPathExpr": null
                            }
                          ],
                          "workingDir": null
                        }
                      ],
                      "dnsConfig": {
                        "nameservers": null,
                        "options": null,
                        "searches": null
                      },
                      "dnsPolicy": "ClusterFirst",
                      "enableServiceLinks": null,
                      "ephemeralContainers": null,
                      "hostAliases": null,
                      "hostIPC": null,
                      "hostNetwork": null,
                      "hostPID": null,
                      "hostname": null,
                      "imagePullSecrets": null,
                      "initContainers": null,
                      "nodeName": null,
                      "nodeSelector": {
                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                        "tenant": "kubetrain"
                      },
                      "overhead": null,
                      "preemptionPolicy": null,
                      "priority": null,
                      "priorityClassName": "system-cluster-critical",
                      "readinessGates": null,
                      "restartPolicy": "Always",
                      "runtimeClassName": null,
                      "schedulerName": "default-scheduler",
                      "securityContext": {
                        "fsGroup": 1337,
                        "fsGroupChangePolicy": null,
                        "runAsGroup": null,
                        "runAsNonRoot": null,
                        "runAsUser": null,
                        "seLinuxOptions": {
                          "level": null,
                          "role": null,
                          "type": null,
                          "user": null
                        },
                        "seccompProfile": {
                          "localhostProfile": null,
                          "type": null
                        },
                        "supplementalGroups": null,
                        "sysctls": null,
                        "windowsOptions": {
                          "gmsaCredentialSpec": null,
                          "gmsaCredentialSpecName": null,
                          "runAsUserName": null
                        }
                      },
                      "serviceAccount": "aws-load-balancer-controller",
                      "serviceAccountName": "aws-load-balancer-controller",
                      "setHostnameAsFQDN": null,
                      "shareProcessNamespace": null,
                      "subdomain": null,
                      "terminationGracePeriodSeconds": 10,
                      "tolerations": [
                        {
                          "effect": "NoSchedule",
                          "key": "tenant",
                          "operator": "Equal",
                          "tolerationSeconds": null,
                          "value": "kubetrain"
                        }
                      ],
                      "topologySpreadConstraints": null,
                      "volumes": [
                        {
                          "awsElasticBlockStore": {
                            "fsType": null,
                            "partition": null,
                            "readOnly": null,
                            "volumeID": null
                          },
                          "azureDisk": {
                            "cachingMode": null,
                            "diskName": null,
                            "diskURI": null,
                            "fsType": null,
                            "kind": null,
                            "readOnly": null
                          },
                          "azureFile": {
                            "readOnly": null,
                            "secretName": null,
                            "shareName": null
                          },
                          "cephfs": {
                            "monitors": null,
                            "path": null,
                            "readOnly": null,
                            "secretFile": null,
                            "secretRef": {
                              "name": null
                            },
                            "user": null
                          },
                          "cinder": {
                            "fsType": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "volumeID": null
                          },
                          "configMap": {
                            "defaultMode": null,
                            "items": null,
                            "name": null,
                            "optional": null
                          },
                          "csi": {
                            "driver": null,
                            "fsType": null,
                            "nodePublishSecretRef": {
                              "name": null
                            },
                            "readOnly": null,
                            "volumeAttributes": null
                          },
                          "downwardAPI": {
                            "defaultMode": null,
                            "items": null
                          },
                          "emptyDir": {
                            "medium": null,
                            "sizeLimit": null
                          },
                          "ephemeral": {
                            "readOnly": null,
                            "volumeClaimTemplate": {
                              "metadata": {
                                "annotations": null,
                                "clusterName": null,
                                "creationTimestamp": null,
                                "deletionGracePeriodSeconds": null,
                                "deletionTimestamp": null,
                                "finalizers": null,
                                "generateName": null,
                                "generation": null,
                                "labels": null,
                                "managedFields": null,
                                "name": null,
                                "namespace": null,
                                "ownerReferences": null,
                                "resourceVersion": null,
                                "selfLink": null,
                                "uid": null
                              },
                              "spec": {
                                "accessModes": null,
                                "dataSource": {
                                  "apiGroup": null,
                                  "kind": null,
                                  "name": null
                                },
                                "resources": {
                                  "limits": null,
                                  "requests": null
                                },
                                "selector": {
                                  "matchExpressions": null,
                                  "matchLabels": null
                                },
                                "storageClassName": null,
                                "volumeMode": null,
                                "volumeName": null
                              }
                            }
                          },
                          "fc": {
                            "fsType": null,
                            "lun": null,
                            "readOnly": null,
                            "targetWWNs": null,
                            "wwids": null
                          },
                          "flexVolume": {
                            "driver": null,
                            "fsType": null,
                            "options": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            }
                          },
                          "flocker": {
                            "datasetName": null,
                            "datasetUUID": null
                          },
                          "gcePersistentDisk": {
                            "fsType": null,
                            "partition": null,
                            "pdName": null,
                            "readOnly": null
                          },
                          "gitRepo": {
                            "directory": null,
                            "repository": null,
                            "revision": null
                          },
                          "glusterfs": {
                            "endpoints": null,
                            "path": null,
                            "readOnly": null
                          },
                          "hostPath": {
                            "path": null,
                            "type": null
                          },
                          "iscsi": {
                            "chapAuthDiscovery": null,
                            "chapAuthSession": null,
                            "fsType": null,
                            "initiatorName": null,
                            "iqn": null,
                            "iscsiInterface": null,
                            "lun": null,
                            "portals": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "targetPortal": null
                          },
                          "name": "cert",
                          "nfs": {
                            "path": null,
                            "readOnly": null,
                            "server": null
                          },
                          "persistentVolumeClaim": {
                            "claimName": null,
                            "readOnly": null
                          },
                          "photonPersistentDisk": {
                            "fsType": null,
                            "pdID": null
                          },
                          "portworxVolume": {
                            "fsType": null,
                            "readOnly": null,
                            "volumeID": null
                          },
                          "projected": {
                            "defaultMode": null,
                            "sources": null
                          },
                          "quobyte": {
                            "group": null,
                            "readOnly": null,
                            "registry": null,
                            "tenant": null,
                            "user": null,
                            "volume": null
                          },
                          "rbd": {
                            "fsType": null,
                            "image": null,
                            "keyring": null,
                            "monitors": null,
                            "pool": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "user": null
                          },
                          "scaleIO": {
                            "fsType": null,
                            "gateway": null,
                            "protectionDomain": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "sslEnabled": null,
                            "storageMode": null,
                            "storagePool": null,
                            "system": null,
                            "volumeName": null
                          },
                          "secret": {
                            "defaultMode": 420,
                            "items": null,
                            "optional": null,
                            "secretName": "aws-load-balancer-webhook-tls"
                          },
                          "storageos": {
                            "fsType": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "volumeName": null,
                            "volumeNamespace": null
                          },
                          "vsphereVolume": {
                            "fsType": null,
                            "storagePolicyID": null,
                            "storagePolicyName": null,
                            "volumePath": null
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "minReadySeconds": "number",
                      "paused": "bool",
                      "progressDeadlineSeconds": "number",
                      "replicas": "number",
                      "revisionHistoryLimit": "number",
                      "selector": [
                        "object",
                        {
                          "matchExpressions": [
                            "list",
                            [
                              "object",
                              {
                                "key": "string",
                                "operator": "string",
                                "values": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "matchLabels": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "strategy": [
                        "object",
                        {
                          "rollingUpdate": [
                            "object",
                            {
                              "maxSurge": "string",
                              "maxUnavailable": "string"
                            }
                          ],
                          "type": "string"
                        }
                      ],
                      "template": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "clusterName": "string",
                              "creationTimestamp": "string",
                              "deletionGracePeriodSeconds": "number",
                              "deletionTimestamp": "string",
                              "finalizers": [
                                "list",
                                "string"
                              ],
                              "generateName": "string",
                              "generation": "number",
                              "labels": [
                                "map",
                                "string"
                              ],
                              "managedFields": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "fieldsType": "string",
                                    "fieldsV1": "dynamic",
                                    "manager": "string",
                                    "operation": "string",
                                    "time": "string"
                                  }
                                ]
                              ],
                              "name": "string",
                              "namespace": "string",
                              "ownerReferences": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "blockOwnerDeletion": "bool",
                                    "controller": "bool",
                                    "kind": "string",
                                    "name": "string",
                                    "uid": "string"
                                  }
                                ]
                              ],
                              "resourceVersion": "string",
                              "selfLink": "string",
                              "uid": "string"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "activeDeadlineSeconds": "number",
                              "affinity": [
                                "object",
                                {
                                  "nodeAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "preference": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ]
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "object",
                                        {
                                          "nodeSelectorTerms": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ]
                                              }
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "podAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "podAffinityTerm": [
                                              "object",
                                              {
                                                "labelSelector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "namespaces": [
                                                  "list",
                                                  "string"
                                                ],
                                                "topologyKey": "string"
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  ],
                                  "podAntiAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "podAffinityTerm": [
                                              "object",
                                              {
                                                "labelSelector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "namespaces": [
                                                  "list",
                                                  "string"
                                                ],
                                                "topologyKey": "string"
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "automountServiceAccountToken": "bool",
                              "containers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "number",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "dnsConfig": [
                                "object",
                                {
                                  "nameservers": [
                                    "list",
                                    "string"
                                  ],
                                  "options": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "searches": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "dnsPolicy": "string",
                              "enableServiceLinks": "bool",
                              "ephemeralContainers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "targetContainerName": "string",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "hostAliases": [
                                "list",
                                [
                                  "object",
                                  {
                                    "hostnames": [
                                      "list",
                                      "string"
                                    ],
                                    "ip": "string"
                                  }
                                ]
                              ],
                              "hostIPC": "bool",
                              "hostNetwork": "bool",
                              "hostPID": "bool",
                              "hostname": "string",
                              "imagePullSecrets": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string"
                                  }
                                ]
                              ],
                              "initContainers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "nodeName": "string",
                              "nodeSelector": [
                                "map",
                                "string"
                              ],
                              "overhead": [
                                "map",
                                "string"
                              ],
                              "preemptionPolicy": "string",
                              "priority": "number",
                              "priorityClassName": "string",
                              "readinessGates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "conditionType": "string"
                                  }
                                ]
                              ],
                              "restartPolicy": "string",
                              "runtimeClassName": "string",
                              "schedulerName": "string",
                              "securityContext": [
                                "object",
                                {
                                  "fsGroup": "number",
                                  "fsGroupChangePolicy": "string",
                                  "runAsGroup": "number",
                                  "runAsNonRoot": "bool",
                                  "runAsUser": "number",
                                  "seLinuxOptions": [
                                    "object",
                                    {
                                      "level": "string",
                                      "role": "string",
                                      "type": "string",
                                      "user": "string"
                                    }
                                  ],
                                  "seccompProfile": [
                                    "object",
                                    {
                                      "localhostProfile": "string",
                                      "type": "string"
                                    }
                                  ],
                                  "supplementalGroups": [
                                    "list",
                                    "number"
                                  ],
                                  "sysctls": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "windowsOptions": [
                                    "object",
                                    {
                                      "gmsaCredentialSpec": "string",
                                      "gmsaCredentialSpecName": "string",
                                      "runAsUserName": "string"
                                    }
                                  ]
                                }
                              ],
                              "serviceAccount": "string",
                              "serviceAccountName": "string",
                              "setHostnameAsFQDN": "bool",
                              "shareProcessNamespace": "bool",
                              "subdomain": "string",
                              "terminationGracePeriodSeconds": "number",
                              "tolerations": [
                                "list",
                                [
                                  "object",
                                  {
                                    "effect": "string",
                                    "key": "string",
                                    "operator": "string",
                                    "tolerationSeconds": "number",
                                    "value": "string"
                                  }
                                ]
                              ],
                              "topologySpreadConstraints": [
                                "list",
                                [
                                  "object",
                                  {
                                    "labelSelector": [
                                      "object",
                                      {
                                        "matchExpressions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "operator": "string",
                                              "values": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ]
                                        ],
                                        "matchLabels": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "maxSkew": "number",
                                    "topologyKey": "string",
                                    "whenUnsatisfiable": "string"
                                  }
                                ]
                              ],
                              "volumes": [
                                "list",
                                [
                                  "object",
                                  {
                                    "awsElasticBlockStore": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "partition": "number",
                                        "readOnly": "bool",
                                        "volumeID": "string"
                                      }
                                    ],
                                    "azureDisk": [
                                      "object",
                                      {
                                        "cachingMode": "string",
                                        "diskName": "string",
                                        "diskURI": "string",
                                        "fsType": "string",
                                        "kind": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "azureFile": [
                                      "object",
                                      {
                                        "readOnly": "bool",
                                        "secretName": "string",
                                        "shareName": "string"
                                      }
                                    ],
                                    "cephfs": [
                                      "object",
                                      {
                                        "monitors": [
                                          "list",
                                          "string"
                                        ],
                                        "path": "string",
                                        "readOnly": "bool",
                                        "secretFile": "string",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "user": "string"
                                      }
                                    ],
                                    "cinder": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "volumeID": "string"
                                      }
                                    ],
                                    "configMap": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "items": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "mode": "number",
                                              "path": "string"
                                            }
                                          ]
                                        ],
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "csi": [
                                      "object",
                                      {
                                        "driver": "string",
                                        "fsType": "string",
                                        "nodePublishSecretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "readOnly": "bool",
                                        "volumeAttributes": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "downwardAPI": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "items": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "mode": "number",
                                              "path": "string",
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    "emptyDir": [
                                      "object",
                                      {
                                        "medium": "string",
                                        "sizeLimit": "string"
                                      }
                                    ],
                                    "ephemeral": [
                                      "object",
                                      {
                                        "readOnly": "bool",
                                        "volumeClaimTemplate": [
                                          "object",
                                          {
                                            "metadata": [
                                              "object",
                                              {
                                                "annotations": [
                                                  "map",
                                                  "string"
                                                ],
                                                "clusterName": "string",
                                                "creationTimestamp": "string",
                                                "deletionGracePeriodSeconds": "number",
                                                "deletionTimestamp": "string",
                                                "finalizers": [
                                                  "list",
                                                  "string"
                                                ],
                                                "generateName": "string",
                                                "generation": "number",
                                                "labels": [
                                                  "map",
                                                  "string"
                                                ],
                                                "managedFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "apiVersion": "string",
                                                      "fieldsType": "string",
                                                      "fieldsV1": "dynamic",
                                                      "manager": "string",
                                                      "operation": "string",
                                                      "time": "string"
                                                    }
                                                  ]
                                                ],
                                                "name": "string",
                                                "namespace": "string",
                                                "ownerReferences": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "apiVersion": "string",
                                                      "blockOwnerDeletion": "bool",
                                                      "controller": "bool",
                                                      "kind": "string",
                                                      "name": "string",
                                                      "uid": "string"
                                                    }
                                                  ]
                                                ],
                                                "resourceVersion": "string",
                                                "selfLink": "string",
                                                "uid": "string"
                                              }
                                            ],
                                            "spec": [
                                              "object",
                                              {
                                                "accessModes": [
                                                  "list",
                                                  "string"
                                                ],
                                                "dataSource": [
                                                  "object",
                                                  {
                                                    "apiGroup": "string",
                                                    "kind": "string",
                                                    "name": "string"
                                                  }
                                                ],
                                                "resources": [
                                                  "object",
                                                  {
                                                    "limits": [
                                                      "map",
                                                      "string"
                                                    ],
                                                    "requests": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "selector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "storageClassName": "string",
                                                "volumeMode": "string",
                                                "volumeName": "string"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "fc": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "lun": "number",
                                        "readOnly": "bool",
                                        "targetWWNs": [
                                          "list",
                                          "string"
                                        ],
                                        "wwids": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "flexVolume": [
                                      "object",
                                      {
                                        "driver": "string",
                                        "fsType": "string",
                                        "options": [
                                          "map",
                                          "string"
                                        ],
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "flocker": [
                                      "object",
                                      {
                                        "datasetName": "string",
                                        "datasetUUID": "string"
                                      }
                                    ],
                                    "gcePersistentDisk": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "partition": "number",
                                        "pdName": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "gitRepo": [
                                      "object",
                                      {
                                        "directory": "string",
                                        "repository": "string",
                                        "revision": "string"
                                      }
                                    ],
                                    "glusterfs": [
                                      "object",
                                      {
                                        "endpoints": "string",
                                        "path": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "hostPath": [
                                      "object",
                                      {
                                        "path": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "iscsi": [
                                      "object",
                                      {
                                        "chapAuthDiscovery": "bool",
                                        "chapAuthSession": "bool",
                                        "fsType": "string",
                                        "initiatorName": "string",
                                        "iqn": "string",
                                        "iscsiInterface": "string",
                                        "lun": "number",
                                        "portals": [
                                          "list",
                                          "string"
                                        ],
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "targetPortal": "string"
                                      }
                                    ],
                                    "name": "string",
                                    "nfs": [
                                      "object",
                                      {
                                        "path": "string",
                                        "readOnly": "bool",
                                        "server": "string"
                                      }
                                    ],
                                    "persistentVolumeClaim": [
                                      "object",
                                      {
                                        "claimName": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "photonPersistentDisk": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "pdID": "string"
                                      }
                                    ],
                                    "portworxVolume": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "readOnly": "bool",
                                        "volumeID": "string"
                                      }
                                    ],
                                    "projected": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "sources": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "configMap": [
                                                "object",
                                                {
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "downwardAPI": [
                                                "object",
                                                {
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "fieldRef": [
                                                          "object",
                                                          {
                                                            "apiVersion": "string",
                                                            "fieldPath": "string"
                                                          }
                                                        ],
                                                        "mode": "number",
                                                        "path": "string",
                                                        "resourceFieldRef": [
                                                          "object",
                                                          {
                                                            "containerName": "string",
                                                            "divisor": "string",
                                                            "resource": "string"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ],
                                              "secret": [
                                                "object",
                                                {
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "serviceAccountToken": [
                                                "object",
                                                {
                                                  "audience": "string",
                                                  "expirationSeconds": "number",
                                                  "path": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    "quobyte": [
                                      "object",
                                      {
                                        "group": "string",
                                        "readOnly": "bool",
                                        "registry": "string",
                                        "tenant": "string",
                                        "user": "string",
                                        "volume": "string"
                                      }
                                    ],
                                    "rbd": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "image": "string",
                                        "keyring": "string",
                                        "monitors": [
                                          "list",
                                          "string"
                                        ],
                                        "pool": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "user": "string"
                                      }
                                    ],
                                    "scaleIO": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "gateway": "string",
                                        "protectionDomain": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "sslEnabled": "bool",
                                        "storageMode": "string",
                                        "storagePool": "string",
                                        "system": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "secret": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "items": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "mode": "number",
                                              "path": "string"
                                            }
                                          ]
                                        ],
                                        "optional": "bool",
                                        "secretName": "string"
                                      }
                                    ],
                                    "storageos": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "volumeName": "string",
                                        "volumeNamespace": "string"
                                      }
                                    ],
                                    "vsphereVolume": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "storagePolicyID": "string",
                                        "storagePolicyName": "string",
                                        "volumePath": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.http.wait_for_cluster",
            "random_string.suffix",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc.this",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "deployment_kube_system_cluster_autoscaler",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                  "labels": {
                    "app": "cluster-autoscaler"
                  },
                  "name": "cluster-autoscaler",
                  "namespace": "kube-system"
                },
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "cluster-autoscaler"
                    }
                  },
                  "template": {
                    "metadata": {
                      "annotations": {
                        "prometheus.io/port": "8085",
                        "prometheus.io/scrape": "true"
                      },
                      "labels": {
                        "app": "cluster-autoscaler"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "command": [
                            "./cluster-autoscaler",
                            "--v=4",
                            "--stderrthreshold=info",
                            "--cloud-provider=aws",
                            "--skip-nodes-with-local-storage=false",
                            "--skip-nodes-with-system-pods",
                            "--balance-similar-node-groups",
                            "--expander=least-waste",
                            "--node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/skyworkz-k8s-training-RktmQKS9"
                          ],
                          "image": "k8s.gcr.io/autoscaling/cluster-autoscaler:v1.21.0",
                          "imagePullPolicy": "Always",
                          "name": "cluster-autoscaler",
                          "resources": {
                            "limits": {
                              "cpu": "100m",
                              "memory": "600Mi"
                            },
                            "requests": {
                              "cpu": "100m",
                              "memory": "600Mi"
                            }
                          },
                          "volumeMounts": [
                            {
                              "mountPath": "/etc/ssl/certs/ca-certificates.crt",
                              "name": "ssl-certs",
                              "readOnly": true
                            }
                          ]
                        }
                      ],
                      "nodeSelector": {
                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                        "kubernetes.io/os": "linux",
                        "tenant": "kubetrain"
                      },
                      "priorityClassName": "system-cluster-critical",
                      "securityContext": {
                        "fsGroup": 65534,
                        "runAsNonRoot": true,
                        "runAsUser": 65534
                      },
                      "serviceAccountName": "cluster-autoscaler",
                      "tolerations": [
                        {
                          "effect": "NoSchedule",
                          "key": "tenant",
                          "operator": "Equal",
                          "value": "kubetrain"
                        }
                      ],
                      "volumes": [
                        {
                          "hostPath": {
                            "path": "/etc/ssl/certs/ca-bundle.crt"
                          },
                          "name": "ssl-certs"
                        }
                      ]
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "app": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "replicas": "number",
                      "selector": [
                        "object",
                        {
                          "matchLabels": [
                            "object",
                            {
                              "app": "string"
                            }
                          ]
                        }
                      ],
                      "template": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "object",
                                {
                                  "prometheus.io/port": "string",
                                  "prometheus.io/scrape": "string"
                                }
                              ],
                              "labels": [
                                "object",
                                {
                                  "app": "string"
                                }
                              ]
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "containers": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "command": [
                                        "tuple",
                                        [
                                          "string",
                                          "string",
                                          "string",
                                          "string",
                                          "string",
                                          "string",
                                          "string",
                                          "string",
                                          "string"
                                        ]
                                      ],
                                      "image": "string",
                                      "imagePullPolicy": "string",
                                      "name": "string",
                                      "resources": [
                                        "object",
                                        {
                                          "limits": [
                                            "object",
                                            {
                                              "cpu": "string",
                                              "memory": "string"
                                            }
                                          ],
                                          "requests": [
                                            "object",
                                            {
                                              "cpu": "string",
                                              "memory": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "volumeMounts": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "mountPath": "string",
                                              "name": "string",
                                              "readOnly": "bool"
                                            }
                                          ]
                                        ]
                                      ]
                                    }
                                  ]
                                ]
                              ],
                              "nodeSelector": [
                                "object",
                                {
                                  "eks.amazonaws.com/capacityType": "string",
                                  "kubernetes.io/os": "string",
                                  "tenant": "string"
                                }
                              ],
                              "priorityClassName": "string",
                              "securityContext": [
                                "object",
                                {
                                  "fsGroup": "number",
                                  "runAsNonRoot": "bool",
                                  "runAsUser": "number"
                                }
                              ],
                              "serviceAccountName": "string",
                              "tolerations": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "effect": "string",
                                      "key": "string",
                                      "operator": "string",
                                      "value": "string"
                                    }
                                  ]
                                ]
                              ],
                              "volumes": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "hostPath": [
                                        "object",
                                        {
                                          "path": "string"
                                        }
                                      ],
                                      "name": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                  "annotations": {
                    "deployment.kubernetes.io/revision": "2"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app": "cluster-autoscaler"
                  },
                  "managedFields": null,
                  "name": "cluster-autoscaler",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "minReadySeconds": null,
                  "paused": null,
                  "progressDeadlineSeconds": 600,
                  "replicas": 1,
                  "revisionHistoryLimit": 10,
                  "selector": {
                    "matchExpressions": null,
                    "matchLabels": {
                      "app": "cluster-autoscaler"
                    }
                  },
                  "strategy": {
                    "rollingUpdate": {
                      "maxSurge": "25%",
                      "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                  },
                  "template": {
                    "metadata": {
                      "annotations": {
                        "prometheus.io/port": "8085",
                        "prometheus.io/scrape": "true"
                      },
                      "clusterName": null,
                      "creationTimestamp": null,
                      "deletionGracePeriodSeconds": null,
                      "deletionTimestamp": null,
                      "finalizers": null,
                      "generateName": null,
                      "generation": null,
                      "labels": {
                        "app": "cluster-autoscaler"
                      },
                      "managedFields": null,
                      "name": null,
                      "namespace": null,
                      "ownerReferences": null,
                      "resourceVersion": null,
                      "selfLink": null,
                      "uid": null
                    },
                    "spec": {
                      "activeDeadlineSeconds": null,
                      "affinity": {
                        "nodeAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": null
                          }
                        },
                        "podAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": null
                        },
                        "podAntiAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": null
                        }
                      },
                      "automountServiceAccountToken": null,
                      "containers": [
                        {
                          "args": null,
                          "command": [
                            "./cluster-autoscaler",
                            "--v=4",
                            "--stderrthreshold=info",
                            "--cloud-provider=aws",
                            "--skip-nodes-with-local-storage=false",
                            "--skip-nodes-with-system-pods",
                            "--balance-similar-node-groups",
                            "--expander=least-waste",
                            "--node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/skyworkz-k8s-training-RktmQKS9"
                          ],
                          "env": null,
                          "envFrom": null,
                          "image": "k8s.gcr.io/autoscaling/cluster-autoscaler:v1.21.0",
                          "imagePullPolicy": "Always",
                          "lifecycle": {
                            "postStart": {
                              "exec": {
                                "command": null
                              },
                              "httpGet": {
                                "host": null,
                                "httpHeaders": null,
                                "path": null,
                                "port": null,
                                "scheme": null
                              },
                              "tcpSocket": {
                                "host": null,
                                "port": null
                              }
                            },
                            "preStop": {
                              "exec": {
                                "command": null
                              },
                              "httpGet": {
                                "host": null,
                                "httpHeaders": null,
                                "path": null,
                                "port": null,
                                "scheme": null
                              },
                              "tcpSocket": {
                                "host": null,
                                "port": null
                              }
                            }
                          },
                          "livenessProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": null,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": null,
                              "port": null,
                              "scheme": null
                            },
                            "initialDelaySeconds": null,
                            "periodSeconds": null,
                            "successThreshold": null,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "timeoutSeconds": null
                          },
                          "name": "cluster-autoscaler",
                          "ports": null,
                          "readinessProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": null,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": null,
                              "port": null,
                              "scheme": null
                            },
                            "initialDelaySeconds": null,
                            "periodSeconds": null,
                            "successThreshold": null,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "timeoutSeconds": null
                          },
                          "resources": {
                            "limits": {
                              "cpu": "100m",
                              "memory": "600Mi"
                            },
                            "requests": {
                              "cpu": "100m",
                              "memory": "600Mi"
                            }
                          },
                          "securityContext": {
                            "allowPrivilegeEscalation": null,
                            "capabilities": {
                              "add": null,
                              "drop": null
                            },
                            "privileged": null,
                            "procMount": null,
                            "readOnlyRootFilesystem": null,
                            "runAsGroup": null,
                            "runAsNonRoot": null,
                            "runAsUser": null,
                            "seLinuxOptions": {
                              "level": null,
                              "role": null,
                              "type": null,
                              "user": null
                            },
                            "seccompProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "windowsOptions": {
                              "gmsaCredentialSpec": null,
                              "gmsaCredentialSpecName": null,
                              "runAsUserName": null
                            }
                          },
                          "startupProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": null,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": null,
                              "port": null,
                              "scheme": null
                            },
                            "initialDelaySeconds": null,
                            "periodSeconds": null,
                            "successThreshold": null,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "timeoutSeconds": null
                          },
                          "stdin": null,
                          "stdinOnce": null,
                          "terminationMessagePath": "/dev/termination-log",
                          "terminationMessagePolicy": "File",
                          "tty": null,
                          "volumeDevices": null,
                          "volumeMounts": [
                            {
                              "mountPath": "/etc/ssl/certs/ca-certificates.crt",
                              "mountPropagation": null,
                              "name": "ssl-certs",
                              "readOnly": true,
                              "subPath": null,
                              "subPathExpr": null
                            }
                          ],
                          "workingDir": null
                        }
                      ],
                      "dnsConfig": {
                        "nameservers": null,
                        "options": null,
                        "searches": null
                      },
                      "dnsPolicy": "ClusterFirst",
                      "enableServiceLinks": null,
                      "ephemeralContainers": null,
                      "hostAliases": null,
                      "hostIPC": null,
                      "hostNetwork": null,
                      "hostPID": null,
                      "hostname": null,
                      "imagePullSecrets": null,
                      "initContainers": null,
                      "nodeName": null,
                      "nodeSelector": {
                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                        "kubernetes.io/os": "linux",
                        "tenant": "kubetrain"
                      },
                      "overhead": null,
                      "preemptionPolicy": null,
                      "priority": null,
                      "priorityClassName": "system-cluster-critical",
                      "readinessGates": null,
                      "restartPolicy": "Always",
                      "runtimeClassName": null,
                      "schedulerName": "default-scheduler",
                      "securityContext": {
                        "fsGroup": 65534,
                        "fsGroupChangePolicy": null,
                        "runAsGroup": null,
                        "runAsNonRoot": true,
                        "runAsUser": 65534,
                        "seLinuxOptions": {
                          "level": null,
                          "role": null,
                          "type": null,
                          "user": null
                        },
                        "seccompProfile": {
                          "localhostProfile": null,
                          "type": null
                        },
                        "supplementalGroups": null,
                        "sysctls": null,
                        "windowsOptions": {
                          "gmsaCredentialSpec": null,
                          "gmsaCredentialSpecName": null,
                          "runAsUserName": null
                        }
                      },
                      "serviceAccount": "cluster-autoscaler",
                      "serviceAccountName": "cluster-autoscaler",
                      "setHostnameAsFQDN": null,
                      "shareProcessNamespace": null,
                      "subdomain": null,
                      "terminationGracePeriodSeconds": 30,
                      "tolerations": [
                        {
                          "effect": "NoSchedule",
                          "key": "tenant",
                          "operator": "Equal",
                          "tolerationSeconds": null,
                          "value": "kubetrain"
                        }
                      ],
                      "topologySpreadConstraints": null,
                      "volumes": [
                        {
                          "awsElasticBlockStore": {
                            "fsType": null,
                            "partition": null,
                            "readOnly": null,
                            "volumeID": null
                          },
                          "azureDisk": {
                            "cachingMode": null,
                            "diskName": null,
                            "diskURI": null,
                            "fsType": null,
                            "kind": null,
                            "readOnly": null
                          },
                          "azureFile": {
                            "readOnly": null,
                            "secretName": null,
                            "shareName": null
                          },
                          "cephfs": {
                            "monitors": null,
                            "path": null,
                            "readOnly": null,
                            "secretFile": null,
                            "secretRef": {
                              "name": null
                            },
                            "user": null
                          },
                          "cinder": {
                            "fsType": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "volumeID": null
                          },
                          "configMap": {
                            "defaultMode": null,
                            "items": null,
                            "name": null,
                            "optional": null
                          },
                          "csi": {
                            "driver": null,
                            "fsType": null,
                            "nodePublishSecretRef": {
                              "name": null
                            },
                            "readOnly": null,
                            "volumeAttributes": null
                          },
                          "downwardAPI": {
                            "defaultMode": null,
                            "items": null
                          },
                          "emptyDir": {
                            "medium": null,
                            "sizeLimit": null
                          },
                          "ephemeral": {
                            "readOnly": null,
                            "volumeClaimTemplate": {
                              "metadata": {
                                "annotations": null,
                                "clusterName": null,
                                "creationTimestamp": null,
                                "deletionGracePeriodSeconds": null,
                                "deletionTimestamp": null,
                                "finalizers": null,
                                "generateName": null,
                                "generation": null,
                                "labels": null,
                                "managedFields": null,
                                "name": null,
                                "namespace": null,
                                "ownerReferences": null,
                                "resourceVersion": null,
                                "selfLink": null,
                                "uid": null
                              },
                              "spec": {
                                "accessModes": null,
                                "dataSource": {
                                  "apiGroup": null,
                                  "kind": null,
                                  "name": null
                                },
                                "resources": {
                                  "limits": null,
                                  "requests": null
                                },
                                "selector": {
                                  "matchExpressions": null,
                                  "matchLabels": null
                                },
                                "storageClassName": null,
                                "volumeMode": null,
                                "volumeName": null
                              }
                            }
                          },
                          "fc": {
                            "fsType": null,
                            "lun": null,
                            "readOnly": null,
                            "targetWWNs": null,
                            "wwids": null
                          },
                          "flexVolume": {
                            "driver": null,
                            "fsType": null,
                            "options": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            }
                          },
                          "flocker": {
                            "datasetName": null,
                            "datasetUUID": null
                          },
                          "gcePersistentDisk": {
                            "fsType": null,
                            "partition": null,
                            "pdName": null,
                            "readOnly": null
                          },
                          "gitRepo": {
                            "directory": null,
                            "repository": null,
                            "revision": null
                          },
                          "glusterfs": {
                            "endpoints": null,
                            "path": null,
                            "readOnly": null
                          },
                          "hostPath": {
                            "path": "/etc/ssl/certs/ca-bundle.crt",
                            "type": ""
                          },
                          "iscsi": {
                            "chapAuthDiscovery": null,
                            "chapAuthSession": null,
                            "fsType": null,
                            "initiatorName": null,
                            "iqn": null,
                            "iscsiInterface": null,
                            "lun": null,
                            "portals": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "targetPortal": null
                          },
                          "name": "ssl-certs",
                          "nfs": {
                            "path": null,
                            "readOnly": null,
                            "server": null
                          },
                          "persistentVolumeClaim": {
                            "claimName": null,
                            "readOnly": null
                          },
                          "photonPersistentDisk": {
                            "fsType": null,
                            "pdID": null
                          },
                          "portworxVolume": {
                            "fsType": null,
                            "readOnly": null,
                            "volumeID": null
                          },
                          "projected": {
                            "defaultMode": null,
                            "sources": null
                          },
                          "quobyte": {
                            "group": null,
                            "readOnly": null,
                            "registry": null,
                            "tenant": null,
                            "user": null,
                            "volume": null
                          },
                          "rbd": {
                            "fsType": null,
                            "image": null,
                            "keyring": null,
                            "monitors": null,
                            "pool": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "user": null
                          },
                          "scaleIO": {
                            "fsType": null,
                            "gateway": null,
                            "protectionDomain": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "sslEnabled": null,
                            "storageMode": null,
                            "storagePool": null,
                            "system": null,
                            "volumeName": null
                          },
                          "secret": {
                            "defaultMode": null,
                            "items": null,
                            "optional": null,
                            "secretName": null
                          },
                          "storageos": {
                            "fsType": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "volumeName": null,
                            "volumeNamespace": null
                          },
                          "vsphereVolume": {
                            "fsType": null,
                            "storagePolicyID": null,
                            "storagePolicyName": null,
                            "volumePath": null
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "minReadySeconds": "number",
                      "paused": "bool",
                      "progressDeadlineSeconds": "number",
                      "replicas": "number",
                      "revisionHistoryLimit": "number",
                      "selector": [
                        "object",
                        {
                          "matchExpressions": [
                            "list",
                            [
                              "object",
                              {
                                "key": "string",
                                "operator": "string",
                                "values": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "matchLabels": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "strategy": [
                        "object",
                        {
                          "rollingUpdate": [
                            "object",
                            {
                              "maxSurge": "string",
                              "maxUnavailable": "string"
                            }
                          ],
                          "type": "string"
                        }
                      ],
                      "template": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "clusterName": "string",
                              "creationTimestamp": "string",
                              "deletionGracePeriodSeconds": "number",
                              "deletionTimestamp": "string",
                              "finalizers": [
                                "list",
                                "string"
                              ],
                              "generateName": "string",
                              "generation": "number",
                              "labels": [
                                "map",
                                "string"
                              ],
                              "managedFields": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "fieldsType": "string",
                                    "fieldsV1": "dynamic",
                                    "manager": "string",
                                    "operation": "string",
                                    "time": "string"
                                  }
                                ]
                              ],
                              "name": "string",
                              "namespace": "string",
                              "ownerReferences": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "blockOwnerDeletion": "bool",
                                    "controller": "bool",
                                    "kind": "string",
                                    "name": "string",
                                    "uid": "string"
                                  }
                                ]
                              ],
                              "resourceVersion": "string",
                              "selfLink": "string",
                              "uid": "string"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "activeDeadlineSeconds": "number",
                              "affinity": [
                                "object",
                                {
                                  "nodeAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "preference": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ]
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "object",
                                        {
                                          "nodeSelectorTerms": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ]
                                              }
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "podAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "podAffinityTerm": [
                                              "object",
                                              {
                                                "labelSelector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "namespaces": [
                                                  "list",
                                                  "string"
                                                ],
                                                "topologyKey": "string"
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  ],
                                  "podAntiAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "podAffinityTerm": [
                                              "object",
                                              {
                                                "labelSelector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "namespaces": [
                                                  "list",
                                                  "string"
                                                ],
                                                "topologyKey": "string"
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "automountServiceAccountToken": "bool",
                              "containers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "dnsConfig": [
                                "object",
                                {
                                  "nameservers": [
                                    "list",
                                    "string"
                                  ],
                                  "options": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "searches": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "dnsPolicy": "string",
                              "enableServiceLinks": "bool",
                              "ephemeralContainers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "targetContainerName": "string",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "hostAliases": [
                                "list",
                                [
                                  "object",
                                  {
                                    "hostnames": [
                                      "list",
                                      "string"
                                    ],
                                    "ip": "string"
                                  }
                                ]
                              ],
                              "hostIPC": "bool",
                              "hostNetwork": "bool",
                              "hostPID": "bool",
                              "hostname": "string",
                              "imagePullSecrets": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string"
                                  }
                                ]
                              ],
                              "initContainers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "nodeName": "string",
                              "nodeSelector": [
                                "map",
                                "string"
                              ],
                              "overhead": [
                                "map",
                                "string"
                              ],
                              "preemptionPolicy": "string",
                              "priority": "number",
                              "priorityClassName": "string",
                              "readinessGates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "conditionType": "string"
                                  }
                                ]
                              ],
                              "restartPolicy": "string",
                              "runtimeClassName": "string",
                              "schedulerName": "string",
                              "securityContext": [
                                "object",
                                {
                                  "fsGroup": "number",
                                  "fsGroupChangePolicy": "string",
                                  "runAsGroup": "number",
                                  "runAsNonRoot": "bool",
                                  "runAsUser": "number",
                                  "seLinuxOptions": [
                                    "object",
                                    {
                                      "level": "string",
                                      "role": "string",
                                      "type": "string",
                                      "user": "string"
                                    }
                                  ],
                                  "seccompProfile": [
                                    "object",
                                    {
                                      "localhostProfile": "string",
                                      "type": "string"
                                    }
                                  ],
                                  "supplementalGroups": [
                                    "list",
                                    "number"
                                  ],
                                  "sysctls": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "windowsOptions": [
                                    "object",
                                    {
                                      "gmsaCredentialSpec": "string",
                                      "gmsaCredentialSpecName": "string",
                                      "runAsUserName": "string"
                                    }
                                  ]
                                }
                              ],
                              "serviceAccount": "string",
                              "serviceAccountName": "string",
                              "setHostnameAsFQDN": "bool",
                              "shareProcessNamespace": "bool",
                              "subdomain": "string",
                              "terminationGracePeriodSeconds": "number",
                              "tolerations": [
                                "list",
                                [
                                  "object",
                                  {
                                    "effect": "string",
                                    "key": "string",
                                    "operator": "string",
                                    "tolerationSeconds": "number",
                                    "value": "string"
                                  }
                                ]
                              ],
                              "topologySpreadConstraints": [
                                "list",
                                [
                                  "object",
                                  {
                                    "labelSelector": [
                                      "object",
                                      {
                                        "matchExpressions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "operator": "string",
                                              "values": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ]
                                        ],
                                        "matchLabels": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "maxSkew": "number",
                                    "topologyKey": "string",
                                    "whenUnsatisfiable": "string"
                                  }
                                ]
                              ],
                              "volumes": [
                                "list",
                                [
                                  "object",
                                  {
                                    "awsElasticBlockStore": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "partition": "number",
                                        "readOnly": "bool",
                                        "volumeID": "string"
                                      }
                                    ],
                                    "azureDisk": [
                                      "object",
                                      {
                                        "cachingMode": "string",
                                        "diskName": "string",
                                        "diskURI": "string",
                                        "fsType": "string",
                                        "kind": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "azureFile": [
                                      "object",
                                      {
                                        "readOnly": "bool",
                                        "secretName": "string",
                                        "shareName": "string"
                                      }
                                    ],
                                    "cephfs": [
                                      "object",
                                      {
                                        "monitors": [
                                          "list",
                                          "string"
                                        ],
                                        "path": "string",
                                        "readOnly": "bool",
                                        "secretFile": "string",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "user": "string"
                                      }
                                    ],
                                    "cinder": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "volumeID": "string"
                                      }
                                    ],
                                    "configMap": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "items": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "mode": "number",
                                              "path": "string"
                                            }
                                          ]
                                        ],
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "csi": [
                                      "object",
                                      {
                                        "driver": "string",
                                        "fsType": "string",
                                        "nodePublishSecretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "readOnly": "bool",
                                        "volumeAttributes": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "downwardAPI": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "items": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "mode": "number",
                                              "path": "string",
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    "emptyDir": [
                                      "object",
                                      {
                                        "medium": "string",
                                        "sizeLimit": "string"
                                      }
                                    ],
                                    "ephemeral": [
                                      "object",
                                      {
                                        "readOnly": "bool",
                                        "volumeClaimTemplate": [
                                          "object",
                                          {
                                            "metadata": [
                                              "object",
                                              {
                                                "annotations": [
                                                  "map",
                                                  "string"
                                                ],
                                                "clusterName": "string",
                                                "creationTimestamp": "string",
                                                "deletionGracePeriodSeconds": "number",
                                                "deletionTimestamp": "string",
                                                "finalizers": [
                                                  "list",
                                                  "string"
                                                ],
                                                "generateName": "string",
                                                "generation": "number",
                                                "labels": [
                                                  "map",
                                                  "string"
                                                ],
                                                "managedFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "apiVersion": "string",
                                                      "fieldsType": "string",
                                                      "fieldsV1": "dynamic",
                                                      "manager": "string",
                                                      "operation": "string",
                                                      "time": "string"
                                                    }
                                                  ]
                                                ],
                                                "name": "string",
                                                "namespace": "string",
                                                "ownerReferences": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "apiVersion": "string",
                                                      "blockOwnerDeletion": "bool",
                                                      "controller": "bool",
                                                      "kind": "string",
                                                      "name": "string",
                                                      "uid": "string"
                                                    }
                                                  ]
                                                ],
                                                "resourceVersion": "string",
                                                "selfLink": "string",
                                                "uid": "string"
                                              }
                                            ],
                                            "spec": [
                                              "object",
                                              {
                                                "accessModes": [
                                                  "list",
                                                  "string"
                                                ],
                                                "dataSource": [
                                                  "object",
                                                  {
                                                    "apiGroup": "string",
                                                    "kind": "string",
                                                    "name": "string"
                                                  }
                                                ],
                                                "resources": [
                                                  "object",
                                                  {
                                                    "limits": [
                                                      "map",
                                                      "string"
                                                    ],
                                                    "requests": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "selector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "storageClassName": "string",
                                                "volumeMode": "string",
                                                "volumeName": "string"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "fc": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "lun": "number",
                                        "readOnly": "bool",
                                        "targetWWNs": [
                                          "list",
                                          "string"
                                        ],
                                        "wwids": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "flexVolume": [
                                      "object",
                                      {
                                        "driver": "string",
                                        "fsType": "string",
                                        "options": [
                                          "map",
                                          "string"
                                        ],
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "flocker": [
                                      "object",
                                      {
                                        "datasetName": "string",
                                        "datasetUUID": "string"
                                      }
                                    ],
                                    "gcePersistentDisk": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "partition": "number",
                                        "pdName": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "gitRepo": [
                                      "object",
                                      {
                                        "directory": "string",
                                        "repository": "string",
                                        "revision": "string"
                                      }
                                    ],
                                    "glusterfs": [
                                      "object",
                                      {
                                        "endpoints": "string",
                                        "path": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "hostPath": [
                                      "object",
                                      {
                                        "path": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "iscsi": [
                                      "object",
                                      {
                                        "chapAuthDiscovery": "bool",
                                        "chapAuthSession": "bool",
                                        "fsType": "string",
                                        "initiatorName": "string",
                                        "iqn": "string",
                                        "iscsiInterface": "string",
                                        "lun": "number",
                                        "portals": [
                                          "list",
                                          "string"
                                        ],
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "targetPortal": "string"
                                      }
                                    ],
                                    "name": "string",
                                    "nfs": [
                                      "object",
                                      {
                                        "path": "string",
                                        "readOnly": "bool",
                                        "server": "string"
                                      }
                                    ],
                                    "persistentVolumeClaim": [
                                      "object",
                                      {
                                        "claimName": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "photonPersistentDisk": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "pdID": "string"
                                      }
                                    ],
                                    "portworxVolume": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "readOnly": "bool",
                                        "volumeID": "string"
                                      }
                                    ],
                                    "projected": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "sources": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "configMap": [
                                                "object",
                                                {
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "downwardAPI": [
                                                "object",
                                                {
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "fieldRef": [
                                                          "object",
                                                          {
                                                            "apiVersion": "string",
                                                            "fieldPath": "string"
                                                          }
                                                        ],
                                                        "mode": "number",
                                                        "path": "string",
                                                        "resourceFieldRef": [
                                                          "object",
                                                          {
                                                            "containerName": "string",
                                                            "divisor": "string",
                                                            "resource": "string"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ],
                                              "secret": [
                                                "object",
                                                {
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "serviceAccountToken": [
                                                "object",
                                                {
                                                  "audience": "string",
                                                  "expirationSeconds": "number",
                                                  "path": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    "quobyte": [
                                      "object",
                                      {
                                        "group": "string",
                                        "readOnly": "bool",
                                        "registry": "string",
                                        "tenant": "string",
                                        "user": "string",
                                        "volume": "string"
                                      }
                                    ],
                                    "rbd": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "image": "string",
                                        "keyring": "string",
                                        "monitors": [
                                          "list",
                                          "string"
                                        ],
                                        "pool": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "user": "string"
                                      }
                                    ],
                                    "scaleIO": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "gateway": "string",
                                        "protectionDomain": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "sslEnabled": "bool",
                                        "storageMode": "string",
                                        "storagePool": "string",
                                        "system": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "secret": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "items": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "mode": "number",
                                              "path": "string"
                                            }
                                          ]
                                        ],
                                        "optional": "bool",
                                        "secretName": "string"
                                      }
                                    ],
                                    "storageos": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "volumeName": "string",
                                        "volumeNamespace": "string"
                                      }
                                    ],
                                    "vsphereVolume": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "storagePolicyID": "string",
                                        "storagePolicyName": "string",
                                        "volumePath": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.data.http.wait_for_cluster",
            "random_string.suffix",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_subnet.private",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_partition.current",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "deployment_kube_system_metrics_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "name": "metrics-server",
                  "namespace": "kube-system"
                },
                "spec": {
                  "selector": {
                    "matchLabels": {
                      "k8s-app": "metrics-server"
                    }
                  },
                  "strategy": {
                    "rollingUpdate": {
                      "maxUnavailable": 0
                    }
                  },
                  "template": {
                    "metadata": {
                      "labels": {
                        "k8s-app": "metrics-server"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "args": [
                            "--cert-dir=/tmp",
                            "--secure-port=443",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--kubelet-use-node-status-port",
                            "--metric-resolution=15s"
                          ],
                          "image": "k8s.gcr.io/metrics-server/metrics-server:v0.5.1",
                          "imagePullPolicy": "IfNotPresent",
                          "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                              "path": "/livez",
                              "port": "https",
                              "scheme": "HTTPS"
                            },
                            "periodSeconds": 10
                          },
                          "name": "metrics-server",
                          "ports": [
                            {
                              "containerPort": 443,
                              "name": "https",
                              "protocol": "TCP"
                            }
                          ],
                          "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                              "path": "/readyz",
                              "port": "https",
                              "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10
                          },
                          "resources": {
                            "requests": {
                              "cpu": "100m",
                              "memory": "200Mi"
                            }
                          },
                          "securityContext": {
                            "readOnlyRootFilesystem": true,
                            "runAsNonRoot": true,
                            "runAsUser": 1000
                          },
                          "volumeMounts": [
                            {
                              "mountPath": "/tmp",
                              "name": "tmp-dir"
                            }
                          ]
                        }
                      ],
                      "nodeSelector": {
                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                        "kubernetes.io/os": "linux",
                        "tenant": "kubetrain"
                      },
                      "priorityClassName": "system-cluster-critical",
                      "serviceAccountName": "metrics-server",
                      "tolerations": [
                        {
                          "effect": "NoSchedule",
                          "key": "tenant",
                          "operator": "Equal",
                          "value": "kubetrain"
                        }
                      ],
                      "volumes": [
                        {
                          "emptyDir": {},
                          "name": "tmp-dir"
                        }
                      ]
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "k8s-app": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "selector": [
                        "object",
                        {
                          "matchLabels": [
                            "object",
                            {
                              "k8s-app": "string"
                            }
                          ]
                        }
                      ],
                      "strategy": [
                        "object",
                        {
                          "rollingUpdate": [
                            "object",
                            {
                              "maxUnavailable": "number"
                            }
                          ]
                        }
                      ],
                      "template": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "labels": [
                                "object",
                                {
                                  "k8s-app": "string"
                                }
                              ]
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "containers": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "args": [
                                        "tuple",
                                        [
                                          "string",
                                          "string",
                                          "string",
                                          "string",
                                          "string"
                                        ]
                                      ],
                                      "image": "string",
                                      "imagePullPolicy": "string",
                                      "livenessProbe": [
                                        "object",
                                        {
                                          "failureThreshold": "number",
                                          "httpGet": [
                                            "object",
                                            {
                                              "path": "string",
                                              "port": "string",
                                              "scheme": "string"
                                            }
                                          ],
                                          "periodSeconds": "number"
                                        }
                                      ],
                                      "name": "string",
                                      "ports": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "containerPort": "number",
                                              "name": "string",
                                              "protocol": "string"
                                            }
                                          ]
                                        ]
                                      ],
                                      "readinessProbe": [
                                        "object",
                                        {
                                          "failureThreshold": "number",
                                          "httpGet": [
                                            "object",
                                            {
                                              "path": "string",
                                              "port": "string",
                                              "scheme": "string"
                                            }
                                          ],
                                          "initialDelaySeconds": "number",
                                          "periodSeconds": "number"
                                        }
                                      ],
                                      "resources": [
                                        "object",
                                        {
                                          "requests": [
                                            "object",
                                            {
                                              "cpu": "string",
                                              "memory": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "securityContext": [
                                        "object",
                                        {
                                          "readOnlyRootFilesystem": "bool",
                                          "runAsNonRoot": "bool",
                                          "runAsUser": "number"
                                        }
                                      ],
                                      "volumeMounts": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "mountPath": "string",
                                              "name": "string"
                                            }
                                          ]
                                        ]
                                      ]
                                    }
                                  ]
                                ]
                              ],
                              "nodeSelector": [
                                "object",
                                {
                                  "eks.amazonaws.com/capacityType": "string",
                                  "kubernetes.io/os": "string",
                                  "tenant": "string"
                                }
                              ],
                              "priorityClassName": "string",
                              "serviceAccountName": "string",
                              "tolerations": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "effect": "string",
                                      "key": "string",
                                      "operator": "string",
                                      "value": "string"
                                    }
                                  ]
                                ]
                              ],
                              "volumes": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "emptyDir": [
                                        "object",
                                        {}
                                      ],
                                      "name": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                  "annotations": {
                    "deployment.kubernetes.io/revision": "2"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "managedFields": null,
                  "name": "metrics-server",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "minReadySeconds": null,
                  "paused": null,
                  "progressDeadlineSeconds": 600,
                  "replicas": 1,
                  "revisionHistoryLimit": 10,
                  "selector": {
                    "matchExpressions": null,
                    "matchLabels": {
                      "k8s-app": "metrics-server"
                    }
                  },
                  "strategy": {
                    "rollingUpdate": {
                      "maxSurge": "25%",
                      "maxUnavailable": 0
                    },
                    "type": "RollingUpdate"
                  },
                  "template": {
                    "metadata": {
                      "annotations": null,
                      "clusterName": null,
                      "creationTimestamp": null,
                      "deletionGracePeriodSeconds": null,
                      "deletionTimestamp": null,
                      "finalizers": null,
                      "generateName": null,
                      "generation": null,
                      "labels": {
                        "k8s-app": "metrics-server"
                      },
                      "managedFields": null,
                      "name": null,
                      "namespace": null,
                      "ownerReferences": null,
                      "resourceVersion": null,
                      "selfLink": null,
                      "uid": null
                    },
                    "spec": {
                      "activeDeadlineSeconds": null,
                      "affinity": {
                        "nodeAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": null
                          }
                        },
                        "podAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": null
                        },
                        "podAntiAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": null
                        }
                      },
                      "automountServiceAccountToken": null,
                      "containers": [
                        {
                          "args": [
                            "--cert-dir=/tmp",
                            "--secure-port=443",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--kubelet-use-node-status-port",
                            "--metric-resolution=15s"
                          ],
                          "command": null,
                          "env": null,
                          "envFrom": null,
                          "image": "k8s.gcr.io/metrics-server/metrics-server:v0.5.1",
                          "imagePullPolicy": "IfNotPresent",
                          "lifecycle": {
                            "postStart": {
                              "exec": {
                                "command": null
                              },
                              "httpGet": {
                                "host": null,
                                "httpHeaders": null,
                                "path": null,
                                "port": null,
                                "scheme": null
                              },
                              "tcpSocket": {
                                "host": null,
                                "port": null
                              }
                            },
                            "preStop": {
                              "exec": {
                                "command": null
                              },
                              "httpGet": {
                                "host": null,
                                "httpHeaders": null,
                                "path": null,
                                "port": null,
                                "scheme": null
                              },
                              "tcpSocket": {
                                "host": null,
                                "port": null
                              }
                            }
                          },
                          "livenessProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": 3,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": "/livez",
                              "port": "https",
                              "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": null,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "timeoutSeconds": 1
                          },
                          "name": "metrics-server",
                          "ports": [
                            {
                              "containerPort": 443,
                              "hostIP": null,
                              "hostPort": null,
                              "name": "https",
                              "protocol": "TCP"
                            }
                          ],
                          "readinessProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": 3,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": "/readyz",
                              "port": "https",
                              "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "timeoutSeconds": 1
                          },
                          "resources": {
                            "limits": null,
                            "requests": {
                              "cpu": "100m",
                              "memory": "200Mi"
                            }
                          },
                          "securityContext": {
                            "allowPrivilegeEscalation": null,
                            "capabilities": {
                              "add": null,
                              "drop": null
                            },
                            "privileged": null,
                            "procMount": null,
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": null,
                            "runAsNonRoot": true,
                            "runAsUser": 1000,
                            "seLinuxOptions": {
                              "level": null,
                              "role": null,
                              "type": null,
                              "user": null
                            },
                            "seccompProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "windowsOptions": {
                              "gmsaCredentialSpec": null,
                              "gmsaCredentialSpecName": null,
                              "runAsUserName": null
                            }
                          },
                          "startupProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": null,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": null,
                              "port": null,
                              "scheme": null
                            },
                            "initialDelaySeconds": null,
                            "periodSeconds": null,
                            "successThreshold": null,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "timeoutSeconds": null
                          },
                          "stdin": null,
                          "stdinOnce": null,
                          "terminationMessagePath": "/dev/termination-log",
                          "terminationMessagePolicy": "File",
                          "tty": null,
                          "volumeDevices": null,
                          "volumeMounts": [
                            {
                              "mountPath": "/tmp",
                              "mountPropagation": null,
                              "name": "tmp-dir",
                              "readOnly": null,
                              "subPath": null,
                              "subPathExpr": null
                            }
                          ],
                          "workingDir": null
                        }
                      ],
                      "dnsConfig": {
                        "nameservers": null,
                        "options": null,
                        "searches": null
                      },
                      "dnsPolicy": "ClusterFirst",
                      "enableServiceLinks": null,
                      "ephemeralContainers": null,
                      "hostAliases": null,
                      "hostIPC": null,
                      "hostNetwork": null,
                      "hostPID": null,
                      "hostname": null,
                      "imagePullSecrets": null,
                      "initContainers": null,
                      "nodeName": null,
                      "nodeSelector": {
                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                        "kubernetes.io/os": "linux",
                        "tenant": "kubetrain"
                      },
                      "overhead": null,
                      "preemptionPolicy": null,
                      "priority": null,
                      "priorityClassName": "system-cluster-critical",
                      "readinessGates": null,
                      "restartPolicy": "Always",
                      "runtimeClassName": null,
                      "schedulerName": "default-scheduler",
                      "securityContext": {
                        "fsGroup": null,
                        "fsGroupChangePolicy": null,
                        "runAsGroup": null,
                        "runAsNonRoot": null,
                        "runAsUser": null,
                        "seLinuxOptions": {
                          "level": null,
                          "role": null,
                          "type": null,
                          "user": null
                        },
                        "seccompProfile": {
                          "localhostProfile": null,
                          "type": null
                        },
                        "supplementalGroups": null,
                        "sysctls": null,
                        "windowsOptions": {
                          "gmsaCredentialSpec": null,
                          "gmsaCredentialSpecName": null,
                          "runAsUserName": null
                        }
                      },
                      "serviceAccount": "metrics-server",
                      "serviceAccountName": "metrics-server",
                      "setHostnameAsFQDN": null,
                      "shareProcessNamespace": null,
                      "subdomain": null,
                      "terminationGracePeriodSeconds": 30,
                      "tolerations": [
                        {
                          "effect": "NoSchedule",
                          "key": "tenant",
                          "operator": "Equal",
                          "tolerationSeconds": null,
                          "value": "kubetrain"
                        }
                      ],
                      "topologySpreadConstraints": null,
                      "volumes": [
                        {
                          "awsElasticBlockStore": {
                            "fsType": null,
                            "partition": null,
                            "readOnly": null,
                            "volumeID": null
                          },
                          "azureDisk": {
                            "cachingMode": null,
                            "diskName": null,
                            "diskURI": null,
                            "fsType": null,
                            "kind": null,
                            "readOnly": null
                          },
                          "azureFile": {
                            "readOnly": null,
                            "secretName": null,
                            "shareName": null
                          },
                          "cephfs": {
                            "monitors": null,
                            "path": null,
                            "readOnly": null,
                            "secretFile": null,
                            "secretRef": {
                              "name": null
                            },
                            "user": null
                          },
                          "cinder": {
                            "fsType": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "volumeID": null
                          },
                          "configMap": {
                            "defaultMode": null,
                            "items": null,
                            "name": null,
                            "optional": null
                          },
                          "csi": {
                            "driver": null,
                            "fsType": null,
                            "nodePublishSecretRef": {
                              "name": null
                            },
                            "readOnly": null,
                            "volumeAttributes": null
                          },
                          "downwardAPI": {
                            "defaultMode": null,
                            "items": null
                          },
                          "emptyDir": {
                            "medium": null,
                            "sizeLimit": null
                          },
                          "ephemeral": {
                            "readOnly": null,
                            "volumeClaimTemplate": {
                              "metadata": {
                                "annotations": null,
                                "clusterName": null,
                                "creationTimestamp": null,
                                "deletionGracePeriodSeconds": null,
                                "deletionTimestamp": null,
                                "finalizers": null,
                                "generateName": null,
                                "generation": null,
                                "labels": null,
                                "managedFields": null,
                                "name": null,
                                "namespace": null,
                                "ownerReferences": null,
                                "resourceVersion": null,
                                "selfLink": null,
                                "uid": null
                              },
                              "spec": {
                                "accessModes": null,
                                "dataSource": {
                                  "apiGroup": null,
                                  "kind": null,
                                  "name": null
                                },
                                "resources": {
                                  "limits": null,
                                  "requests": null
                                },
                                "selector": {
                                  "matchExpressions": null,
                                  "matchLabels": null
                                },
                                "storageClassName": null,
                                "volumeMode": null,
                                "volumeName": null
                              }
                            }
                          },
                          "fc": {
                            "fsType": null,
                            "lun": null,
                            "readOnly": null,
                            "targetWWNs": null,
                            "wwids": null
                          },
                          "flexVolume": {
                            "driver": null,
                            "fsType": null,
                            "options": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            }
                          },
                          "flocker": {
                            "datasetName": null,
                            "datasetUUID": null
                          },
                          "gcePersistentDisk": {
                            "fsType": null,
                            "partition": null,
                            "pdName": null,
                            "readOnly": null
                          },
                          "gitRepo": {
                            "directory": null,
                            "repository": null,
                            "revision": null
                          },
                          "glusterfs": {
                            "endpoints": null,
                            "path": null,
                            "readOnly": null
                          },
                          "hostPath": {
                            "path": null,
                            "type": null
                          },
                          "iscsi": {
                            "chapAuthDiscovery": null,
                            "chapAuthSession": null,
                            "fsType": null,
                            "initiatorName": null,
                            "iqn": null,
                            "iscsiInterface": null,
                            "lun": null,
                            "portals": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "targetPortal": null
                          },
                          "name": "tmp-dir",
                          "nfs": {
                            "path": null,
                            "readOnly": null,
                            "server": null
                          },
                          "persistentVolumeClaim": {
                            "claimName": null,
                            "readOnly": null
                          },
                          "photonPersistentDisk": {
                            "fsType": null,
                            "pdID": null
                          },
                          "portworxVolume": {
                            "fsType": null,
                            "readOnly": null,
                            "volumeID": null
                          },
                          "projected": {
                            "defaultMode": null,
                            "sources": null
                          },
                          "quobyte": {
                            "group": null,
                            "readOnly": null,
                            "registry": null,
                            "tenant": null,
                            "user": null,
                            "volume": null
                          },
                          "rbd": {
                            "fsType": null,
                            "image": null,
                            "keyring": null,
                            "monitors": null,
                            "pool": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "user": null
                          },
                          "scaleIO": {
                            "fsType": null,
                            "gateway": null,
                            "protectionDomain": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "sslEnabled": null,
                            "storageMode": null,
                            "storagePool": null,
                            "system": null,
                            "volumeName": null
                          },
                          "secret": {
                            "defaultMode": null,
                            "items": null,
                            "optional": null,
                            "secretName": null
                          },
                          "storageos": {
                            "fsType": null,
                            "readOnly": null,
                            "secretRef": {
                              "name": null
                            },
                            "volumeName": null,
                            "volumeNamespace": null
                          },
                          "vsphereVolume": {
                            "fsType": null,
                            "storagePolicyID": null,
                            "storagePolicyName": null,
                            "volumePath": null
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "minReadySeconds": "number",
                      "paused": "bool",
                      "progressDeadlineSeconds": "number",
                      "replicas": "number",
                      "revisionHistoryLimit": "number",
                      "selector": [
                        "object",
                        {
                          "matchExpressions": [
                            "list",
                            [
                              "object",
                              {
                                "key": "string",
                                "operator": "string",
                                "values": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "matchLabels": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "strategy": [
                        "object",
                        {
                          "rollingUpdate": [
                            "object",
                            {
                              "maxSurge": "string",
                              "maxUnavailable": "number"
                            }
                          ],
                          "type": "string"
                        }
                      ],
                      "template": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "clusterName": "string",
                              "creationTimestamp": "string",
                              "deletionGracePeriodSeconds": "number",
                              "deletionTimestamp": "string",
                              "finalizers": [
                                "list",
                                "string"
                              ],
                              "generateName": "string",
                              "generation": "number",
                              "labels": [
                                "map",
                                "string"
                              ],
                              "managedFields": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "fieldsType": "string",
                                    "fieldsV1": "dynamic",
                                    "manager": "string",
                                    "operation": "string",
                                    "time": "string"
                                  }
                                ]
                              ],
                              "name": "string",
                              "namespace": "string",
                              "ownerReferences": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "blockOwnerDeletion": "bool",
                                    "controller": "bool",
                                    "kind": "string",
                                    "name": "string",
                                    "uid": "string"
                                  }
                                ]
                              ],
                              "resourceVersion": "string",
                              "selfLink": "string",
                              "uid": "string"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "activeDeadlineSeconds": "number",
                              "affinity": [
                                "object",
                                {
                                  "nodeAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "preference": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ]
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "object",
                                        {
                                          "nodeSelectorTerms": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ]
                                              }
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "podAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "podAffinityTerm": [
                                              "object",
                                              {
                                                "labelSelector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "namespaces": [
                                                  "list",
                                                  "string"
                                                ],
                                                "topologyKey": "string"
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  ],
                                  "podAntiAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "podAffinityTerm": [
                                              "object",
                                              {
                                                "labelSelector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "namespaces": [
                                                  "list",
                                                  "string"
                                                ],
                                                "topologyKey": "string"
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "automountServiceAccountToken": "bool",
                              "containers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "dnsConfig": [
                                "object",
                                {
                                  "nameservers": [
                                    "list",
                                    "string"
                                  ],
                                  "options": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "searches": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "dnsPolicy": "string",
                              "enableServiceLinks": "bool",
                              "ephemeralContainers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "targetContainerName": "string",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "hostAliases": [
                                "list",
                                [
                                  "object",
                                  {
                                    "hostnames": [
                                      "list",
                                      "string"
                                    ],
                                    "ip": "string"
                                  }
                                ]
                              ],
                              "hostIPC": "bool",
                              "hostNetwork": "bool",
                              "hostPID": "bool",
                              "hostname": "string",
                              "imagePullSecrets": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string"
                                  }
                                ]
                              ],
                              "initContainers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "dynamic",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "dynamic"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "dynamic",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "dynamic"
                                          }
                                        ],
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "nodeName": "string",
                              "nodeSelector": [
                                "map",
                                "string"
                              ],
                              "overhead": [
                                "map",
                                "string"
                              ],
                              "preemptionPolicy": "string",
                              "priority": "number",
                              "priorityClassName": "string",
                              "readinessGates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "conditionType": "string"
                                  }
                                ]
                              ],
                              "restartPolicy": "string",
                              "runtimeClassName": "string",
                              "schedulerName": "string",
                              "securityContext": [
                                "object",
                                {
                                  "fsGroup": "number",
                                  "fsGroupChangePolicy": "string",
                                  "runAsGroup": "number",
                                  "runAsNonRoot": "bool",
                                  "runAsUser": "number",
                                  "seLinuxOptions": [
                                    "object",
                                    {
                                      "level": "string",
                                      "role": "string",
                                      "type": "string",
                                      "user": "string"
                                    }
                                  ],
                                  "seccompProfile": [
                                    "object",
                                    {
                                      "localhostProfile": "string",
                                      "type": "string"
                                    }
                                  ],
                                  "supplementalGroups": [
                                    "list",
                                    "number"
                                  ],
                                  "sysctls": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "windowsOptions": [
                                    "object",
                                    {
                                      "gmsaCredentialSpec": "string",
                                      "gmsaCredentialSpecName": "string",
                                      "runAsUserName": "string"
                                    }
                                  ]
                                }
                              ],
                              "serviceAccount": "string",
                              "serviceAccountName": "string",
                              "setHostnameAsFQDN": "bool",
                              "shareProcessNamespace": "bool",
                              "subdomain": "string",
                              "terminationGracePeriodSeconds": "number",
                              "tolerations": [
                                "list",
                                [
                                  "object",
                                  {
                                    "effect": "string",
                                    "key": "string",
                                    "operator": "string",
                                    "tolerationSeconds": "number",
                                    "value": "string"
                                  }
                                ]
                              ],
                              "topologySpreadConstraints": [
                                "list",
                                [
                                  "object",
                                  {
                                    "labelSelector": [
                                      "object",
                                      {
                                        "matchExpressions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "operator": "string",
                                              "values": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ]
                                        ],
                                        "matchLabels": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "maxSkew": "number",
                                    "topologyKey": "string",
                                    "whenUnsatisfiable": "string"
                                  }
                                ]
                              ],
                              "volumes": [
                                "list",
                                [
                                  "object",
                                  {
                                    "awsElasticBlockStore": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "partition": "number",
                                        "readOnly": "bool",
                                        "volumeID": "string"
                                      }
                                    ],
                                    "azureDisk": [
                                      "object",
                                      {
                                        "cachingMode": "string",
                                        "diskName": "string",
                                        "diskURI": "string",
                                        "fsType": "string",
                                        "kind": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "azureFile": [
                                      "object",
                                      {
                                        "readOnly": "bool",
                                        "secretName": "string",
                                        "shareName": "string"
                                      }
                                    ],
                                    "cephfs": [
                                      "object",
                                      {
                                        "monitors": [
                                          "list",
                                          "string"
                                        ],
                                        "path": "string",
                                        "readOnly": "bool",
                                        "secretFile": "string",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "user": "string"
                                      }
                                    ],
                                    "cinder": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "volumeID": "string"
                                      }
                                    ],
                                    "configMap": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "items": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "mode": "number",
                                              "path": "string"
                                            }
                                          ]
                                        ],
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "csi": [
                                      "object",
                                      {
                                        "driver": "string",
                                        "fsType": "string",
                                        "nodePublishSecretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "readOnly": "bool",
                                        "volumeAttributes": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "downwardAPI": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "items": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "mode": "number",
                                              "path": "string",
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    "emptyDir": [
                                      "object",
                                      {
                                        "medium": "string",
                                        "sizeLimit": "string"
                                      }
                                    ],
                                    "ephemeral": [
                                      "object",
                                      {
                                        "readOnly": "bool",
                                        "volumeClaimTemplate": [
                                          "object",
                                          {
                                            "metadata": [
                                              "object",
                                              {
                                                "annotations": [
                                                  "map",
                                                  "string"
                                                ],
                                                "clusterName": "string",
                                                "creationTimestamp": "string",
                                                "deletionGracePeriodSeconds": "number",
                                                "deletionTimestamp": "string",
                                                "finalizers": [
                                                  "list",
                                                  "string"
                                                ],
                                                "generateName": "string",
                                                "generation": "number",
                                                "labels": [
                                                  "map",
                                                  "string"
                                                ],
                                                "managedFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "apiVersion": "string",
                                                      "fieldsType": "string",
                                                      "fieldsV1": "dynamic",
                                                      "manager": "string",
                                                      "operation": "string",
                                                      "time": "string"
                                                    }
                                                  ]
                                                ],
                                                "name": "string",
                                                "namespace": "string",
                                                "ownerReferences": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "apiVersion": "string",
                                                      "blockOwnerDeletion": "bool",
                                                      "controller": "bool",
                                                      "kind": "string",
                                                      "name": "string",
                                                      "uid": "string"
                                                    }
                                                  ]
                                                ],
                                                "resourceVersion": "string",
                                                "selfLink": "string",
                                                "uid": "string"
                                              }
                                            ],
                                            "spec": [
                                              "object",
                                              {
                                                "accessModes": [
                                                  "list",
                                                  "string"
                                                ],
                                                "dataSource": [
                                                  "object",
                                                  {
                                                    "apiGroup": "string",
                                                    "kind": "string",
                                                    "name": "string"
                                                  }
                                                ],
                                                "resources": [
                                                  "object",
                                                  {
                                                    "limits": [
                                                      "map",
                                                      "string"
                                                    ],
                                                    "requests": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "selector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "storageClassName": "string",
                                                "volumeMode": "string",
                                                "volumeName": "string"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "fc": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "lun": "number",
                                        "readOnly": "bool",
                                        "targetWWNs": [
                                          "list",
                                          "string"
                                        ],
                                        "wwids": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "flexVolume": [
                                      "object",
                                      {
                                        "driver": "string",
                                        "fsType": "string",
                                        "options": [
                                          "map",
                                          "string"
                                        ],
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "flocker": [
                                      "object",
                                      {
                                        "datasetName": "string",
                                        "datasetUUID": "string"
                                      }
                                    ],
                                    "gcePersistentDisk": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "partition": "number",
                                        "pdName": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "gitRepo": [
                                      "object",
                                      {
                                        "directory": "string",
                                        "repository": "string",
                                        "revision": "string"
                                      }
                                    ],
                                    "glusterfs": [
                                      "object",
                                      {
                                        "endpoints": "string",
                                        "path": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "hostPath": [
                                      "object",
                                      {
                                        "path": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "iscsi": [
                                      "object",
                                      {
                                        "chapAuthDiscovery": "bool",
                                        "chapAuthSession": "bool",
                                        "fsType": "string",
                                        "initiatorName": "string",
                                        "iqn": "string",
                                        "iscsiInterface": "string",
                                        "lun": "number",
                                        "portals": [
                                          "list",
                                          "string"
                                        ],
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "targetPortal": "string"
                                      }
                                    ],
                                    "name": "string",
                                    "nfs": [
                                      "object",
                                      {
                                        "path": "string",
                                        "readOnly": "bool",
                                        "server": "string"
                                      }
                                    ],
                                    "persistentVolumeClaim": [
                                      "object",
                                      {
                                        "claimName": "string",
                                        "readOnly": "bool"
                                      }
                                    ],
                                    "photonPersistentDisk": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "pdID": "string"
                                      }
                                    ],
                                    "portworxVolume": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "readOnly": "bool",
                                        "volumeID": "string"
                                      }
                                    ],
                                    "projected": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "sources": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "configMap": [
                                                "object",
                                                {
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "downwardAPI": [
                                                "object",
                                                {
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "fieldRef": [
                                                          "object",
                                                          {
                                                            "apiVersion": "string",
                                                            "fieldPath": "string"
                                                          }
                                                        ],
                                                        "mode": "number",
                                                        "path": "string",
                                                        "resourceFieldRef": [
                                                          "object",
                                                          {
                                                            "containerName": "string",
                                                            "divisor": "string",
                                                            "resource": "string"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ],
                                              "secret": [
                                                "object",
                                                {
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "serviceAccountToken": [
                                                "object",
                                                {
                                                  "audience": "string",
                                                  "expirationSeconds": "number",
                                                  "path": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    "quobyte": [
                                      "object",
                                      {
                                        "group": "string",
                                        "readOnly": "bool",
                                        "registry": "string",
                                        "tenant": "string",
                                        "user": "string",
                                        "volume": "string"
                                      }
                                    ],
                                    "rbd": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "image": "string",
                                        "keyring": "string",
                                        "monitors": [
                                          "list",
                                          "string"
                                        ],
                                        "pool": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "user": "string"
                                      }
                                    ],
                                    "scaleIO": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "gateway": "string",
                                        "protectionDomain": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "sslEnabled": "bool",
                                        "storageMode": "string",
                                        "storagePool": "string",
                                        "system": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "secret": [
                                      "object",
                                      {
                                        "defaultMode": "number",
                                        "items": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "mode": "number",
                                              "path": "string"
                                            }
                                          ]
                                        ],
                                        "optional": "bool",
                                        "secretName": "string"
                                      }
                                    ],
                                    "storageos": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "readOnly": "bool",
                                        "secretRef": [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ],
                                        "volumeName": "string",
                                        "volumeNamespace": "string"
                                      }
                                    ],
                                    "vsphereVolume": [
                                      "object",
                                      {
                                        "fsType": "string",
                                        "storagePolicyID": "string",
                                        "storagePolicyName": "string",
                                        "volumePath": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_availability_zones.available",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "random_string.suffix",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.http.wait_for_cluster",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "issuer_kube_system_aws_load_balancer_selfsigned_issuer",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "Issuer",
                "metadata": {
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "name": "aws-load-balancer-selfsigned-issuer",
                  "namespace": "kube-system"
                },
                "spec": {
                  "selfSigned": {}
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "app.kubernetes.io/name": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "selfSigned": [
                        "object",
                        {}
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "Issuer",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "managedFields": null,
                  "name": "aws-load-balancer-selfsigned-issuer",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "acme": {
                    "disableAccountKeyGeneration": null,
                    "email": null,
                    "enableDurationFeature": null,
                    "externalAccountBinding": {
                      "keyAlgorithm": null,
                      "keyID": null,
                      "keySecretRef": {
                        "key": null,
                        "name": null
                      }
                    },
                    "preferredChain": null,
                    "privateKeySecretRef": {
                      "key": null,
                      "name": null
                    },
                    "server": null,
                    "skipTLSVerify": null,
                    "solvers": null
                  },
                  "ca": {
                    "crlDistributionPoints": null,
                    "ocspServers": null,
                    "secretName": null
                  },
                  "selfSigned": {
                    "crlDistributionPoints": null
                  },
                  "vault": {
                    "auth": {
                      "appRole": {
                        "path": null,
                        "roleId": null,
                        "secretRef": {
                          "key": null,
                          "name": null
                        }
                      },
                      "kubernetes": {
                        "mountPath": null,
                        "role": null,
                        "secretRef": {
                          "key": null,
                          "name": null
                        }
                      },
                      "tokenSecretRef": {
                        "key": null,
                        "name": null
                      }
                    },
                    "caBundle": null,
                    "namespace": null,
                    "path": null,
                    "server": null
                  },
                  "venafi": {
                    "cloud": {
                      "apiTokenSecretRef": {
                        "key": null,
                        "name": null
                      },
                      "url": null
                    },
                    "tpp": {
                      "caBundle": null,
                      "credentialsRef": {
                        "name": null
                      },
                      "url": null
                    },
                    "zone": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "acme": [
                        "object",
                        {
                          "disableAccountKeyGeneration": "bool",
                          "email": "string",
                          "enableDurationFeature": "bool",
                          "externalAccountBinding": [
                            "object",
                            {
                              "keyAlgorithm": "string",
                              "keyID": "string",
                              "keySecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ],
                          "preferredChain": "string",
                          "privateKeySecretRef": [
                            "object",
                            {
                              "key": "string",
                              "name": "string"
                            }
                          ],
                          "server": "string",
                          "skipTLSVerify": "bool",
                          "solvers": [
                            "list",
                            [
                              "object",
                              {
                                "dns01": [
                                  "object",
                                  {
                                    "acmeDNS": [
                                      "object",
                                      {
                                        "accountSecretRef": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "host": "string"
                                      }
                                    ],
                                    "akamai": [
                                      "object",
                                      {
                                        "accessTokenSecretRef": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "clientSecretSecretRef": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "clientTokenSecretRef": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "serviceConsumerDomain": "string"
                                      }
                                    ],
                                    "azureDNS": [
                                      "object",
                                      {
                                        "clientID": "string",
                                        "clientSecretSecretRef": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "environment": "string",
                                        "hostedZoneName": "string",
                                        "managedIdentity": [
                                          "object",
                                          {
                                            "clientID": "string",
                                            "resourceID": "string"
                                          }
                                        ],
                                        "resourceGroupName": "string",
                                        "subscriptionID": "string",
                                        "tenantID": "string"
                                      }
                                    ],
                                    "cloudDNS": [
                                      "object",
                                      {
                                        "hostedZoneName": "string",
                                        "project": "string",
                                        "serviceAccountSecretRef": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "cloudflare": [
                                      "object",
                                      {
                                        "apiKeySecretRef": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "apiTokenSecretRef": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "email": "string"
                                      }
                                    ],
                                    "cnameStrategy": "string",
                                    "digitalocean": [
                                      "object",
                                      {
                                        "tokenSecretRef": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "rfc2136": [
                                      "object",
                                      {
                                        "nameserver": "string",
                                        "tsigAlgorithm": "string",
                                        "tsigKeyName": "string",
                                        "tsigSecretSecretRef": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "route53": [
                                      "object",
                                      {
                                        "accessKeyID": "string",
                                        "hostedZoneID": "string",
                                        "region": "string",
                                        "role": "string",
                                        "secretAccessKeySecretRef": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "webhook": [
                                      "object",
                                      {
                                        "config": "dynamic",
                                        "groupName": "string",
                                        "solverName": "string"
                                      }
                                    ]
                                  }
                                ],
                                "http01": [
                                  "object",
                                  {
                                    "gatewayHTTPRoute": [
                                      "object",
                                      {
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "serviceType": "string"
                                      }
                                    ],
                                    "ingress": [
                                      "object",
                                      {
                                        "class": "string",
                                        "ingressTemplate": [
                                          "object",
                                          {
                                            "metadata": [
                                              "object",
                                              {
                                                "annotations": [
                                                  "map",
                                                  "string"
                                                ],
                                                "labels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ]
                                          }
                                        ],
                                        "name": "string",
                                        "podTemplate": [
                                          "object",
                                          {
                                            "metadata": [
                                              "object",
                                              {
                                                "annotations": [
                                                  "map",
                                                  "string"
                                                ],
                                                "labels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "spec": [
                                              "object",
                                              {
                                                "affinity": [
                                                  "object",
                                                  {
                                                    "nodeAffinity": [
                                                      "object",
                                                      {
                                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "preference": [
                                                                "object",
                                                                {
                                                                  "matchExpressions": [
                                                                    "list",
                                                                    [
                                                                      "object",
                                                                      {
                                                                        "key": "string",
                                                                        "operator": "string",
                                                                        "values": [
                                                                          "list",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ]
                                                                  ],
                                                                  "matchFields": [
                                                                    "list",
                                                                    [
                                                                      "object",
                                                                      {
                                                                        "key": "string",
                                                                        "operator": "string",
                                                                        "values": [
                                                                          "list",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ]
                                                                  ]
                                                                }
                                                              ],
                                                              "weight": "number"
                                                            }
                                                          ]
                                                        ],
                                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                                          "object",
                                                          {
                                                            "nodeSelectorTerms": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "matchExpressions": [
                                                                    "list",
                                                                    [
                                                                      "object",
                                                                      {
                                                                        "key": "string",
                                                                        "operator": "string",
                                                                        "values": [
                                                                          "list",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ]
                                                                  ],
                                                                  "matchFields": [
                                                                    "list",
                                                                    [
                                                                      "object",
                                                                      {
                                                                        "key": "string",
                                                                        "operator": "string",
                                                                        "values": [
                                                                          "list",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    ],
                                                    "podAffinity": [
                                                      "object",
                                                      {
                                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "podAffinityTerm": [
                                                                "object",
                                                                {
                                                                  "labelSelector": [
                                                                    "object",
                                                                    {
                                                                      "matchExpressions": [
                                                                        "list",
                                                                        [
                                                                          "object",
                                                                          {
                                                                            "key": "string",
                                                                            "operator": "string",
                                                                            "values": [
                                                                              "list",
                                                                              "string"
                                                                            ]
                                                                          }
                                                                        ]
                                                                      ],
                                                                      "matchLabels": [
                                                                        "map",
                                                                        "string"
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "namespaceSelector": [
                                                                    "object",
                                                                    {
                                                                      "matchExpressions": [
                                                                        "list",
                                                                        [
                                                                          "object",
                                                                          {
                                                                            "key": "string",
                                                                            "operator": "string",
                                                                            "values": [
                                                                              "list",
                                                                              "string"
                                                                            ]
                                                                          }
                                                                        ]
                                                                      ],
                                                                      "matchLabels": [
                                                                        "map",
                                                                        "string"
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "namespaces": [
                                                                    "list",
                                                                    "string"
                                                                  ],
                                                                  "topologyKey": "string"
                                                                }
                                                              ],
                                                              "weight": "number"
                                                            }
                                                          ]
                                                        ],
                                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "labelSelector": [
                                                                "object",
                                                                {
                                                                  "matchExpressions": [
                                                                    "list",
                                                                    [
                                                                      "object",
                                                                      {
                                                                        "key": "string",
                                                                        "operator": "string",
                                                                        "values": [
                                                                          "list",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ]
                                                                  ],
                                                                  "matchLabels": [
                                                                    "map",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ],
                                                              "namespaceSelector": [
                                                                "object",
                                                                {
                                                                  "matchExpressions": [
                                                                    "list",
                                                                    [
                                                                      "object",
                                                                      {
                                                                        "key": "string",
                                                                        "operator": "string",
                                                                        "values": [
                                                                          "list",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ]
                                                                  ],
                                                                  "matchLabels": [
                                                                    "map",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ],
                                                              "namespaces": [
                                                                "list",
                                                                "string"
                                                              ],
                                                              "topologyKey": "string"
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    ],
                                                    "podAntiAffinity": [
                                                      "object",
                                                      {
                                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "podAffinityTerm": [
                                                                "object",
                                                                {
                                                                  "labelSelector": [
                                                                    "object",
                                                                    {
                                                                      "matchExpressions": [
                                                                        "list",
                                                                        [
                                                                          "object",
                                                                          {
                                                                            "key": "string",
                                                                            "operator": "string",
                                                                            "values": [
                                                                              "list",
                                                                              "string"
                                                                            ]
                                                                          }
                                                                        ]
                                                                      ],
                                                                      "matchLabels": [
                                                                        "map",
                                                                        "string"
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "namespaceSelector": [
                                                                    "object",
                                                                    {
                                                                      "matchExpressions": [
                                                                        "list",
                                                                        [
                                                                          "object",
                                                                          {
                                                                            "key": "string",
                                                                            "operator": "string",
                                                                            "values": [
                                                                              "list",
                                                                              "string"
                                                                            ]
                                                                          }
                                                                        ]
                                                                      ],
                                                                      "matchLabels": [
                                                                        "map",
                                                                        "string"
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "namespaces": [
                                                                    "list",
                                                                    "string"
                                                                  ],
                                                                  "topologyKey": "string"
                                                                }
                                                              ],
                                                              "weight": "number"
                                                            }
                                                          ]
                                                        ],
                                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "labelSelector": [
                                                                "object",
                                                                {
                                                                  "matchExpressions": [
                                                                    "list",
                                                                    [
                                                                      "object",
                                                                      {
                                                                        "key": "string",
                                                                        "operator": "string",
                                                                        "values": [
                                                                          "list",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ]
                                                                  ],
                                                                  "matchLabels": [
                                                                    "map",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ],
                                                              "namespaceSelector": [
                                                                "object",
                                                                {
                                                                  "matchExpressions": [
                                                                    "list",
                                                                    [
                                                                      "object",
                                                                      {
                                                                        "key": "string",
                                                                        "operator": "string",
                                                                        "values": [
                                                                          "list",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ]
                                                                  ],
                                                                  "matchLabels": [
                                                                    "map",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ],
                                                              "namespaces": [
                                                                "list",
                                                                "string"
                                                              ],
                                                              "topologyKey": "string"
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "nodeSelector": [
                                                  "map",
                                                  "string"
                                                ],
                                                "priorityClassName": "string",
                                                "serviceAccountName": "string",
                                                "tolerations": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "effect": "string",
                                                      "key": "string",
                                                      "operator": "string",
                                                      "tolerationSeconds": "number",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              }
                                            ]
                                          }
                                        ],
                                        "serviceType": "string"
                                      }
                                    ]
                                  }
                                ],
                                "selector": [
                                  "object",
                                  {
                                    "dnsNames": [
                                      "list",
                                      "string"
                                    ],
                                    "dnsZones": [
                                      "list",
                                      "string"
                                    ],
                                    "matchLabels": [
                                      "map",
                                      "string"
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        }
                      ],
                      "ca": [
                        "object",
                        {
                          "crlDistributionPoints": [
                            "list",
                            "string"
                          ],
                          "ocspServers": [
                            "list",
                            "string"
                          ],
                          "secretName": "string"
                        }
                      ],
                      "selfSigned": [
                        "object",
                        {
                          "crlDistributionPoints": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "vault": [
                        "object",
                        {
                          "auth": [
                            "object",
                            {
                              "appRole": [
                                "object",
                                {
                                  "path": "string",
                                  "roleId": "string",
                                  "secretRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string"
                                    }
                                  ]
                                }
                              ],
                              "kubernetes": [
                                "object",
                                {
                                  "mountPath": "string",
                                  "role": "string",
                                  "secretRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string"
                                    }
                                  ]
                                }
                              ],
                              "tokenSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ],
                          "caBundle": "string",
                          "namespace": "string",
                          "path": "string",
                          "server": "string"
                        }
                      ],
                      "venafi": [
                        "object",
                        {
                          "cloud": [
                            "object",
                            {
                              "apiTokenSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ],
                              "url": "string"
                            }
                          ],
                          "tpp": [
                            "object",
                            {
                              "caBundle": "string",
                              "credentialsRef": [
                                "object",
                                {
                                  "name": "string"
                                }
                              ],
                              "url": "string"
                            }
                          ],
                          "zone": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.vpc.aws_subnet.private",
            "data.aws_availability_zones.available",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "random_string.suffix",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.http.wait_for_cluster",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "mutatingwebhookconfiguration_aws_load_balancer_webhook",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "admissionregistration.k8s.io/v1",
                "kind": "MutatingWebhookConfiguration",
                "metadata": {
                  "annotations": {
                    "cert-manager.io/inject-ca-from": "kube-system/aws-load-balancer-serving-cert"
                  },
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "name": "aws-load-balancer-webhook"
                },
                "webhooks": [
                  {
                    "admissionReviewVersions": [
                      "v1beta1"
                    ],
                    "clientConfig": {
                      "service": {
                        "name": "aws-load-balancer-webhook-service",
                        "namespace": "kube-system",
                        "path": "/mutate-v1-pod"
                      }
                    },
                    "failurePolicy": "Fail",
                    "name": "mpod.elbv2.k8s.aws",
                    "namespaceSelector": {
                      "matchExpressions": [
                        {
                          "key": "elbv2.k8s.aws/pod-readiness-gate-inject",
                          "operator": "In",
                          "values": [
                            "enabled"
                          ]
                        }
                      ]
                    },
                    "objectSelector": {
                      "matchExpressions": [
                        {
                          "key": "app.kubernetes.io/name",
                          "operator": "NotIn",
                          "values": [
                            "aws-load-balancer-controller"
                          ]
                        }
                      ]
                    },
                    "rules": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "apiVersions": [
                          "v1"
                        ],
                        "operations": [
                          "CREATE"
                        ],
                        "resources": [
                          "pods"
                        ]
                      }
                    ],
                    "sideEffects": "None"
                  },
                  {
                    "admissionReviewVersions": [
                      "v1beta1"
                    ],
                    "clientConfig": {
                      "service": {
                        "name": "aws-load-balancer-webhook-service",
                        "namespace": "kube-system",
                        "path": "/mutate-elbv2-k8s-aws-v1beta1-targetgroupbinding"
                      }
                    },
                    "failurePolicy": "Fail",
                    "name": "mtargetgroupbinding.elbv2.k8s.aws",
                    "rules": [
                      {
                        "apiGroups": [
                          "elbv2.k8s.aws"
                        ],
                        "apiVersions": [
                          "v1beta1"
                        ],
                        "operations": [
                          "CREATE",
                          "UPDATE"
                        ],
                        "resources": [
                          "targetgroupbindings"
                        ]
                      }
                    ],
                    "sideEffects": "None"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "cert-manager.io/inject-ca-from": "string"
                        }
                      ],
                      "labels": [
                        "object",
                        {
                          "app.kubernetes.io/name": "string"
                        }
                      ],
                      "name": "string"
                    }
                  ],
                  "webhooks": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "admissionReviewVersions": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "clientConfig": [
                            "object",
                            {
                              "service": [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string",
                                  "path": "string"
                                }
                              ]
                            }
                          ],
                          "failurePolicy": "string",
                          "name": "string",
                          "namespaceSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "key": "string",
                                      "operator": "string",
                                      "values": [
                                        "tuple",
                                        [
                                          "string"
                                        ]
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          "objectSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "key": "string",
                                      "operator": "string",
                                      "values": [
                                        "tuple",
                                        [
                                          "string"
                                        ]
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          "rules": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "apiGroups": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "apiVersions": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "operations": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "resources": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          ],
                          "sideEffects": "string"
                        }
                      ],
                      [
                        "object",
                        {
                          "admissionReviewVersions": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "clientConfig": [
                            "object",
                            {
                              "service": [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string",
                                  "path": "string"
                                }
                              ]
                            }
                          ],
                          "failurePolicy": "string",
                          "name": "string",
                          "rules": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "apiGroups": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "apiVersions": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "operations": [
                                    "tuple",
                                    [
                                      "string",
                                      "string"
                                    ]
                                  ],
                                  "resources": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          ],
                          "sideEffects": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "admissionregistration.k8s.io/v1",
                "kind": "MutatingWebhookConfiguration",
                "metadata": {
                  "annotations": {
                    "cert-manager.io/inject-ca-from": "kube-system/aws-load-balancer-serving-cert"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "managedFields": null,
                  "name": "aws-load-balancer-webhook",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "webhooks": [
                  {
                    "admissionReviewVersions": [
                      "v1beta1"
                    ],
                    "clientConfig": {
                      "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMekNDQWhlZ0F3SUJBZ0lRUFV6YTlHZE44SGEreloyS3JJVVRxekFOQmdrcWhraUc5dzBCQVFzRkFEQUEKTUI0WERUSXhNVEV5TmpBNU5ESTFORm9YRFRJeU1ESXlOREE1TkRJMU5Gb3dBRENDQVNJd0RRWUpLb1pJaHZjTgpBUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT1NYbGdxYWxvN0x4emdnU1YzUytJbE13WEdXQnFabXowNGkyWC9ECm16MzUyZ2NiTW81NzNhSGRJdkt5dEJPUU9pbVVxN2toWXIxNXY2N29BcitPU0N1ZHQvR3NnZ2o5Z25RUUJlclQKMW9TTDExN0RXV05jWG9WRjVueVZhUGdGYlg2eXpXempkbW1EdWFnMFVnUnFZUHdVNEVjRlNTTjRpdE9OVlJqVgpubjd0VFF1K2dHMVdvT2FjMVdla0dBZVFvMzZCbVgvSFhudkxtVHNQVmVPcE5vUkhvbVo5SWZ2L1ZNQzJSTUFBCi9DbVJKMzdKV3pKQmVKRXRLMnovUE50M0pYMHhVSy9ubEFYTm9xOTRJdENwR3B1bTRJNEtZQmJubzlRL1BHa0wKM21SRi9mOG1MN053OGVmTDQzUUljcE5MUmMxVjVnT1U2dzdCT1g2V20yUXN4TWtDQXdFQUFhT0JwRENCb1RBTwpCZ05WSFE4QkFmOEVCQU1DQmFBd0RBWURWUjBUQVFIL0JBSXdBRENCZ0FZRFZSMFJBUUgvQkhZd2RJSXhZWGR6CkxXeHZZV1F0WW1Gc1lXNWpaWEl0ZDJWaWFHOXZheTF6WlhKMmFXTmxMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SS8KWVhkekxXeHZZV1F0WW1Gc1lXNWpaWEl0ZDJWaWFHOXZheTF6WlhKMmFXTmxMbXQxWW1VdGMzbHpkR1Z0TG5OMgpZeTVqYkhWemRHVnlMbXh2WTJGc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTF2Y0Q2OXArMkYvZ21DcVdYCldxY3BSLy94TWtmUkJndVZTeVZvWk1UdDV0dU83YS9SSzd5d0lVYStDSEdDdy9KcytRRDlMcXBQRXB2Vnhjd2UKeWViTzRiNVNFNVBTL0Y3d1pDTWNNNm42VHBNSTcwcy9Ud2t0dXNrandpbFkzMmM4OUdsdldIZ1dKUElhd0MxMApXaGxHQUxBTFp2WjdvUUdxM0wwM2VNamFmRzB5M0MrY2dRYUoyVkJTMDJLWWhCNkliYzNDYW9rdEZRWG5mcFBaCkgxR0cxMS9sOXZ6OWpYQXc2RGlFTS9DQTJWb1JacFo2dGZIM29RVDBLRVA3WTQyVEM2YlExbWtNZEFmQ0lKb2sKb01HanROZjM5QldoNWtrMW9zZ2R4WkhLeVRrZFAyRFpoNXZYSEhzYmFXOHdpRGIvTzV5S1dnWVRhOTBOK0E2UgpLdXhBCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                      "service": {
                        "name": "aws-load-balancer-webhook-service",
                        "namespace": "kube-system",
                        "path": "/mutate-v1-pod",
                        "port": 443
                      },
                      "url": null
                    },
                    "failurePolicy": "Fail",
                    "matchPolicy": "Equivalent",
                    "name": "mpod.elbv2.k8s.aws",
                    "namespaceSelector": {
                      "matchExpressions": [
                        {
                          "key": "elbv2.k8s.aws/pod-readiness-gate-inject",
                          "operator": "In",
                          "values": [
                            "enabled"
                          ]
                        }
                      ],
                      "matchLabels": null
                    },
                    "objectSelector": {
                      "matchExpressions": [
                        {
                          "key": "app.kubernetes.io/name",
                          "operator": "NotIn",
                          "values": [
                            "aws-load-balancer-controller"
                          ]
                        }
                      ],
                      "matchLabels": null
                    },
                    "reinvocationPolicy": "Never",
                    "rules": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "apiVersions": [
                          "v1"
                        ],
                        "operations": [
                          "CREATE"
                        ],
                        "resources": [
                          "pods"
                        ],
                        "scope": "*"
                      }
                    ],
                    "sideEffects": "None",
                    "timeoutSeconds": 10
                  },
                  {
                    "admissionReviewVersions": [
                      "v1beta1"
                    ],
                    "clientConfig": {
                      "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMekNDQWhlZ0F3SUJBZ0lRUFV6YTlHZE44SGEreloyS3JJVVRxekFOQmdrcWhraUc5dzBCQVFzRkFEQUEKTUI0WERUSXhNVEV5TmpBNU5ESTFORm9YRFRJeU1ESXlOREE1TkRJMU5Gb3dBRENDQVNJd0RRWUpLb1pJaHZjTgpBUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT1NYbGdxYWxvN0x4emdnU1YzUytJbE13WEdXQnFabXowNGkyWC9ECm16MzUyZ2NiTW81NzNhSGRJdkt5dEJPUU9pbVVxN2toWXIxNXY2N29BcitPU0N1ZHQvR3NnZ2o5Z25RUUJlclQKMW9TTDExN0RXV05jWG9WRjVueVZhUGdGYlg2eXpXempkbW1EdWFnMFVnUnFZUHdVNEVjRlNTTjRpdE9OVlJqVgpubjd0VFF1K2dHMVdvT2FjMVdla0dBZVFvMzZCbVgvSFhudkxtVHNQVmVPcE5vUkhvbVo5SWZ2L1ZNQzJSTUFBCi9DbVJKMzdKV3pKQmVKRXRLMnovUE50M0pYMHhVSy9ubEFYTm9xOTRJdENwR3B1bTRJNEtZQmJubzlRL1BHa0wKM21SRi9mOG1MN053OGVmTDQzUUljcE5MUmMxVjVnT1U2dzdCT1g2V20yUXN4TWtDQXdFQUFhT0JwRENCb1RBTwpCZ05WSFE4QkFmOEVCQU1DQmFBd0RBWURWUjBUQVFIL0JBSXdBRENCZ0FZRFZSMFJBUUgvQkhZd2RJSXhZWGR6CkxXeHZZV1F0WW1Gc1lXNWpaWEl0ZDJWaWFHOXZheTF6WlhKMmFXTmxMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SS8KWVhkekxXeHZZV1F0WW1Gc1lXNWpaWEl0ZDJWaWFHOXZheTF6WlhKMmFXTmxMbXQxWW1VdGMzbHpkR1Z0TG5OMgpZeTVqYkhWemRHVnlMbXh2WTJGc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTF2Y0Q2OXArMkYvZ21DcVdYCldxY3BSLy94TWtmUkJndVZTeVZvWk1UdDV0dU83YS9SSzd5d0lVYStDSEdDdy9KcytRRDlMcXBQRXB2Vnhjd2UKeWViTzRiNVNFNVBTL0Y3d1pDTWNNNm42VHBNSTcwcy9Ud2t0dXNrandpbFkzMmM4OUdsdldIZ1dKUElhd0MxMApXaGxHQUxBTFp2WjdvUUdxM0wwM2VNamFmRzB5M0MrY2dRYUoyVkJTMDJLWWhCNkliYzNDYW9rdEZRWG5mcFBaCkgxR0cxMS9sOXZ6OWpYQXc2RGlFTS9DQTJWb1JacFo2dGZIM29RVDBLRVA3WTQyVEM2YlExbWtNZEFmQ0lKb2sKb01HanROZjM5QldoNWtrMW9zZ2R4WkhLeVRrZFAyRFpoNXZYSEhzYmFXOHdpRGIvTzV5S1dnWVRhOTBOK0E2UgpLdXhBCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                      "service": {
                        "name": "aws-load-balancer-webhook-service",
                        "namespace": "kube-system",
                        "path": "/mutate-elbv2-k8s-aws-v1beta1-targetgroupbinding",
                        "port": 443
                      },
                      "url": null
                    },
                    "failurePolicy": "Fail",
                    "matchPolicy": "Equivalent",
                    "name": "mtargetgroupbinding.elbv2.k8s.aws",
                    "namespaceSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "objectSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "reinvocationPolicy": "Never",
                    "rules": [
                      {
                        "apiGroups": [
                          "elbv2.k8s.aws"
                        ],
                        "apiVersions": [
                          "v1beta1"
                        ],
                        "operations": [
                          "CREATE",
                          "UPDATE"
                        ],
                        "resources": [
                          "targetgroupbindings"
                        ],
                        "scope": "*"
                      }
                    ],
                    "sideEffects": "None",
                    "timeoutSeconds": 10
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "webhooks": [
                    "list",
                    [
                      "object",
                      {
                        "admissionReviewVersions": [
                          "list",
                          "string"
                        ],
                        "clientConfig": [
                          "object",
                          {
                            "caBundle": "string",
                            "service": [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string",
                                "path": "string",
                                "port": "number"
                              }
                            ],
                            "url": "string"
                          }
                        ],
                        "failurePolicy": "string",
                        "matchPolicy": "string",
                        "name": "string",
                        "namespaceSelector": [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ],
                        "objectSelector": [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ],
                        "reinvocationPolicy": "string",
                        "rules": [
                          "list",
                          [
                            "object",
                            {
                              "apiGroups": [
                                "list",
                                "string"
                              ],
                              "apiVersions": [
                                "list",
                                "string"
                              ],
                              "operations": [
                                "list",
                                "string"
                              ],
                              "resources": [
                                "list",
                                "string"
                              ],
                              "scope": "string"
                            }
                          ]
                        ],
                        "sideEffects": "string",
                        "timeoutSeconds": "number"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "random_string.suffix",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.data.http.wait_for_cluster",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "role_kube_system_aws_load_balancer_controller_leader_election_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "name": "aws-load-balancer-controller-leader-election-role",
                  "namespace": "kube-system"
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "configmaps"
                    ],
                    "verbs": [
                      "create"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resourceNames": [
                      "aws-load-balancer-controller-leader"
                    ],
                    "resources": [
                      "configmaps"
                    ],
                    "verbs": [
                      "get",
                      "update",
                      "patch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "app.kubernetes.io/name": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resourceNames": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "managedFields": null,
                  "name": "aws-load-balancer-controller-leader-election-role",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "configmaps"
                    ],
                    "verbs": [
                      "create"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": [
                      "aws-load-balancer-controller-leader"
                    ],
                    "resources": [
                      "configmaps"
                    ],
                    "verbs": [
                      "get",
                      "update",
                      "patch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.vpc.aws_subnet.private",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "data.aws_availability_zones.available",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "role_kube_system_cluster_autoscaler",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                  "labels": {
                    "k8s-addon": "cluster-autoscaler.addons.k8s.io",
                    "k8s-app": "cluster-autoscaler"
                  },
                  "name": "cluster-autoscaler",
                  "namespace": "kube-system"
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "configmaps"
                    ],
                    "verbs": [
                      "create",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resourceNames": [
                      "cluster-autoscaler-status",
                      "cluster-autoscaler-priority-expander"
                    ],
                    "resources": [
                      "configmaps"
                    ],
                    "verbs": [
                      "delete",
                      "get",
                      "update",
                      "watch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "k8s-addon": "string",
                          "k8s-app": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resourceNames": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-addon": "cluster-autoscaler.addons.k8s.io",
                    "k8s-app": "cluster-autoscaler"
                  },
                  "managedFields": null,
                  "name": "cluster-autoscaler",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "configmaps"
                    ],
                    "verbs": [
                      "create",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": [
                      "cluster-autoscaler-status",
                      "cluster-autoscaler-priority-expander"
                    ],
                    "resources": [
                      "configmaps"
                    ],
                    "verbs": [
                      "delete",
                      "get",
                      "update",
                      "watch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.data.aws_partition.current",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.data.http.wait_for_cluster",
            "random_string.suffix",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "rolebinding_kube_system_aws_load_balancer_controller_leader_election_rolebinding",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "name": "aws-load-balancer-controller-leader-election-rolebinding",
                  "namespace": "kube-system"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Role",
                  "name": "aws-load-balancer-controller-leader-election-role"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "aws-load-balancer-controller",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "app.kubernetes.io/name": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "managedFields": null,
                  "name": "aws-load-balancer-controller-leader-election-rolebinding",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Role",
                  "name": "aws-load-balancer-controller-leader-election-role"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "aws-load-balancer-controller",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc.this",
            "data.aws_availability_zones.available",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.http.wait_for_cluster",
            "random_string.suffix",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.vpc.aws_subnet.private",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role.cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "rolebinding_kube_system_cluster_autoscaler",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                  "labels": {
                    "k8s-addon": "cluster-autoscaler.addons.k8s.io",
                    "k8s-app": "cluster-autoscaler"
                  },
                  "name": "cluster-autoscaler",
                  "namespace": "kube-system"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Role",
                  "name": "cluster-autoscaler"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "cluster-autoscaler",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "k8s-addon": "string",
                          "k8s-app": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-addon": "cluster-autoscaler.addons.k8s.io",
                    "k8s-app": "cluster-autoscaler"
                  },
                  "managedFields": null,
                  "name": "cluster-autoscaler",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Role",
                  "name": "cluster-autoscaler"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "cluster-autoscaler",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.eks.data.http.wait_for_cluster",
            "random_string.suffix",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "rolebinding_kube_system_metrics_server_auth_reader",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "name": "metrics-server-auth-reader",
                  "namespace": "kube-system"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Role",
                  "name": "extension-apiserver-authentication-reader"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "metrics-server",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "k8s-app": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "managedFields": null,
                  "name": "metrics-server-auth-reader",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Role",
                  "name": "extension-apiserver-authentication-reader"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "metrics-server",
                    "namespace": "kube-system"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.vpc.aws_subnet.private",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "random_string.suffix",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "data.aws_availability_zones.available",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "service_kube_system_aws_load_balancer_webhook_service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "name": "aws-load-balancer-webhook-service",
                  "namespace": "kube-system"
                },
                "spec": {
                  "ports": [
                    {
                      "port": 443,
                      "targetPort": 9443
                    }
                  ],
                  "selector": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "app.kubernetes.io/name": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "ports": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "port": "number",
                              "targetPort": "number"
                            }
                          ]
                        ]
                      ],
                      "selector": [
                        "object",
                        {
                          "app.kubernetes.io/component": "string",
                          "app.kubernetes.io/name": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "managedFields": null,
                  "name": "aws-load-balancer-webhook-service",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "allocateLoadBalancerNodePorts": null,
                  "clusterIP": "172.20.175.141",
                  "clusterIPs": [
                    "172.20.175.141"
                  ],
                  "externalIPs": null,
                  "externalName": null,
                  "externalTrafficPolicy": null,
                  "healthCheckNodePort": null,
                  "ipFamilies": null,
                  "ipFamilyPolicy": null,
                  "loadBalancerIP": null,
                  "loadBalancerSourceRanges": null,
                  "ports": [
                    {
                      "appProtocol": null,
                      "name": null,
                      "nodePort": null,
                      "port": 443,
                      "protocol": "TCP",
                      "targetPort": 9443
                    }
                  ],
                  "publishNotReadyAddresses": null,
                  "selector": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "sessionAffinity": "None",
                  "sessionAffinityConfig": {
                    "clientIP": {
                      "timeoutSeconds": null
                    }
                  },
                  "topologyKeys": null,
                  "type": "ClusterIP"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "allocateLoadBalancerNodePorts": "bool",
                      "clusterIP": "string",
                      "clusterIPs": [
                        "list",
                        "string"
                      ],
                      "externalIPs": [
                        "list",
                        "string"
                      ],
                      "externalName": "string",
                      "externalTrafficPolicy": "string",
                      "healthCheckNodePort": "number",
                      "ipFamilies": [
                        "list",
                        "string"
                      ],
                      "ipFamilyPolicy": "string",
                      "loadBalancerIP": "string",
                      "loadBalancerSourceRanges": [
                        "list",
                        "string"
                      ],
                      "ports": [
                        "list",
                        [
                          "object",
                          {
                            "appProtocol": "string",
                            "name": "string",
                            "nodePort": "number",
                            "port": "number",
                            "protocol": "string",
                            "targetPort": "number"
                          }
                        ]
                      ],
                      "publishNotReadyAddresses": "bool",
                      "selector": [
                        "map",
                        "string"
                      ],
                      "sessionAffinity": "string",
                      "sessionAffinityConfig": [
                        "object",
                        {
                          "clientIP": [
                            "object",
                            {
                              "timeoutSeconds": "number"
                            }
                          ]
                        }
                      ],
                      "topologyKeys": [
                        "list",
                        "string"
                      ],
                      "type": "string"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_partition.current",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_availability_zones.available",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "service_kube_system_metrics_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "name": "metrics-server",
                  "namespace": "kube-system"
                },
                "spec": {
                  "ports": [
                    {
                      "name": "https",
                      "port": 443,
                      "protocol": "TCP",
                      "targetPort": "https"
                    }
                  ],
                  "selector": {
                    "k8s-app": "metrics-server"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "k8s-app": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "ports": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "name": "string",
                              "port": "number",
                              "protocol": "string",
                              "targetPort": "string"
                            }
                          ]
                        ]
                      ],
                      "selector": [
                        "object",
                        {
                          "k8s-app": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "managedFields": null,
                  "name": "metrics-server",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "allocateLoadBalancerNodePorts": null,
                  "clusterIP": "172.20.228.163",
                  "clusterIPs": [
                    "172.20.228.163"
                  ],
                  "externalIPs": null,
                  "externalName": null,
                  "externalTrafficPolicy": null,
                  "healthCheckNodePort": null,
                  "ipFamilies": null,
                  "ipFamilyPolicy": null,
                  "loadBalancerIP": null,
                  "loadBalancerSourceRanges": null,
                  "ports": [
                    {
                      "appProtocol": null,
                      "name": "https",
                      "nodePort": null,
                      "port": 443,
                      "protocol": "TCP",
                      "targetPort": "https"
                    }
                  ],
                  "publishNotReadyAddresses": null,
                  "selector": {
                    "k8s-app": "metrics-server"
                  },
                  "sessionAffinity": "None",
                  "sessionAffinityConfig": {
                    "clientIP": {
                      "timeoutSeconds": null
                    }
                  },
                  "topologyKeys": null,
                  "type": "ClusterIP"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "allocateLoadBalancerNodePorts": "bool",
                      "clusterIP": "string",
                      "clusterIPs": [
                        "list",
                        "string"
                      ],
                      "externalIPs": [
                        "list",
                        "string"
                      ],
                      "externalName": "string",
                      "externalTrafficPolicy": "string",
                      "healthCheckNodePort": "number",
                      "ipFamilies": [
                        "list",
                        "string"
                      ],
                      "ipFamilyPolicy": "string",
                      "loadBalancerIP": "string",
                      "loadBalancerSourceRanges": [
                        "list",
                        "string"
                      ],
                      "ports": [
                        "list",
                        [
                          "object",
                          {
                            "appProtocol": "string",
                            "name": "string",
                            "nodePort": "number",
                            "port": "number",
                            "protocol": "string",
                            "targetPort": "string"
                          }
                        ]
                      ],
                      "publishNotReadyAddresses": "bool",
                      "selector": [
                        "map",
                        "string"
                      ],
                      "sessionAffinity": "string",
                      "sessionAffinityConfig": [
                        "object",
                        {
                          "clientIP": [
                            "object",
                            {
                              "timeoutSeconds": "number"
                            }
                          ]
                        }
                      ],
                      "topologyKeys": [
                        "list",
                        "string"
                      ],
                      "type": "string"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_subnet.private",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "random_string.suffix",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "serviceaccount_external_dns",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": {
                    "eks.amazonaws.com/role-arn": "arn:aws:iam::740877495907:role/external-dns-role"
                  },
                  "name": "external-dns-sa",
                  "namespace": "external-dns"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "eks.amazonaws.com/role-arn": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "automountServiceAccountToken": null,
                "imagePullSecrets": null,
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": {
                    "eks.amazonaws.com/role-arn": "arn:aws:iam::740877495907:role/external-dns-role"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "external-dns-sa",
                  "namespace": "external-dns",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "secrets": [
                  {
                    "apiVersion": null,
                    "fieldPath": null,
                    "kind": null,
                    "name": "external-dns-sa-token-hdvth",
                    "namespace": null,
                    "resourceVersion": null,
                    "uid": null
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "automountServiceAccountToken": "bool",
                  "imagePullSecrets": [
                    "list",
                    [
                      "object",
                      {
                        "name": "string"
                      }
                    ]
                  ],
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "secrets": [
                    "list",
                    [
                      "object",
                      {
                        "apiVersion": "string",
                        "fieldPath": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string",
                        "resourceVersion": "string",
                        "uid": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "kubernetes_namespace.external-dns",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.aws_iam_policy_document.external_dns_policy",
            "aws_iam_role.external_dns_role",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.http.wait_for_cluster",
            "data.aws_iam_policy_document.external_dns_assume_role_policy",
            "module.vpc.aws_subnet.private",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_role.cluster",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "serviceaccount_kube_system_aws_load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": {
                    "eks.amazonaws.com/role-arn": "arn:aws:iam::740877495907:role/load-balancer-controller-role"
                  },
                  "labels": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "name": "aws-load-balancer-controller",
                  "namespace": "kube-system"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "eks.amazonaws.com/role-arn": "string"
                        }
                      ],
                      "labels": [
                        "object",
                        {
                          "app.kubernetes.io/component": "string",
                          "app.kubernetes.io/name": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "automountServiceAccountToken": null,
                "imagePullSecrets": null,
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": {
                    "eks.amazonaws.com/role-arn": "arn:aws:iam::740877495907:role/load-balancer-controller-role"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "managedFields": null,
                  "name": "aws-load-balancer-controller",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "secrets": [
                  {
                    "apiVersion": null,
                    "fieldPath": null,
                    "kind": null,
                    "name": "aws-load-balancer-controller-token-wnzm8",
                    "namespace": null,
                    "resourceVersion": null,
                    "uid": null
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "automountServiceAccountToken": "bool",
                  "imagePullSecrets": [
                    "list",
                    [
                      "object",
                      {
                        "name": "string"
                      }
                    ]
                  ],
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "secrets": [
                    "list",
                    [
                      "object",
                      {
                        "apiVersion": "string",
                        "fieldPath": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string",
                        "resourceVersion": "string",
                        "uid": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_partition.current",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.http.wait_for_cluster",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.vpc.aws_subnet.private",
            "aws_iam_role.load_balancer_controller_role",
            "data.aws_eks_cluster_auth.cluster",
            "data.aws_iam_policy_document.load_balancer_controller_assume_role_policy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "serviceaccount_kube_system_cluster_autoscaler",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": {
                    "eks.amazonaws.com/role-arn": "arn:aws:iam::740877495907:role/cluster-autoscaler-role"
                  },
                  "labels": {
                    "k8s-addon": "cluster-autoscaler.addons.k8s.io",
                    "k8s-app": "cluster-autoscaler"
                  },
                  "name": "cluster-autoscaler",
                  "namespace": "kube-system"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "eks.amazonaws.com/role-arn": "string"
                        }
                      ],
                      "labels": [
                        "object",
                        {
                          "k8s-addon": "string",
                          "k8s-app": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "automountServiceAccountToken": null,
                "imagePullSecrets": null,
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": {
                    "eks.amazonaws.com/role-arn": "arn:aws:iam::740877495907:role/cluster-autoscaler-role"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-addon": "cluster-autoscaler.addons.k8s.io",
                    "k8s-app": "cluster-autoscaler"
                  },
                  "managedFields": null,
                  "name": "cluster-autoscaler",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "secrets": [
                  {
                    "apiVersion": null,
                    "fieldPath": null,
                    "kind": null,
                    "name": "cluster-autoscaler-token-ngfng",
                    "namespace": null,
                    "resourceVersion": null,
                    "uid": null
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "automountServiceAccountToken": "bool",
                  "imagePullSecrets": [
                    "list",
                    [
                      "object",
                      {
                        "name": "string"
                      }
                    ]
                  ],
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "secrets": [
                    "list",
                    [
                      "object",
                      {
                        "apiVersion": "string",
                        "fieldPath": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string",
                        "resourceVersion": "string",
                        "uid": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.cluster",
            "data.aws_iam_policy_document.cluster_autoscaler_assume_role_policy",
            "data.aws_iam_policy_document.cluster_autoscaler_policy",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.vpc.aws_vpc.this",
            "random_string.suffix",
            "aws_iam_role.cluster_autoscaler_role",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_security_group.workers",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.vpc.aws_subnet.private",
            "data.aws_eks_cluster.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "serviceaccount_kube_system_metrics_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "name": "metrics-server",
                  "namespace": "kube-system"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "k8s-app": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "automountServiceAccountToken": null,
                "imagePullSecrets": null,
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "k8s-app": "metrics-server"
                  },
                  "managedFields": null,
                  "name": "metrics-server",
                  "namespace": "kube-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "secrets": [
                  {
                    "apiVersion": null,
                    "fieldPath": null,
                    "kind": null,
                    "name": "metrics-server-token-2dn4g",
                    "namespace": null,
                    "resourceVersion": null,
                    "uid": null
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "automountServiceAccountToken": "bool",
                  "imagePullSecrets": [
                    "list",
                    [
                      "object",
                      {
                        "name": "string"
                      }
                    ]
                  ],
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "secrets": [
                    "list",
                    [
                      "object",
                      {
                        "apiVersion": "string",
                        "fieldPath": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string",
                        "resourceVersion": "string",
                        "uid": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.vpc.aws_subnet.private",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.http.wait_for_cluster",
            "random_string.suffix",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "validatingwebhookconfiguration_aws_load_balancer_webhook",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "admissionregistration.k8s.io/v1",
                "kind": "ValidatingWebhookConfiguration",
                "metadata": {
                  "annotations": {
                    "cert-manager.io/inject-ca-from": "kube-system/aws-load-balancer-serving-cert"
                  },
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "name": "aws-load-balancer-webhook"
                },
                "webhooks": [
                  {
                    "admissionReviewVersions": [
                      "v1beta1"
                    ],
                    "clientConfig": {
                      "service": {
                        "name": "aws-load-balancer-webhook-service",
                        "namespace": "kube-system",
                        "path": "/validate-elbv2-k8s-aws-v1beta1-targetgroupbinding"
                      }
                    },
                    "failurePolicy": "Fail",
                    "name": "vtargetgroupbinding.elbv2.k8s.aws",
                    "rules": [
                      {
                        "apiGroups": [
                          "elbv2.k8s.aws"
                        ],
                        "apiVersions": [
                          "v1beta1"
                        ],
                        "operations": [
                          "CREATE",
                          "UPDATE"
                        ],
                        "resources": [
                          "targetgroupbindings"
                        ]
                      }
                    ],
                    "sideEffects": "None"
                  },
                  {
                    "admissionReviewVersions": [
                      "v1beta1"
                    ],
                    "clientConfig": {
                      "service": {
                        "name": "aws-load-balancer-webhook-service",
                        "namespace": "kube-system",
                        "path": "/validate-networking-v1beta1-ingress"
                      }
                    },
                    "failurePolicy": "Fail",
                    "matchPolicy": "Equivalent",
                    "name": "vingress.elbv2.k8s.aws",
                    "rules": [
                      {
                        "apiGroups": [
                          "networking.k8s.io"
                        ],
                        "apiVersions": [
                          "v1beta1"
                        ],
                        "operations": [
                          "CREATE",
                          "UPDATE"
                        ],
                        "resources": [
                          "ingresses"
                        ]
                      }
                    ],
                    "sideEffects": "None"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "cert-manager.io/inject-ca-from": "string"
                        }
                      ],
                      "labels": [
                        "object",
                        {
                          "app.kubernetes.io/name": "string"
                        }
                      ],
                      "name": "string"
                    }
                  ],
                  "webhooks": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "admissionReviewVersions": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "clientConfig": [
                            "object",
                            {
                              "service": [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string",
                                  "path": "string"
                                }
                              ]
                            }
                          ],
                          "failurePolicy": "string",
                          "name": "string",
                          "rules": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "apiGroups": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "apiVersions": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "operations": [
                                    "tuple",
                                    [
                                      "string",
                                      "string"
                                    ]
                                  ],
                                  "resources": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          ],
                          "sideEffects": "string"
                        }
                      ],
                      [
                        "object",
                        {
                          "admissionReviewVersions": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "clientConfig": [
                            "object",
                            {
                              "service": [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string",
                                  "path": "string"
                                }
                              ]
                            }
                          ],
                          "failurePolicy": "string",
                          "matchPolicy": "string",
                          "name": "string",
                          "rules": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "apiGroups": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "apiVersions": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "operations": [
                                    "tuple",
                                    [
                                      "string",
                                      "string"
                                    ]
                                  ],
                                  "resources": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          ],
                          "sideEffects": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "admissionregistration.k8s.io/v1",
                "kind": "ValidatingWebhookConfiguration",
                "metadata": {
                  "annotations": {
                    "cert-manager.io/inject-ca-from": "kube-system/aws-load-balancer-serving-cert"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/name": "aws-load-balancer-controller"
                  },
                  "managedFields": null,
                  "name": "aws-load-balancer-webhook",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "webhooks": [
                  {
                    "admissionReviewVersions": [
                      "v1beta1"
                    ],
                    "clientConfig": {
                      "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMekNDQWhlZ0F3SUJBZ0lRUFV6YTlHZE44SGEreloyS3JJVVRxekFOQmdrcWhraUc5dzBCQVFzRkFEQUEKTUI0WERUSXhNVEV5TmpBNU5ESTFORm9YRFRJeU1ESXlOREE1TkRJMU5Gb3dBRENDQVNJd0RRWUpLb1pJaHZjTgpBUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT1NYbGdxYWxvN0x4emdnU1YzUytJbE13WEdXQnFabXowNGkyWC9ECm16MzUyZ2NiTW81NzNhSGRJdkt5dEJPUU9pbVVxN2toWXIxNXY2N29BcitPU0N1ZHQvR3NnZ2o5Z25RUUJlclQKMW9TTDExN0RXV05jWG9WRjVueVZhUGdGYlg2eXpXempkbW1EdWFnMFVnUnFZUHdVNEVjRlNTTjRpdE9OVlJqVgpubjd0VFF1K2dHMVdvT2FjMVdla0dBZVFvMzZCbVgvSFhudkxtVHNQVmVPcE5vUkhvbVo5SWZ2L1ZNQzJSTUFBCi9DbVJKMzdKV3pKQmVKRXRLMnovUE50M0pYMHhVSy9ubEFYTm9xOTRJdENwR3B1bTRJNEtZQmJubzlRL1BHa0wKM21SRi9mOG1MN053OGVmTDQzUUljcE5MUmMxVjVnT1U2dzdCT1g2V20yUXN4TWtDQXdFQUFhT0JwRENCb1RBTwpCZ05WSFE4QkFmOEVCQU1DQmFBd0RBWURWUjBUQVFIL0JBSXdBRENCZ0FZRFZSMFJBUUgvQkhZd2RJSXhZWGR6CkxXeHZZV1F0WW1Gc1lXNWpaWEl0ZDJWaWFHOXZheTF6WlhKMmFXTmxMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SS8KWVhkekxXeHZZV1F0WW1Gc1lXNWpaWEl0ZDJWaWFHOXZheTF6WlhKMmFXTmxMbXQxWW1VdGMzbHpkR1Z0TG5OMgpZeTVqYkhWemRHVnlMbXh2WTJGc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTF2Y0Q2OXArMkYvZ21DcVdYCldxY3BSLy94TWtmUkJndVZTeVZvWk1UdDV0dU83YS9SSzd5d0lVYStDSEdDdy9KcytRRDlMcXBQRXB2Vnhjd2UKeWViTzRiNVNFNVBTL0Y3d1pDTWNNNm42VHBNSTcwcy9Ud2t0dXNrandpbFkzMmM4OUdsdldIZ1dKUElhd0MxMApXaGxHQUxBTFp2WjdvUUdxM0wwM2VNamFmRzB5M0MrY2dRYUoyVkJTMDJLWWhCNkliYzNDYW9rdEZRWG5mcFBaCkgxR0cxMS9sOXZ6OWpYQXc2RGlFTS9DQTJWb1JacFo2dGZIM29RVDBLRVA3WTQyVEM2YlExbWtNZEFmQ0lKb2sKb01HanROZjM5QldoNWtrMW9zZ2R4WkhLeVRrZFAyRFpoNXZYSEhzYmFXOHdpRGIvTzV5S1dnWVRhOTBOK0E2UgpLdXhBCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                      "service": {
                        "name": "aws-load-balancer-webhook-service",
                        "namespace": "kube-system",
                        "path": "/validate-elbv2-k8s-aws-v1beta1-targetgroupbinding",
                        "port": 443
                      },
                      "url": null
                    },
                    "failurePolicy": "Fail",
                    "matchPolicy": "Equivalent",
                    "name": "vtargetgroupbinding.elbv2.k8s.aws",
                    "namespaceSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "objectSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "rules": [
                      {
                        "apiGroups": [
                          "elbv2.k8s.aws"
                        ],
                        "apiVersions": [
                          "v1beta1"
                        ],
                        "operations": [
                          "CREATE",
                          "UPDATE"
                        ],
                        "resources": [
                          "targetgroupbindings"
                        ],
                        "scope": "*"
                      }
                    ],
                    "sideEffects": "None",
                    "timeoutSeconds": 10
                  },
                  {
                    "admissionReviewVersions": [
                      "v1beta1"
                    ],
                    "clientConfig": {
                      "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMekNDQWhlZ0F3SUJBZ0lRUFV6YTlHZE44SGEreloyS3JJVVRxekFOQmdrcWhraUc5dzBCQVFzRkFEQUEKTUI0WERUSXhNVEV5TmpBNU5ESTFORm9YRFRJeU1ESXlOREE1TkRJMU5Gb3dBRENDQVNJd0RRWUpLb1pJaHZjTgpBUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT1NYbGdxYWxvN0x4emdnU1YzUytJbE13WEdXQnFabXowNGkyWC9ECm16MzUyZ2NiTW81NzNhSGRJdkt5dEJPUU9pbVVxN2toWXIxNXY2N29BcitPU0N1ZHQvR3NnZ2o5Z25RUUJlclQKMW9TTDExN0RXV05jWG9WRjVueVZhUGdGYlg2eXpXempkbW1EdWFnMFVnUnFZUHdVNEVjRlNTTjRpdE9OVlJqVgpubjd0VFF1K2dHMVdvT2FjMVdla0dBZVFvMzZCbVgvSFhudkxtVHNQVmVPcE5vUkhvbVo5SWZ2L1ZNQzJSTUFBCi9DbVJKMzdKV3pKQmVKRXRLMnovUE50M0pYMHhVSy9ubEFYTm9xOTRJdENwR3B1bTRJNEtZQmJubzlRL1BHa0wKM21SRi9mOG1MN053OGVmTDQzUUljcE5MUmMxVjVnT1U2dzdCT1g2V20yUXN4TWtDQXdFQUFhT0JwRENCb1RBTwpCZ05WSFE4QkFmOEVCQU1DQmFBd0RBWURWUjBUQVFIL0JBSXdBRENCZ0FZRFZSMFJBUUgvQkhZd2RJSXhZWGR6CkxXeHZZV1F0WW1Gc1lXNWpaWEl0ZDJWaWFHOXZheTF6WlhKMmFXTmxMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SS8KWVhkekxXeHZZV1F0WW1Gc1lXNWpaWEl0ZDJWaWFHOXZheTF6WlhKMmFXTmxMbXQxWW1VdGMzbHpkR1Z0TG5OMgpZeTVqYkhWemRHVnlMbXh2WTJGc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTF2Y0Q2OXArMkYvZ21DcVdYCldxY3BSLy94TWtmUkJndVZTeVZvWk1UdDV0dU83YS9SSzd5d0lVYStDSEdDdy9KcytRRDlMcXBQRXB2Vnhjd2UKeWViTzRiNVNFNVBTL0Y3d1pDTWNNNm42VHBNSTcwcy9Ud2t0dXNrandpbFkzMmM4OUdsdldIZ1dKUElhd0MxMApXaGxHQUxBTFp2WjdvUUdxM0wwM2VNamFmRzB5M0MrY2dRYUoyVkJTMDJLWWhCNkliYzNDYW9rdEZRWG5mcFBaCkgxR0cxMS9sOXZ6OWpYQXc2RGlFTS9DQTJWb1JacFo2dGZIM29RVDBLRVA3WTQyVEM2YlExbWtNZEFmQ0lKb2sKb01HanROZjM5QldoNWtrMW9zZ2R4WkhLeVRrZFAyRFpoNXZYSEhzYmFXOHdpRGIvTzV5S1dnWVRhOTBOK0E2UgpLdXhBCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                      "service": {
                        "name": "aws-load-balancer-webhook-service",
                        "namespace": "kube-system",
                        "path": "/validate-networking-v1beta1-ingress",
                        "port": 443
                      },
                      "url": null
                    },
                    "failurePolicy": "Fail",
                    "matchPolicy": "Equivalent",
                    "name": "vingress.elbv2.k8s.aws",
                    "namespaceSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "objectSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "rules": [
                      {
                        "apiGroups": [
                          "networking.k8s.io"
                        ],
                        "apiVersions": [
                          "v1beta1"
                        ],
                        "operations": [
                          "CREATE",
                          "UPDATE"
                        ],
                        "resources": [
                          "ingresses"
                        ],
                        "scope": "*"
                      }
                    ],
                    "sideEffects": "None",
                    "timeoutSeconds": 10
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "webhooks": [
                    "list",
                    [
                      "object",
                      {
                        "admissionReviewVersions": [
                          "list",
                          "string"
                        ],
                        "clientConfig": [
                          "object",
                          {
                            "caBundle": "string",
                            "service": [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string",
                                "path": "string",
                                "port": "number"
                              }
                            ],
                            "url": "string"
                          }
                        ],
                        "failurePolicy": "string",
                        "matchPolicy": "string",
                        "name": "string",
                        "namespaceSelector": [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ],
                        "objectSelector": [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ],
                        "rules": [
                          "list",
                          [
                            "object",
                            {
                              "apiGroups": [
                                "list",
                                "string"
                              ],
                              "apiVersions": [
                                "list",
                                "string"
                              ],
                              "operations": [
                                "list",
                                "string"
                              ],
                              "resources": [
                                "list",
                                "string"
                              ],
                              "scope": "string"
                            }
                          ]
                        ],
                        "sideEffects": "string",
                        "timeoutSeconds": "number"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.data.http.wait_for_cluster",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "external-dns",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "external-dns",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "external-dns",
                "resource_version": "308921",
                "uid": "1ca5e6a5-4c80-47e2-93d3-f581761b6e96"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "random_string.suffix",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group.workers",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.vpc.aws_vpc.this",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.http.wait_for_cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_string",
      "name": "suffix",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "RktmQKS9",
            "keepers": null,
            "length": 8,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "override_special": null,
            "result": "RktmQKS9",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "740877495907",
            "arn": "arn:aws:iam::740877495907:user/benny",
            "id": "740877495907",
            "user_id": "AIDA2Y755NZRRW52MXKBU"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_elb_sl_role_creation",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3709839417",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeInternetGateways"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "workers_assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3778018924",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSWorkerAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "http",
      "name": "wait_for_cluster",
      "provider": "provider[\"registry.terraform.io/terraform-aws-modules/http\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "body": "ok",
            "ca_certificate": "-----BEGIN CERTIFICATE-----\nMIIC5zCCAc+gAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMTAyNzEzMTA0NFoXDTMxMTAyNTEzMTA0NFowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOOG\nOoEyWTrCID0okzyfWa+S3zgfB8AmQfBFKyFl50SDR9ukJVIeAlUKci53ABzv345w\nDvQ4qCyD8POwgaaFEm9G/ZX/cZlDqODDVwujCkzpj17xQJ++rSbQDDtDum2+p8m/\nbjkH1ML+gQOFIyhn9Cqf7taIIjGAj7VBLppGsVTg46KeUfdpaE69UFS1V3reZfuq\ndEXqB3NIOLAF7RFGdIdOKmshkQU3DEEG6x5BIS5ipohRpwudgs+4Un22smhEiTrk\n44MMREqUtomM/DlhcGJN59GcPl2v+czIS2EuHtUVfmt4nuHmqxakZmHUEF8VUMv7\nhXy+GrXg/6P8kEDWzFECAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFMG50pDkCEHu+zbSVVS8zn0NEEA6MA0GCSqGSIb3\nDQEBCwUAA4IBAQB1fq5vA5z9MYdzvk6tC9pXUe9y+jINukgpskqH9/oA+okSNQWw\nNYt2HefYRIAvvDMIcp1RXDjAXFrzaZfeZFkwrCjDTgzZ9FxN6vABIfsk9hGsLTqx\nB3h8F1g0CYnAcCjwvZXS7eSmZuffgnvJ5Zu4dt2U9Y87znuXd4skqlthON7lcStM\ntN3yoyn/pjeOZJmvoRhZTGU6Z6BEhNEim8G6Rbk7F8Z0TFGbvQZmdHCmfsCOdgi7\nCYPldD2GjXrWKu7OfeWFnjilPbQfRErlj7Q4GDRbqydtjYwhPhkaxQrvvUtIE5yS\nBIepuR8/Oe0zMqrd3NfN69nsPpCF6UMV5Tsq\n-----END CERTIFICATE-----\n",
            "id": "https://54487F59FC6D9EF387BEA17A97E0F2CE.gr7.eu-west-1.eks.amazonaws.com/healthz",
            "insecure": false,
            "request_headers": null,
            "response_headers": {
              "Cache-Control": "no-cache, private",
              "Content-Length": "2",
              "Content-Type": "text/plain; charset=utf-8",
              "Date": "Wed, 01 Dec 2021 15:19:01 GMT",
              "X-Content-Type-Options": "nosniff",
              "X-Kubernetes-Pf-Flowschema-Uid": "ee3c1e3b-bb52-4395-8a96-27b290dbabcc",
              "X-Kubernetes-Pf-Prioritylevel-Uid": "080c636b-26e7-4beb-88fd-8210d5c04058"
            },
            "timeout": 300,
            "url": "https://54487F59FC6D9EF387BEA17A97E0F2CE.gr7.eu-west-1.eks.amazonaws.com/healthz"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:eu-west-1:740877495907:log-group:/aws/eks/skyworkz-k8s-training-RktmQKS9/cluster",
            "id": "/aws/eks/skyworkz-k8s-training-RktmQKS9/cluster",
            "kms_key_id": "",
            "name": "/aws/eks/skyworkz-k8s-training-RktmQKS9/cluster",
            "name_prefix": null,
            "retention_in_days": 90,
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:eu-west-1:740877495907:cluster/skyworkz-k8s-training-RktmQKS9",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1UQXlOekV6TVRBME5Gb1hEVE14TVRBeU5URXpNVEEwTkZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT09HCk9vRXlXVHJDSUQwb2t6eWZXYStTM3pnZkI4QW1RZkJGS3lGbDUwU0RSOXVrSlZJZUFsVUtjaTUzQUJ6djM0NXcKRHZRNHFDeUQ4UE93Z2FhRkVtOUcvWlgvY1psRHFPRERWd3VqQ2t6cGoxN3hRSisrclNiUUREdER1bTIrcDhtLwpiamtIMU1MK2dRT0ZJeWhuOUNxZjd0YUlJakdBajdWQkxwcEdzVlRnNDZLZVVmZHBhRTY5VUZTMVYzcmVaZnVxCmRFWHFCM05JT0xBRjdSRkdkSWRPS21zaGtRVTNERUVHNng1QklTNWlwb2hScHd1ZGdzKzRVbjIyc21oRWlUcmsKNDRNTVJFcVV0b21NL0RsaGNHSk41OUdjUGwyditjeklTMkV1SHRVVmZtdDRudUhtcXhha1ptSFVFRjhWVU12NwpoWHkrR3JYZy82UDhrRURXekZFQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZNRzUwcERrQ0VIdSt6YlNWVlM4em4wTkVFQTZNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCMWZxNXZBNXo5TVlkenZrNnRDOXBYVWU5eStqSU51a2dwc2txSDkvb0Erb2tTTlFXdwpOWXQySGVmWVJJQXZ2RE1JY3AxUlhEakFYRnJ6YVpmZVpGa3dyQ2pEVGd6WjlGeE42dkFCSWZzazloR3NMVHF4CkIzaDhGMWcwQ1luQWNDand2WlhTN2VTbVp1ZmZnbnZKNVp1NGR0MlU5WTg3em51WGQ0c2txbHRoT043bGNTdE0KdE4zeW95bi9wamVPWkptdm9SaFpUR1U2WjZCRWhORWltOEc2UmJrN0Y4WjBURkdidlFabWRIQ21mc0NPZGdpNwpDWVBsZEQyR2pYcldLdTdPZmVXRm5qaWxQYlFmUkVybGo3UTRHRFJicXlkdGpZd2hQaGtheFFydnZVdElFNXlTCkJJZXB1UjgvT2Uwek1xcmQzTmZONjluc1BwQ0Y2VU1WNVRzcQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
              }
            ],
            "created_at": "2021-10-27 13:04:37.233 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator",
              "controllerManager",
              "scheduler"
            ],
            "encryption_config": [],
            "endpoint": "https://54487F59FC6D9EF387BEA17A97E0F2CE.gr7.eu-west-1.eks.amazonaws.com",
            "id": "skyworkz-k8s-training-RktmQKS9",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "service_ipv4_cidr": "172.20.0.0/16"
              }
            ],
            "name": "skyworkz-k8s-training-RktmQKS9",
            "platform_version": "eks.2",
            "role_arn": "arn:aws:iam::740877495907:role/skyworkz-k8s-training-RktmQKS920211027130405760900000002",
            "status": "ACTIVE",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws"
            },
            "timeouts": {
              "create": "30m",
              "delete": "15m",
              "update": "60m"
            },
            "version": "1.20",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0545c96a506189bb1",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-06824fbfd65bec2ab"
                ],
                "subnet_ids": [
                  "subnet-025fb71362182eb78",
                  "subnet-07b1cd357b572312a",
                  "subnet-0d94daf896771ec40"
                ],
                "vpc_id": "vpc-02711e20b9190fb9e"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_subnet.private",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_vpc.this",
            "random_string.suffix",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "data.aws_availability_zones.available",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::740877495907:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::740877495907:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-eks-irsa"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-eks-irsa"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.eu-west-1.amazonaws.com/id/54487F59FC6D9EF387BEA17A97E0F2CE"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc.this",
            "data.aws_availability_zones.available",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role.cluster",
            "module.vpc.aws_subnet.private"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_elb_sl_role_creation",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::740877495907:policy/skyworkz-k8s-training-RktmQKS9-elb-sl-role-creation20211027130405759900000001",
            "description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
            "id": "arn:aws:iam::740877495907:policy/skyworkz-k8s-training-RktmQKS9-elb-sl-role-creation20211027130405759900000001",
            "name": "skyworkz-k8s-training-RktmQKS9-elb-sl-role-creation20211027130405759900000001",
            "name_prefix": "skyworkz-k8s-training-RktmQKS9-elb-sl-role-creation",
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "policy_id": "ANPA2Y755NZRSHVJ5TOVU",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "random_string.suffix",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::740877495907:role/skyworkz-k8s-training-RktmQKS920211027130405760900000002",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2021-10-27T13:04:06Z",
            "description": "",
            "force_detach_policies": true,
            "id": "skyworkz-k8s-training-RktmQKS920211027130405760900000002",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::740877495907:policy/skyworkz-k8s-training-RktmQKS9-elb-sl-role-creation20211027130405759900000001",
              "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
              "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
            ],
            "max_session_duration": 3600,
            "name": "skyworkz-k8s-training-RktmQKS920211027130405760900000002",
            "name_prefix": "skyworkz-k8s-training-RktmQKS9",
            "path": "/",
            "permissions_boundary": null,
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws"
            },
            "unique_id": "AROA2Y755NZRUVAIBTQVG"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::740877495907:role/skyworkz-k8s-training-RktmQKS920211027131715026400000009",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSWorkerAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2021-10-27T13:17:15Z",
            "description": "",
            "force_detach_policies": true,
            "id": "skyworkz-k8s-training-RktmQKS920211027131715026400000009",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
            ],
            "max_session_duration": 3600,
            "name": "skyworkz-k8s-training-RktmQKS920211027131715026400000009",
            "name_prefix": "skyworkz-k8s-training-RktmQKS9",
            "path": "/",
            "permissions_boundary": null,
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws"
            },
            "unique_id": "AROA2Y755NZRRUBHZBECR"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc.this",
            "random_string.suffix",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_subnet.private",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_availability_zones.available",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSClusterPolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "skyworkz-k8s-training-RktmQKS920211027130405760900000002-20211027130410342300000006",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "skyworkz-k8s-training-RktmQKS920211027130405760900000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix",
            "module.eks.aws_iam_role.cluster"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSServicePolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "skyworkz-k8s-training-RktmQKS920211027130405760900000002-20211027130410342300000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
            "role": "skyworkz-k8s-training-RktmQKS920211027130405760900000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSVPCResourceControllerPolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "skyworkz-k8s-training-RktmQKS920211027130405760900000002-20211027130410342300000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "skyworkz-k8s-training-RktmQKS920211027130405760900000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_elb_sl_role_creation",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "skyworkz-k8s-training-RktmQKS920211027130405760900000002-20211027130410342300000003",
            "policy_arn": "arn:aws:iam::740877495907:policy/skyworkz-k8s-training-RktmQKS9-elb-sl-role-creation20211027130405759900000001",
            "role": "skyworkz-k8s-training-RktmQKS920211027130405760900000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "random_string.suffix",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEC2ContainerRegistryReadOnly",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "skyworkz-k8s-training-RktmQKS920211027131715026400000009-2021102713171815920000000b",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "skyworkz-k8s-training-RktmQKS920211027131715026400000009"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.vpc.aws_subnet.private",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "data.aws_availability_zones.available",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "random_string.suffix",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKSWorkerNodePolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "skyworkz-k8s-training-RktmQKS920211027131715026400000009-2021102713171826870000000c",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "skyworkz-k8s-training-RktmQKS920211027131715026400000009"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "data.aws_availability_zones.available",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_subnet.private",
            "random_string.suffix",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKS_CNI_Policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "skyworkz-k8s-training-RktmQKS920211027131715026400000009-2021102713171815390000000a",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "skyworkz-k8s-training-RktmQKS920211027131715026400000009"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "data.aws_availability_zones.available",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role.cluster",
            "module.vpc.aws_subnet.private",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:740877495907:security-group/sg-06824fbfd65bec2ab",
            "description": "EKS cluster security group.",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow cluster egress access to the Internet.",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-06824fbfd65bec2ab",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Allow pods to communicate with the EKS cluster API.",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0aed1563989496a5e"
                ],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "skyworkz-k8s-training-RktmQKS920211027130420895700000007",
            "name_prefix": "skyworkz-k8s-training-RktmQKS9",
            "owner_id": "740877495907",
            "revoke_rules_on_delete": false,
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-eks_cluster_sg"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-eks_cluster_sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-02711e20b9190fb9e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:740877495907:security-group/sg-0aed1563989496a5e",
            "description": "Security group for all nodes in the cluster.",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow nodes all egress to the Internet.",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0aed1563989496a5e",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Allow node to communicate with each other.",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": true,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-06824fbfd65bec2ab"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Allow workers pods to receive communication from the cluster control plane.",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-06824fbfd65bec2ab"
                ],
                "self": false,
                "to_port": 65535
              }
            ],
            "name": "skyworkz-k8s-training-RktmQKS920211027130422025400000008",
            "name_prefix": "skyworkz-k8s-training-RktmQKS9",
            "owner_id": "740877495907",
            "revoke_rules_on_delete": false,
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-eks_worker_sg",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "owned"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-eks_worker_sg",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-02711e20b9190fb9e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_egress_internet",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow cluster egress access to the Internet.",
            "from_port": 0,
            "id": "sgrule-131726449",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-06824fbfd65bec2ab",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_https_worker_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [],
            "description": "Allow pods to communicate with the EKS cluster API.",
            "from_port": 443,
            "id": "sgrule-3556744987",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-06824fbfd65bec2ab",
            "self": false,
            "source_security_group_id": "sg-0aed1563989496a5e",
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_egress_internet",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow nodes all egress to the Internet.",
            "from_port": 0,
            "id": "sgrule-1739323460",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0aed1563989496a5e",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [],
            "description": "Allow workers pods to receive communication from the cluster control plane.",
            "from_port": 1025,
            "id": "sgrule-4249670291",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0aed1563989496a5e",
            "self": false,
            "source_security_group_id": "sg-06824fbfd65bec2ab",
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster_https",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [],
            "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
            "from_port": 443,
            "id": "sgrule-674984818",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0aed1563989496a5e",
            "self": false,
            "source_security_group_id": "sg-06824fbfd65bec2ab",
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_self",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [],
            "description": "Allow node to communicate with each other.",
            "from_port": 0,
            "id": "sgrule-999720061",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0aed1563989496a5e",
            "self": false,
            "source_security_group_id": "sg-0aed1563989496a5e",
            "to_port": 0,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "aws_auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "mapAccounts": "[]\n",
              "mapRoles": "- \"groups\":\n  - \"system:bootstrappers\"\n  - \"system:nodes\"\n  \"rolearn\": \"arn:aws:iam::740877495907:role/skyworkz-k8s-training-RktmQKS920211027131715026400000009\"\n  \"username\": \"system:node:{{EC2PrivateDNSName}}\"\n- \"groups\":\n  - \"system:masters\"\n  \"rolearn\": \"arn:aws:iam::740877495907:role/AWSReservedSSO_AdministratorAccess_f8a30ed3ca508212\"\n  \"username\": \"sso-admin\"\n",
              "mapUsers": "- \"groups\":\n  - \"system:masters\"\n  \"userarn\": \"arn:aws:iam::740877495907:user/benny\"\n  \"username\": \"benny\"\n"
            },
            "id": "kube-system/aws-auth",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/managed-by": "Terraform",
                  "terraform.io/module": "terraform-aws-modules.eks.aws"
                },
                "name": "aws-auth",
                "namespace": "kube-system",
                "resource_version": "302754",
                "uid": "032ad21d-a4f7-40c2-8065-5470e90882b7"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "local_file",
      "name": "kubeconfig",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: https://54487F59FC6D9EF387BEA17A97E0F2CE.gr7.eu-west-1.eks.amazonaws.com\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1UQXlOekV6TVRBME5Gb1hEVE14TVRBeU5URXpNVEEwTkZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT09HCk9vRXlXVHJDSUQwb2t6eWZXYStTM3pnZkI4QW1RZkJGS3lGbDUwU0RSOXVrSlZJZUFsVUtjaTUzQUJ6djM0NXcKRHZRNHFDeUQ4UE93Z2FhRkVtOUcvWlgvY1psRHFPRERWd3VqQ2t6cGoxN3hRSisrclNiUUREdER1bTIrcDhtLwpiamtIMU1MK2dRT0ZJeWhuOUNxZjd0YUlJakdBajdWQkxwcEdzVlRnNDZLZVVmZHBhRTY5VUZTMVYzcmVaZnVxCmRFWHFCM05JT0xBRjdSRkdkSWRPS21zaGtRVTNERUVHNng1QklTNWlwb2hScHd1ZGdzKzRVbjIyc21oRWlUcmsKNDRNTVJFcVV0b21NL0RsaGNHSk41OUdjUGwyditjeklTMkV1SHRVVmZtdDRudUhtcXhha1ptSFVFRjhWVU12NwpoWHkrR3JYZy82UDhrRURXekZFQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZNRzUwcERrQ0VIdSt6YlNWVlM4em4wTkVFQTZNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCMWZxNXZBNXo5TVlkenZrNnRDOXBYVWU5eStqSU51a2dwc2txSDkvb0Erb2tTTlFXdwpOWXQySGVmWVJJQXZ2RE1JY3AxUlhEakFYRnJ6YVpmZVpGa3dyQ2pEVGd6WjlGeE42dkFCSWZzazloR3NMVHF4CkIzaDhGMWcwQ1luQWNDand2WlhTN2VTbVp1ZmZnbnZKNVp1NGR0MlU5WTg3em51WGQ0c2txbHRoT043bGNTdE0KdE4zeW95bi9wamVPWkptdm9SaFpUR1U2WjZCRWhORWltOEc2UmJrN0Y4WjBURkdidlFabWRIQ21mc0NPZGdpNwpDWVBsZEQyR2pYcldLdTdPZmVXRm5qaWxQYlFmUkVybGo3UTRHRFJicXlkdGpZd2hQaGtheFFydnZVdElFNXlTCkJJZXB1UjgvT2Uwek1xcmQzTmZONjluc1BwQ0Y2VU1WNVRzcQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n  name: eks_skyworkz-k8s-training-RktmQKS9\n\ncontexts:\n- context:\n    cluster: eks_skyworkz-k8s-training-RktmQKS9\n    user: eks_skyworkz-k8s-training-RktmQKS9\n  name: eks_skyworkz-k8s-training-RktmQKS9\n\ncurrent-context: eks_skyworkz-k8s-training-RktmQKS9\n\nusers:\n- name: eks_skyworkz-k8s-training-RktmQKS9\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: aws-iam-authenticator\n      args:\n        - \"token\"\n        - \"-i\"\n        - \"skyworkz-k8s-training-RktmQKS9\"\n",
            "content_base64": null,
            "directory_permission": "0755",
            "file_permission": "0600",
            "filename": "./kubeconfig_skyworkz-k8s-training-RktmQKS9",
            "id": "380fd209758a18403b4dee08b3c37f3320359fdb",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_partition.current",
            "random_string.suffix",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_subnet.private"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.fargate",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.node_groups",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "od1",
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:eu-west-1:740877495907:nodegroup/skyworkz-k8s-training-RktmQKS9/skyworkz-k8s-training-RktmQKS9-od120211130134746818500000003/e4beb88c-fc20-309c-4b1d-bba12e6e1b42",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "skyworkz-k8s-training-RktmQKS9",
            "disk_size": 50,
            "force_update_version": null,
            "id": "skyworkz-k8s-training-RktmQKS9:skyworkz-k8s-training-RktmQKS9-od120211130134746818500000003",
            "instance_types": [
              "m5.large"
            ],
            "labels": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "NodeGroup": "od1"
            },
            "launch_template": [],
            "node_group_name": "skyworkz-k8s-training-RktmQKS9-od120211130134746818500000003",
            "node_group_name_prefix": "skyworkz-k8s-training-RktmQKS9-od1",
            "node_role_arn": "arn:aws:iam::740877495907:role/skyworkz-k8s-training-RktmQKS920211027131715026400000009",
            "release_version": "1.20.11-20211117",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-e4beb88c-fc20-309c-4b1d-bba12e6e1b42"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 1,
                "max_size": 10,
                "min_size": 0
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-025fb71362182eb78",
              "subnet-07b1cd357b572312a",
              "subnet-0d94daf896771ec40"
            ],
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "NodeType": "ondemand"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "NodeType": "ondemand"
            },
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 50
              }
            ],
            "version": "1.20"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.vpc.aws_subnet.private"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "pe",
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:eu-west-1:740877495907:nodegroup/skyworkz-k8s-training-RktmQKS9/skyworkz-k8s-training-RktmQKS9-pe20211130164730315800000001/22beb8df-41b2-5a05-4e15-dac50d05cdb6",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "skyworkz-k8s-training-RktmQKS9",
            "disk_size": 50,
            "force_update_version": null,
            "id": "skyworkz-k8s-training-RktmQKS9:skyworkz-k8s-training-RktmQKS9-pe20211130164730315800000001",
            "instance_types": [
              "m5.large"
            ],
            "labels": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "NodeGroup": "pe",
              "tenant": "kubetrain"
            },
            "launch_template": [],
            "node_group_name": "skyworkz-k8s-training-RktmQKS9-pe20211130164730315800000001",
            "node_group_name_prefix": "skyworkz-k8s-training-RktmQKS9-pe",
            "node_role_arn": "arn:aws:iam::740877495907:role/skyworkz-k8s-training-RktmQKS920211027131715026400000009",
            "release_version": "1.20.11-20211117",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-22beb8df-41b2-5a05-4e15-dac50d05cdb6"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 2,
                "max_size": 4,
                "min_size": 1
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-025fb71362182eb78",
              "subnet-07b1cd357b572312a",
              "subnet-0d94daf896771ec40"
            ],
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "NodeType": "ondemand"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "NodeType": "ondemand"
            },
            "taint": [
              {
                "effect": "NO_SCHEDULE",
                "key": "tenant",
                "value": "kubetrain"
              }
            ],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 50
              }
            ],
            "version": "1.20"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.vpc.aws_subnet.private"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "spot1",
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:eu-west-1:740877495907:nodegroup/skyworkz-k8s-training-RktmQKS9/skyworkz-k8s-training-RktmQKS9-spot120211201152049715300000001/a0bebb4a-c61d-d231-48e1-4f290c49d989",
            "capacity_type": "SPOT",
            "cluster_name": "skyworkz-k8s-training-RktmQKS9",
            "disk_size": 50,
            "force_update_version": null,
            "id": "skyworkz-k8s-training-RktmQKS9:skyworkz-k8s-training-RktmQKS9-spot120211201152049715300000001",
            "instance_types": [
              "m5.large"
            ],
            "labels": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "NodeGroup": "spot1"
            },
            "launch_template": [],
            "node_group_name": "skyworkz-k8s-training-RktmQKS9-spot120211201152049715300000001",
            "node_group_name_prefix": "skyworkz-k8s-training-RktmQKS9-spot1",
            "node_role_arn": "arn:aws:iam::740877495907:role/skyworkz-k8s-training-RktmQKS920211027131715026400000009",
            "release_version": "1.20.11-20211117",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-a0bebb4a-c61d-d231-48e1-4f290c49d989"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 1,
                "max_size": 10,
                "min_size": 0
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-025fb71362182eb78",
              "subnet-07b1cd357b572312a",
              "subnet-0d94daf896771ec40"
            ],
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "NodeType": "spot"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "NodeType": "spot"
            },
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 50
              }
            ],
            "version": "1.20"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.vpc.aws_subnet.private"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": null,
            "associate_with_private_ip": null,
            "association_id": "eipassoc-0dde88149bdf294a4",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-0d67474e3e721fcb4",
            "instance": "",
            "network_border_group": "eu-west-1",
            "network_interface": "eni-00a2e94f306f3ae7a",
            "private_dns": "ip-10-0-4-149.eu-west-1.compute.internal",
            "private_ip": "10.0.4.149",
            "public_dns": "ec2-54-216-2-123.eu-west-1.compute.amazonaws.com",
            "public_ip": "54.216.2.123",
            "public_ipv4_pool": "amazon",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-eu-west-1a"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-eu-west-1a"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:740877495907:internet-gateway/igw-0d0ba6a17b0085f77",
            "id": "igw-0d0ba6a17b0085f77",
            "owner_id": "740877495907",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9"
            },
            "vpc_id": "vpc-02711e20b9190fb9e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-0d67474e3e721fcb4",
            "connectivity_type": "public",
            "id": "nat-08c0e243c79f36588",
            "network_interface_id": "eni-00a2e94f306f3ae7a",
            "private_ip": "10.0.4.149",
            "public_ip": "54.216.2.123",
            "subnet_id": "subnet-0892c54fd9186958f",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-eu-west-1a"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-eu-west-1a"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-0a46f3a31c6807cd31080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-08c0e243c79f36588",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0a46f3a31c6807cd3",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-0d0ba6a17b0085f77",
            "id": "r-rtb-0c09849cf00b713941080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0c09849cf00b71394",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "module.vpc.aws_internet_gateway.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:740877495907:route-table/rtb-0a46f3a31c6807cd3",
            "id": "rtb-0a46f3a31c6807cd3",
            "owner_id": "740877495907",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "instance_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-08c0e243c79f36588",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-private"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-private"
            },
            "timeouts": null,
            "vpc_id": "vpc-02711e20b9190fb9e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "data.aws_availability_zones.available"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:740877495907:route-table/rtb-0c09849cf00b71394",
            "id": "rtb-0c09849cf00b71394",
            "owner_id": "740877495907",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-0d0ba6a17b0085f77",
                "instance_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-public"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-public"
            },
            "timeouts": null,
            "vpc_id": "vpc-02711e20b9190fb9e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "random_string.suffix",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0dc73f61300fc8225",
            "route_table_id": "rtb-0a46f3a31c6807cd3",
            "subnet_id": "subnet-0d94daf896771ec40"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-09d1d0388262d7563",
            "route_table_id": "rtb-0a46f3a31c6807cd3",
            "subnet_id": "subnet-025fb71362182eb78"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0eae3d4e7e28a9d8c",
            "route_table_id": "rtb-0a46f3a31c6807cd3",
            "subnet_id": "subnet-07b1cd357b572312a"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0703b843f88400fed",
            "route_table_id": "rtb-0c09849cf00b71394",
            "subnet_id": "subnet-0892c54fd9186958f"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "data.aws_availability_zones.available"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0c3a9d272866f909f",
            "route_table_id": "rtb-0c09849cf00b71394",
            "subnet_id": "subnet-081933b824cd35cde"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-06efd491fa3b58a85",
            "route_table_id": "rtb-0c09849cf00b71394",
            "subnet_id": "subnet-02052760844098ea0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:740877495907:subnet/subnet-0d94daf896771ec40",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-west-1a",
            "availability_zone_id": "euw1-az2",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-0d94daf896771ec40",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "740877495907",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-private-eu-west-1a",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-private-eu-west-1a",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-02711e20b9190fb9e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:740877495907:subnet/subnet-025fb71362182eb78",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-west-1b",
            "availability_zone_id": "euw1-az3",
            "cidr_block": "10.0.2.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-025fb71362182eb78",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "740877495907",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-private-eu-west-1b",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-private-eu-west-1b",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-02711e20b9190fb9e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:740877495907:subnet/subnet-07b1cd357b572312a",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-west-1c",
            "availability_zone_id": "euw1-az1",
            "cidr_block": "10.0.3.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-07b1cd357b572312a",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "740877495907",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-private-eu-west-1c",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-private-eu-west-1c",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-02711e20b9190fb9e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:740877495907:subnet/subnet-0892c54fd9186958f",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-west-1a",
            "availability_zone_id": "euw1-az2",
            "cidr_block": "10.0.4.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-0892c54fd9186958f",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "740877495907",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-public-eu-west-1a",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-public-eu-west-1a",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-02711e20b9190fb9e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:740877495907:subnet/subnet-081933b824cd35cde",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-west-1b",
            "availability_zone_id": "euw1-az3",
            "cidr_block": "10.0.5.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-081933b824cd35cde",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "740877495907",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-public-eu-west-1b",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-public-eu-west-1b",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-02711e20b9190fb9e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:740877495907:subnet/subnet-02052760844098ea0",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-west-1c",
            "availability_zone_id": "euw1-az1",
            "cidr_block": "10.0.6.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-02052760844098ea0",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "740877495907",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-public-eu-west-1c",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9-public-eu-west-1c",
              "kubernetes.io/cluster/skyworkz-k8s-training-RktmQKS9": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-02711e20b9190fb9e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:740877495907:vpc/vpc-02711e20b9190fb9e",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-022ca5564a7322fbe",
            "default_route_table_id": "rtb-0b8e22c57f1092e75",
            "default_security_group_id": "sg-0405bb1e95f538b6e",
            "dhcp_options_id": "dopt-051a68de4db40d6ff",
            "enable_classiclink": false,
            "enable_classiclink_dns_support": false,
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "id": "vpc-02711e20b9190fb9e",
            "instance_tenancy": "default",
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "main_route_table_id": "rtb-0b8e22c57f1092e75",
            "owner_id": "740877495907",
            "tags": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9"
            },
            "tags_all": {
              "GithubOrg": "skyworkz",
              "GithubRepo": "kubernetes-training-setup-aws",
              "Name": "skyworkz-k8s-training-RktmQKS9"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    }
  ]
}
