name: AWS ECR Deployment

on:
    # push:
    #   branches:
    #     - refactor/leonardo
      # paths:
      #   - '/aws/**'
    workflow_dispatch:

permissions:
    contents: read
    issues: write

jobs:
  aws-ecr-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push image to AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IDE_CLONE_ECR_REPOSITORY: ide-clone
          VSCODE_ECR_REPOSITORY: vscode-k8s
          IMAGE_TAG: latest
        run: |
          cd docker-images
          GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-7)

          # IDE CLONE 
          docker build -t $ECR_REGISTRY/$IDE_CLONE_ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$IDE_CLONE_ECR_REPOSITORY:$GITHUB_SHA_SHORT ./ide-clone-init
          docker push $ECR_REGISTRY/$IDE_CLONE_ECR_REPOSITORY:IMAGE_TAG
          docker push $ECR_REGISTRY/$IDE_CLONE_ECR_REPOSITORY:GITHUB_SHA_SHORT

          # VSCODE-SERVER
          docker build -t $ECR_REGISTRY/$VSCODE_ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$VSCODE_ECR_REPOSITORY:$GITHUB_SHA_SHORT ./vscode-k8s
          docker push $ECR_REGISTRY/$VSCODE_ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$VSCODE_ECR_REPOSITORY:$GITHUB_SHA_SHORT