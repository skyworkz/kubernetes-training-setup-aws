apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubetrain
  namespace: kubetrain
  annotations:
    # add an annotation indicating the issuer to use.
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  rules:
  - host: johndoe.k8s.aws-tests.skyworkz.nl
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kubetrain
            port:
              number: 3000 
  tls:
  - hosts:
    - johndoe.k8s.aws-tests.skyworkz.nl
    secretName: johndoe-tls
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: kubetrain
#   labels:
#     app: kubetrain
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/proxy-read-timeout: 3600
#     nginx.ingress.kubernetes.io/proxy-write-timeout: 3600
#       # nginx.ingress.kubernetes.io/auth-url: "https://oauth2.k8s-training.aws-tests.skyworkz.nl/oauth2/auth?allowed_groups=bennycornelissen-skyworkz,planonsoftware,skyworkz:engineers"
#     nginx.ingress.kubernetes.io/auth-url: "https://oauth2.k8s-training.aws-tests.skyworkz.nl/oauth2/auth"
#     nginx.ingress.kubernetes.io/auth-signin: "https://oauth2.k8s-training.aws-tests.skyworkz.nl/oauth2/start?rd=/redirect/$http_host$escaped_request_uri"
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#       # cert-manager.io/cluster-issuer: "letsencrypt-prod"
#       # nginx.ingress.kubernetes.io/whitelist-source-range: "178.85.97.131/32, 87.209.83.20/32"
# spec:
#   rules:
#   - host: johndoe.k8s-training.aws-tests.skyworkz.nl
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: kubetrain
#             port:
#               number: 3000
#   tls:
#   - hosts:
#     - johndoe.k8s-training.aws-tests.skyworkz.nl
      # secretName: kubetrain-ingress

## Uncomment section below if you want to run Oauth2 proxy on the same $host
# as your ingress. The downside to doing this is that you have to add redirectURIs
# for each ingress to the Dex staticClient config used by OAuth2 Proxy. Typically
# you do not want to do this, and we already expose OAuth2 Proxy on oauth2.<DOMAIN>
# with a generic redirector service so that we don't need to section below at all
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: oauth2-proxy
# spec:
#   type: ExternalName
#   externalName: oauth2-proxy.oauth2-proxy.svc.cluster.local
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: kubetrain-oauth2-proxy
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/proxy-read-timeout: 3600
#     nginx.ingress.kubernetes.io/proxy-write-timeout: 3600
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
# spec:
#   rules:
#   - host: kubedev.k3d.localhost
#     http:
#       paths:
#       - path: /oauth2
#         pathType: Prefix
#         backend:
#           service:
#             name: oauth2-proxy
#             port:
#               number: 80
#   tls:
#   - hosts:
#     - johndoe.k8s-training.aws-tests.skyworkz.nl
#     secretName: kubetrain-ingress
