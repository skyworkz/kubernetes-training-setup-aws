apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-router
  labels:
    app: webhook-router
spec:
  selector:
    matchLabels:
      app: webhook-router
  replicas: 2
  template:
    metadata:
      labels:
        app: webhook-router
    spec:
      # Keep Webhook Router Pods on separate nodes
      # Docs: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: webhook-router
              namespaces:
              - argo
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
        - name: nginx
          image: nginxinc/nginx-unprivileged:1.19-alpine
          ports:
          - containerPort: 8080
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 4
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
      volumes:
        - name: nginx-config
          configMap:
            name: webhook-router-config

