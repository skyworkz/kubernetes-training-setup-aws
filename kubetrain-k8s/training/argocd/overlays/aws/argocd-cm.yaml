apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-cm
data:
  url: https://argocd.k8s-training.aws-tests.skyworkz.nl

  # local users. Caveat: these users are local to ArgoCD. For local users that can be
  # used anywhere in your landscape, scroll down to the staticPasswords section of
  # the Dex config
  accounts.johndoe: login

  dex.config: |
    frontend:
      issuer: Skyworkz Training Platform
      theme: dark
    connectors:
    - type: bitbucket-cloud
      # Required field for connector id.
      id: bitbucket-cloud
      # Required field for connector name.
      name: Bitbucket Cloud
      config:
        # Get field 'clientID' from K8s Secret 'argocd-dex-sso-secret'
        # See https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#sensitive-data-and-sso-client-secrets
        clientID: $argocd-dex-sso-secret-bitbucket:clientID
        clientSecret: $argocd-dex-sso-secret-bitbucket:clientSecret
        redirectURI: http://127.0.0.1:5556/dex/callback
        # Optional teams whitelist, communicated through the "groups" scope.
        # If `teams` is omitted, all of the user's Bitbucket teams are returned when the groups scope is present.
        # If `teams` is provided, this acts as a whitelist - only the user's Bitbucket teams that are in the configured `teams` below will go into the groups claim.  Conversely, if the user is not in any of the configured `teams`, the user will not be authenticated.
        teams:
        - bennycornelissen-skyworkz
        - planonsoftware
        # Optional parameter to include team groups.
        # If enabled, the groups claim of dex id_token will looks like this:
        # ["my_team", "my_team/administrators", "my_team/members"]
        #includeTeamGroups: true
    - type: github
      id: github
      name: Github
      config:
        clientID: $argocd-dex-sso-secret-github:clientID
        clientSecret: $argocd-dex-sso-secret-github:clientSecret
        redirectURI: http://127.0.0.1:5556/dex/callback
        orgs:
        - name: skyworkz
        # Include all teams as claims.
        # - name: my-organization-with-teams
        #   # A white list of teams. Only include group claims for these teams.
        #   teams:
        #   - red-team
        #   - blue-team
        # Flag which indicates that all user groups and teams should be loaded.
        loadAllGroups: false

        # Optional choice between 'name' (default), 'slug', or 'both'.
        #
        # As an example, group claims for member of 'Site Reliability Engineers' in
        # Acme organization would yield:
        #   - ['acme:Site Reliability Engineers'] for 'name'
        #   - ['acme:site-reliability-engineers'] for 'slug'
        #   - ['acme:Site Reliability Engineers', 'acme:site-reliability-engineers'] for 'both'
        teamNameField: slug
        # flag which will switch from using the internal GitHub id to the users handle (@mention) as the user id.
        # It is possible for a user to change their own user name but it is very rare for them to do so
        useLoginAsID: false
    staticClients:
    - id: oauth2-proxy
      name: 'oauth2-proxy'
      secret: proxy
      redirectURIs:
      - 'https://oauth2.k8s-training.aws-tests.skyworkz.nl/oauth2/callback'
    - id: argo-workflows
      name: 'Argo Workflows'
      secret: $argocd-dex-sso-argo-workflows:clientSecret
      redirectURIs:
      - 'https://argo.k8s-training.aws-tests.skyworkz.nl/oauth2/callback'
    # Add support for local users. Caveat is that local users do NOT have
    # any group claims, so any filtering on groups will fail for these users
    #
    # To create a user, you need to create a UUID and a password hash
    # UUID: python -c 'import uuid; print uuid.uuid4()'
    # Password: htpasswd -nBC 14 "" | tr -d ':'
    enablePasswordDB: true
    staticPasswords:
    - email: "benny@skyworkz.cloud"
      username: "benny-cloud"
      userID: "ed1a6555-ecfc-47bf-b4c6-5fd5ccd3bb3b"
      hash: "$2y$14$xIupl8Hw1yPav4oIXXnO6OLZXRdxPoON12ps9HxBlR8PUC4.K3iO."
