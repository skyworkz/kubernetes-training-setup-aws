---
apiVersion: v1
kind: Namespace
metadata:
  name: kubedev
---
apiVersion: v1
kind: LimitRange
metadata:
  name: mem-limit-range
spec:
  limits:
  - default:
      memory: 512Mi
    defaultRequest:
      memory: 256Mi
    type: Container
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubetrain
  namespace: kubedev
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedev-cluster-admin-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubetrain
  namespace: kubedev

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kubetrain-project
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubetrain-git-config
data:
  .gitconfig: |
    [user]
    name = "Test"
    email = "test@foo.com"

---
apiVersion: v1
kind: Secret
metadata:
  name: ssh-config
stringData:
  ssh_config: |
    Host github.com
    User git
    Port 22
    IdentitiesOnly yes
    UserKnownHostsFile /dev/null
    StrictHostKeyChecking no


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubetrain-prepare-ssh-dir
data:
  prepare-ssh-dir: |
    set -eu
    MY_SSH_DIR="/home/theia/.ssh"
    mkdir -p ${MY_SSH_DIR}
    cp /secret/git-ssh-config/config ${MY_SSH_DIR}/config
    cp /secret/git-ssh-key/id_rsa ${MY_SSH_DIR}/id_rsa
    chown -R 1001 ${MY_SSH_DIR}
    ls -lR ${MY_SSH_DIR}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubetrain-git-clone-script
data:
  git-clone: |
    set -eu
    echo "Remote repo: ${GIT_URL}"
    GIT_WORKDIR="/home/project/code"
    GIT_SSH_KEY="/home/theia/.ssh/id_rsa"
    eval $(ssh-agent -s)
    chmod 400 ${GIT_SSH_KEY}
    ssh-add ${GIT_SSH_KEY}
    GIT_NEEDS_CLONING=1
    if [[ -d "${GIT_WORKDIR}/.git" ]]; then
      EXISTING_REMOTE_URL="$(git --git-dir ${GIT_WORKDIR}/.git remote get-url origin)"
      if [[ "${EXISTING_REMOTE_URL}" == "${GIT_URL}" ]]; then
        echo "Nothing to do"
        GIT_NEEDS_CLONING=0
      else
        echo "Remote not matching. Existing data will be deleted"
      fi
    fi
    ls -la
    if [[ "${GIT_NEEDS_CLONING}" -eq 1 ]]; then
      rm -rf ${GIT_WORKDIR}
      git clone ${GIT_URL} ${GIT_WORKDIR}
    fi
    cd ${GIT_WORKDIR} &&
    ls -l
    git status
    CURRENT_GIT_BRANCH="$(git symbolic-ref --short HEAD)"
    REQUIRED_GIT_BRANCH="participant/${MY_NAMESPACE}"
    if [[ "${CURRENT_GIT_BRANCH}" != "${REQUIRED_GIT_BRANCH}" ]]; then
      echo "Resetting Git so we can check out participant branch"
      git reset --hard origin/${CURRENT_GIT_BRANCH}
      echo "Checking out branch ${REQUIRED_GIT_BRANCH}.."
      git checkout -B participant/${MY_NAMESPACE} &&
      git push -u origin participant/${MY_NAMESPACE}
    else
      echo "Already on branch ${REQUIRED_GIT_BRANCH}. Nothing to do."
    fi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kubetrain
  labels:
    app: kubetrain
spec:
  serviceName: kubetrain
  selector:
    matchLabels:
      app: kubetrain
  template:
    metadata:
      labels:
        app: kubetrain
    spec:
      imagePullSecrets:
        - name: regcred
      initContainers:
      - name: prepare-ssh-dir
        image: busybox
        command:
        - /bin/sh
        - -c
        - /prepare-ssh-dir
        volumeMounts:
        - name: prepare-ssh-dir
          mountPath: /prepare-ssh-dir
          subPath: prepare-ssh-dir
        - name: home-ssh
          mountPath: /home/theia/.ssh
        - name: git-ssh-key
          mountPath: /secret/git-ssh-key
        - name: git-ssh-config
          mountPath: /secret/git-ssh-config
      - name: git-clone
        image: ghcr.io/bennycornelissen/theia-clone-init
        env:
        - name: GIT_URL
          valueFrom:
            secretKeyRef:
              name: kubetrain-workspace
              key: git_url
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command:
        - /bin/bash
        - -c
        - /git-clone
        workingDir: /home/project
        volumeMounts:
        - name: home-ssh
          mountPath: /home/theia/.ssh
        - name: project-volume
          mountPath: /home/project
        - name: git-clone
          mountPath: /git-clone
          subPath: git-clone
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
      containers:
      - name: ide
        image: ghcr.io/bennycornelissen/theia-k8s:v3
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: git-config
          mountPath: /home/theia/.gitconfig
          subPath: .gitconfig
        - name: project-volume
          mountPath: /home/project
        - name: home-ssh
          mountPath: /home/theia/.ssh
        ports:
        - containerPort: 3000
        resources:
          requests:
            memory: "500Mi"
            cpu: "100m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
      nodeSelector:
        kubernetes.io/os: linux
        eks.amazonaws.com/capacityType: ON_DEMAND
        tenant: kubetrain
      tolerations:
      - key: "tenant"
        operator: "Equal"
        value: "kubetrain"
        effect: "NoSchedule"
      serviceAccountName: kubetrain
      securityContext:
        fsGroup: 1001
      volumes:
      - name: home-ssh
        emptyDir: {}
      - name: project-volume
        persistentVolumeClaim:
          claimName: kubetrain-project
      - name: git-config
        configMap:
          name: kubetrain-git-config
      - name: prepare-ssh-dir
        configMap:
          name: kubetrain-prepare-ssh-dir
          defaultMode: 0777
      - name: git-clone
        configMap:
          name: kubetrain-git-clone-script
          defaultMode: 0777
      - name: git-ssh-key
        secret:
          secretName: kubetrain-workspace
          defaultMode: 0400
          items:
            - key: git_ssh_key
              path: id_rsa
      - name: git-ssh-config
        secret:
          secretName: ssh-config
          defaultMode: 0444
          items:
            - key: ssh_config
              path: config

---
apiVersion: v1
kind: Service
metadata:
  name: kubetrain
spec:
  selector:
    app: kubetrain
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
    name: kubetrain

