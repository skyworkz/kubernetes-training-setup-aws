apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
  generation: 1
  name: external-dns
  namespace: external-dns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: external-dns
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: arn:aws:iam::267074127319:role/external-dns-role
      creationTimestamp: null
      labels:
        app: external-dns
    spec:
      containers:
      - args:
        - --source=service
        - --source=ingress
        - --domain-filter=k8s-training.aws-tests.skyworkz.nl
        - --provider=aws
        - --policy=upsert-only
        - --aws-zone-type=public
        - --registry=txt
        - --txt-owner-id=my-hostedzone-identifier
        image: k8s.gcr.io/external-dns/external-dns:v0.7.6
        imagePullPolicy: IfNotPresent
        name: external-dns
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        eks.amazonaws.com/capacityType: ON_DEMAND
        kubernetes.io/os: linux
        tenant: kubetrain
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65534
      serviceAccount: external-dns-sa
      serviceAccountName: external-dns-sa
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: tenant
        operator: Equal
        value: kubetrain
