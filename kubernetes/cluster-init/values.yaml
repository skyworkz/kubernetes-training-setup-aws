aws-load-balancer-controller:
  clusterName: skyworkz-k8s-training-m0Mr1GVr
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::267074127319:role/aws-load-balancer-controller-role

cert-manager:
  namespace: cert-manager
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::267074127319:role/cert-manager-role

cluster-autoscaler:
  autoDiscovery:
    clusterName: skyworkz-k8s-training-m0Mr1GVr
  awsRegion: eu-west-1
  deployment:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::267074127319:role/cluster-autoscaler-role
  rbac:
    serviceAccount:
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::267074127319:role/cluster-autoscaler-role

external-dns:
  namespace: external-dns
  commonAnnotations:
    iam.amazonaws.com/role: arn:aws:iam::267074127319:role/external-dns-role
  domainFilters:
    - k8s-training.aws-tests.skyworkz.nl

kubernetes-dashboard:
  namespace: kubernetes-dashboard
  # We are already installing the nginx-ingress controller, so we don't need the dashboard to install it's own.
  nginx:
    enabled:
      false
  # We are already installing cert-manager, so we don't need the dashboard to install it's own.
  cert-manager:
    enabled:
      false

ingress-nginx:
  namespace: ingress-nginx
  controller:
    service:
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
        service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '60'
        service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
