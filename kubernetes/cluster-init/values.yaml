aws-load-balancer-controller:
  fullnameOverride: aws-load-balancer-controller
  namespace: kube-system

  clusterName: skyworkz-k8s-training-m0Mr1GVr
  serviceAccount:
    create: true
    name: aws-load-balancer-controller
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::267074127319:role/aws-load-balancer-controller-role



cert-manager:
  fullnameOverride: cert-manager
  namespace: cert-manager

  serviceAccount:
    name: cert-manager
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::267074127319:role/cert-manager-role



cluster-autoscaler:
  fullnameOverride: cluster-autoscaler
  namespace: kube-system

  autoDiscovery:
    clusterName: skyworkz-k8s-training-m0Mr1GVr
  awsRegion: eu-west-1
  deployment:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::267074127319:role/cluster-autoscaler-role
  rbac:
    serviceAccount:
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::267074127319:role/cluster-autoscaler-role



external-dns:
  fullnameOverride: external-dns
  namespace: kube-system

  serviceAccount:
    create: true
    name: external-dns
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::267074127319:role/external-dns-role
  domainFilters:
    - k8s.aws-tests.skyworkz.nl



ingress-nginx:
  fullnameOverride: ingress-nginx
  namespace: ingress-nginx

  controller:
    replicaCount: 1
    ingressClassResource:
      default: true
    publishService:
      enabled: true
    nodeSelector:
      eks.amazonaws.com/capacityType: ON_DEMAND
    service:
      externalTrafficPolicy: "Local"
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
        service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '60'
        service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
    extraArgs:
      default-ssl-certificate: cert-manager/nginx-default-cert




kubernetes-dashboard:
  fullnameOverride: kubernetes-dashboard
  namespace: kubernetes-dashboard

  # We are already installing the nginx-ingress controller, so we don't need the dashboard to install it's own.
  nginx:
    enabled:
      false
  # We are already installing cert-manager, so we don't need the dashboard to install it's own.
  cert-manager:
    enabled:
      false
  # We are already installing the metrics-server, so we don't need the dashboard to install it's own.
  metrics-server:
    enabled:
      false


metrics-server:
  fullnameOverride: metrics-server
  namespace: kube-system
